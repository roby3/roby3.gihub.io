<html xmlns:mso="urn:schemas-microsoft-com:office:office" xmlns:msdt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882">

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Language" content="uk">
<meta HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<title>1.2. Основні проблеми побудови мереж</title>

<!--[if gte mso 9]><xml>
<mso:CustomDocumentProperties>
<mso:Categories msdt:dt="string">Навчальний метеріал</mso:Categories>
</mso:CustomDocumentProperties>
</xml><![endif]-->
</head>

<body TEXT="#000080">

<h2>1.2. Основні проблеми побудови мереж</h2>
<menu style="list-style-type: none">
  <b>
  <li>1.2.1. <a href="#p1.2.1">Зв'язок комп'ютера з периферійними пристроями</a></li>
  <li>1.2.2. <a href="#p1.2.2">Найпростіший випадок взаємодії двох комп'ютерів
  </a></li>
  <li>1.2.3. <a href="#p1.2.3">Проблеми фізичної передачі даних по лініях 
  зв'язку </a></li>
  <li>1.2.4. <a href="#p1.2.4">Проблеми об'єднання декількох комп'ютерів</a>
  <menu style="list-style-type: none">
    </b>
    <li><a href="#p1.2.4.1">Топологія фізичних зв'язків</a></li>
    <li><a href="#p1.2.4.2">Організація спільного використання ліній зв'язку</a></li>
    <li><a href="#p1.2.4.3">Адресація комп'ютерів</a></li>
  </menu>
  <b></li>
  <li>1.2.5. <a href="#p1.2.5">Ethernet - приклад стандартного розв'язання 
  мережевих проблем</a></li>
  <li>1.2.6. <a href="#p1.2.6">Структуризація як засіб побудови великих мереж
  </a>
  <menu style="list-style-type: none">
    </b>
    <li><a href="#p1.2.6.1">Фізична структуризація мережі</a></li>
    <li><a href="#p1.2.6.2">Логічна структуризація мережі</a></li>
  </menu>
  <b></li>
  <li>1.2.7. <a href="#p1.2.7">Мережеві служби</a></li>
  <li><a href="#v">Висновки</a></li>
</menu>
</b>
<p>При створенні обчислювальних мереж їх розробникам довелося вирішити багато 
проблем. У цьому розділі ми розглянемо тільки найбільш важливі з них, причому в 
тій послідовності, в якій вони природно виникали в процесі розвитку і 
вдосконалення мережевих технологій.</p>
<p>Механізми взаємодії комп'ютерів в мережі багато що запозичили у схеми 
взаємодії комп'ютера з периферійними пристроями, тому почнемо розгляд принципів 
роботи мережі з цього “домережевого” випадку.</p>
<h3><a name="p1.2.1"></a>1.2.1. Зв'язок комп'ютера з периферійними пристроями</h3>
<p>Для обміну даними між комп'ютером і периферійним пристроєм (ПП) в комп'ютері 
передбачений зовнішній <i>інтерфейс</i> (мал. 1.6), тобто набір проводів, що 
з'єднують комп'ютер і периферійний пристрій, а також набір правив обміну 
інформацією по цих проводах (іноді замість терміну інтерфейс <i>вживається</i> 
термін протокол детальніше про ці важливі терміни ми ще поговоримо). Прикладами 
інтерфейсів, що використовуються в комп'ютерах, є паралельний інтерфейс <b>
Centronics</b>,&nbsp; призначений, як правило, для підключення принтерів, і 
послідовний інтерфейс <b>RS-232C</b>, через який підключаються миша, модем і 
багато інших пристроїв. Інтерфейс реалізовується з боку комп'ютера сукупністю 
апаратних і програмних засобів: контролером ПП і спеціальною програмою, керуючою 
цим контролером, яку часто називають драйвером <i><b>&nbsp;відповідного</b></i> 
периферійного пристрою.</p>
<p>Зі сторони ПП інтерфейс частіше за все реалізовується апаратним пристроєм 
управління, хоч зустрічаються і програмно-керовані периферійні пристрої.</p>
<p>Програма, що виконується процесором, може обмінюватися даними за допомогою 
команд введення/виведення з будь-якими модулями, підключеними до внутрішньої 
шини комп'ютера, в тому числі і з контролерами ПП.</p>
<p>Периферійні пристрої можуть приймати від комп'ютера як дані, наприклад байти 
інформації, яку треба роздрукувати на папері, так і команди управління, у 
відповідь на які ПП може виконати спеціальні дії, наприклад перевести головку 
диска на необхідну доріжку або ж виштовхнути лист паперу з принтера. 
Периферійний пристрій використовує зовнішній інтерфейс комп'ютера не тільки для 
прийому інформації, але і для передачі інформації в комп'ютер, тобто обмін 
даними по зовнішньому інтерфейсу, як правило, є двонаправленим. Так, наприклад, 
навіть принтер, який за своїй природою є пристроєм виведення, повертає в 
комп'ютер дані про свій стан.</p>
<p>Контроллери ПП приймають команди і дані від процесора в свій внутрішній 
буфер, який часто називається регістром або портом, потім виконують необхідні 
перетворення цих даних і команд відповідно до форматів, зрозумілих ПП, і видають 
їх на зовнішній інтерфейс.</p>
<p>Розподіл обов'язків між контролером і драйвером ПП може бути різним, але 
звичайно контролер виконує набір простих команд по управлінню ПП, а драйвер 
використовує ці команди, щоб примусити пристрій здійснювати більш складні дії по 
деякому алгоритму. Наприклад, контролер принтера може підтримувати такі 
елементарні команди, як “Друк символу”, “перехід рядка”, “Повернення каретки” і 
т. п. Драйвер же принтера за допомогою цих команд організує друк рядків 
символів, розділення документа на сторінки і інші більш високорівневі операції. 
Для одного і того ж контролера можна розробити різні драйвери, які будуть 
управляти даним ПП по-різному одні краще, а інші гірше&nbsp;&nbsp; в залежності 
від досвіду і здібностей програмістів, їх що розробили.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE"><img border="0" src="images/RIS1_6.gif" width="541" height="601"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE" align="center">МАЛ. 1.6. Зв'язок комп'ютера з 
    периферійним пристроєм</td>
  </tr>
</table>
<p>Розглянемо схему передачі одного байта інформації від прикладної програми на 
периферійний пристрій. Програма, яка&nbsp; повинна виконати обмін даними з ПП, 
звертається до драйвера цього пристрою, повідомляючи йому як параметр адресу 
байта пам'яті, яку треба передати. Драйвер завантажує значення цього байта в 
буфер контролера ПП, який починає послідовно передавати біти в лінію зв'язку, 
представляючи кожний біт відповідним електричним сигналом. Щоб пристрою 
управління ПП стало зрозуміло, що починається передача байта, перед передачею 
першого біта інформації контролер ПП формує стартовий сигнал специфічної форми, 
а після передачі останнього інформаційного біта стоповий сигнал. Ці сигнали <i>
синхронізують</i> передачу байта.</p>
<p>Крім інформаційних бітів, контролер може передавати біт контролю парності для 
підвищення достовірності обміну. Пристрій управління, виявивши на відповідній 
лінії стартовий біт, виконує підготовчі дії і починає приймати інформаційні 
біти, формуючи з них байт в своєму приймальному буфері. Якщо передача 
супроводиться бітом парності, то виконується перевірка правильності передачі: 
при правильно виконаній передачі у відповідному регістрі пристрою управління 
встановлюється ознака завершення прийому інформації.</p>
<p>Звичайно на драйвер покладаються найбільш складні функції протоколу 
(наприклад, підрахунок контрольної суми послідовності байтів, що передаються, 
аналіз стану периферійного пристрою, перевірка правильності виконання команди). 
Але навіть самий примітивний драйвер контролера повинен підтримувати як мінімум 
дві операції: “Взяти дані з контролера в оперативну пам'ять” і “Передати дані з 
оперативної пам'яті в контролер”.</p>
<p>Існують як вельми спеціалізовані інтерфейси, придатні для підключення 
вузького класу пристроїв (наприклад, графічних моніторів високої розподільної 
здатності), так і інтерфейси загального призначення, що є стандартними і що 
дозволяють підключати різні периферійні пристрої. Прикладом такого інтерфейсу є 
інтерфейс <b>RS-232C</b>, який підтримується багатьма терміналами, принтерами, 
маніпуляторами типу “миша” і багатьма іншими пристроями.</p>
<h3><a name="p1.2.2"></a>1.2.2. Найпростіший випадок взаємодії двох комп'ютерів</h3>
<p>У самому простому випадку взаємодія комп'ютерів може бути реалізована за 
допомогою тих же самих засобів, які використовуються для взаємодії комп'ютера з 
периферією, наприклад, через послідовний інтерфейс <b>RS-232C</b>. На відміну 
від взаємодії комп'ютера з периферійним пристроєм, коли програма працює, як 
правило, тільки з одного боку з боку комп'ютера, в цьому випадку відбувається 
взаємодія двох програм, працюючих на кожному з комп'ютерів.</p>
<p>Програма, працююча на одному комп'ютері, не може отримати безпосередній 
доступ до ресурсів іншого комп'ютера його дискам, файлам, принтеру. Вона може 
тільки “попросити” про це програму, працюючу на тому комп'ютері, якому належать 
ці ресурси. Ці “прохання” виражаються у вигляді <i>повідомлень</i>, що 
передаються по каналах зв'язку між комп'ютерами. Повідомлення можуть містити не 
тільки команди на виконання деяких дій, але і власне інформаційні дані 
(наприклад, вміст деякого файла).</p>
<p>Розглянемо випадок, коли користувачеві, який працює з текстовим редактором на 
персональному комп'ютері <font color="#008080"><b>А</b></font>, треба прочитати 
частину деякого файла, розташованого на диску персонального комп'ютера
<font color="#008080"><b>В</b></font> (мал. 1.7). Передбачимо, що ми зв'язали ці 
комп'ютери по кабелю зв'язку через <b>СОМ</b>-порти, які, як відомо, 
реалізовують інтерфейс <b>RS-232C</b> (таке з'єднання часто називають 
нуль-модемним). Нехай для визначеності комп'ютери працюють під управлінням 
MS-DOS, хоч принципового значення в цьому випадку це не має.</p>
<p>Драйвер СОМ-порту разом з контролером СОМ-порту працюють приблизно так само, 
як і у описаному вище разі взаємодії ПП з комп'ютером. Однак при цьому роль 
пристрою управління ПП виконує контролер і драйвер СОМ-порту іншого комп'ютера. 
Разом вони забезпечують передачу по кабелю між комп'ютерами одного байта 
інформації. (У “справжніх” локальних мережах подібні функції передачі даних в 
лінію зв'язку виконуються мережевими адаптерами і їх драйверами.)</p>
<p>Драйвер комп'ютера <b><font color="#008080">В</font></b> періодично опитує 
ознаку завершення прийому, що встановлюється контролером при правильно виконаній 
передачі даних, і при його появі прочитує прийнятий байт з буфера контролера в 
оперативну пам'ять, роблячи його тим самим доступним для програм комп'ютера <b>
<font color="#008080">В</font></b>. В деяких випадках драйвер викликається 
асинхронно, по перериваннях від контролера.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%">
  <tr>
    <td VALIGN="MIDDLE" align="center"><img border="0" src="images/RIS1_7.gif" width="551" height="358"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE" align="center">МАЛ. 1.7. Взаємодія двох комп'ютерів</td>
  </tr>
</table>
<p>Таким чином, в розпорядженні програм комп'ютерів <font color="#008080"><b>А</b></font> 
і <b><font color="#008080">В</font></b> є засіб для передачі одного байта 
інформації. Але задача, що розглядається в нашому прикладі значно складніше, 
оскільки треба передати не один байт, а певну частину заданого файла. Всі 
пов'язані з цим додаткові проблеми повинні вирішити програми більш високого 
рівня, ніж драйвери <nobr>СОМ-порту.</nobr> Для визначеності назвемо такі 
програми комп'ютерів <font color="#008080"><b>А</b></font> і
<font color="#008080"><b>В</b></font> <font color="#008080"><b>додатком А</b></font> 
і <b><font color="#008080">додатком В</font></b> відповідно. Отже, <b>
<font color="#008080">додаток А</font></b> повинен сформувати повідомлення-запит 
для <font color="#008080"><b>додатку В</b></font>. В запиті необхідно указати 
ім'я файла, тип операції (в цьому випадку читання), зміщення і розмір області 
файла, що містить потрібні дані.</p>
<p>Щоб передати це повідомлення <font color="#008080"><b>комп'ютеру В</b></font>,
<b><font color="#008080">додаток А </font></b>звертається до драйвера СОМ-порту, 
повідомляючи йому адресу в оперативній пам'яті, по якій драйвер знаходить 
повідомлення і потім передає його байт за байтом <font color="#008080"><b>
додатку В</b></font>. <font color="#008080"><b>Додаток В</b></font>, прийнявши 
запит, виконує його, тобто прочитує необхідну область файла з диска за допомогою 
засобів локальної ОС в буферну область своєї оперативної пам'яті, а далі за 
допомогою драйвера СОМ-порту передає прочитані дані по каналу зв'язку в <b>
<font color="#008080">комп'ютер А</font></b>, де вони і попадають до <b>
<font color="#008080">додатку А</font></b>.</p>
<p>Описані функції <b><font color="#008080">додатку А</font></b> могла б 
виконати сама програма текстового редактора, але включати ці функції до складу 
кожного додатку текстових редакторів, графічних редакторів, систем управління 
базами даних і інших додатків, яким потрібен доступ до файлів, не дуже 
раціонально (хоч існує велика кількість програм, які дійсно самостійно вирішують 
всі задачі по міжмашинному обміну даними, наприклад Kermit програма обміну 
файлами через СОМ-порти, реалізована для різних ОС, Norton Commander 3.0 з його 
функцією Link). Набагато вигідніше створити спеціальний програмний модуль, який 
буде виконувати функції формування повідомлень-запитів і прийому результатів для 
всіх додатків комп'ютера. Як вже було раніше сказано, такий службовий модуль 
називається клієнтом. На стороні ж <font color="#008080"><b>комп'ютера В</b></font> 
повинен працювати інший модуль <font color="#FF0000">сервер</font>, що постійно 
чекає приходу запитів на виділений доступ до файлів, розташованих на диску цього 
комп'ютера. Сервер, прийнявши запит з мережі, звертається до локального файла і 
виконує з ним задані дії, можливо, з участю локальної ОС.</p>
<p>Програмні клієнт і сервер виконують системні функції по обслуговуванню 
запитів додатків <font color="#008080"><b>комп'ютера А</b></font> на виділений 
доступ до файлів <font color="#008080"><b>комп'ютера В</b></font>. Щоб додаток
<font color="#008080"><b>комп'ютера В</b></font> міг користуватися файлами
<font color="#008080"><b>комп'ютера А</b></font>, описану схему треба симетрично 
доповнити клієнтом для <b><font color="#008080">комп'ютера В</font></b> і 
сервером<b><font color="#008080"> для комп'ютера А</font></b>.</p>
<p>Схема взаємодії клієнта і сервера з додатками і операційною системою 
приведена на мал. 1.8. Незважаючи на те що ми розглянули дуже просту схему 
апаратного зв'язку комп'ютерів, функції програм, що забезпечують доступ до 
виділених файлів, дуже схожі на функції модулів мережевої операційної системи, 
працюючій в мережі з більш складними апаратними зв'язками комп'ютерів.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE"><img border="0" src="images/RIS1_8.gif" width="535" height="386"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.8. Взаємодія програмних компонентів при зв'язку 
    двох комп'ютерів</td>
  </tr>
</table>
<p>Дуже зручною і корисною функцією клієнтської програми є здатність відрізнити 
запит до виділеного файла від запиту до локального файла. Якщо клієнтська 
програма уміє це робити, то додатки не повинні піклуватися про те, з яким файлом 
вони працюють (локальним або виділеним), клієнтська програма сама розпізнає і 
перенаправляє<i> (redirect) запит</i> до виділеної машини. Звідси і назва, що 
часто використовується для клієнтської частини мережевої ОС, <i><b>редиректор</b></i>. 
Іноді функції розпізнавання виділяються в окремий програмний модуль, в цьому 
випадку <b>редиректором</b> називають не всю клієнтську частину, а тільки цей 
модуль.</p>
<h3><a name="p1.2.3"></a>1.2.3. Проблеми фізичної передачі даних по лініях 
зв'язку</h3>
<p>Навіть при розгляді найпростішої мережі, що перебуває усього з двох машин, 
можна побачити багато які проблеми, властиві будь-якій обчислювальній мережі, в 
тому числі проблеми, пов'язаній з фізичною передачею сигналів по лініях зв'язку, 
без вирішення якої неможливий будь-який вид зв'язку.</p>
<p>У обчислювальній техніці для представлення даних використовується двійковий 
код. Всередині комп'ютера одиницям і нулям даних відповідають дискретні 
електричні сигнали. Представлення даних у вигляді електричних або оптичних 
сигналів називається <i>кодуванням</i>. Існують різні способи кодування 
двійкових цифр <b>1</b> і <b>0</b>, наприклад, потенційний спосіб, при якому 
одиниці відповідає один рівень напруги, а нулю іншій, або імпульсний спосіб, 
коли для представлення цифр використовуються імпульси різної або однієї 
полярності.</p>
<p>Аналогічні підходи можуть бути використані для кодування даних і при передачі 
їх між двома комп'ютерами по лініях зв'язку. Однак ці лінії зв'язку 
відрізняються за своїми електричними характеристиками від тих, які існують 
всередині комп'ютера. Головна відмінність зовнішніх ліній зв'язку від внутрішніх 
складається в їх набагато більшій протяжності, а також в тому, що вони проходять 
поза екранованим корпусом по просторах, часто схильних до впливу сильних 
електромагнітних перешкод. Все це приводить до значно більших спотворень 
прямокутних імпульсів (наприклад, “завалленню” фронтів), чим всередині 
комп'ютера. Тому для надійного розпізнавання імпульсів на приймальному кінці 
лінії зв'язку при передачі даних всередині і поза комп'ютером не завжди можна 
використати одні і ті ж швидкості і способи кодування. Наприклад, повільне 
наростання фронту імпульсу через високе ємкісний навантаження лінії вимагає 
передачі імпульсів з меншою швидкістю (щоб передній і задній фронти сусідніх 
імпульсів не перекривалися і імпульс встиг дорости до необхідного рівня).</p>
<p>У обчислювальних мережах застосовують як потенційне, так і імпульсне 
кодування дискретних даних, а також специфічний спосіб представлення даних, який 
ніколи не використовується всередині комп'ютера, <i>модуляцію </i>(мал. 1.9). 
При модуляції дискретна інформація представляється синусоідальним сигналом тієї 
частоти, яку добре передає лінія зв'язку, що існує. </p>
<p>Потенційне або імпульсне кодування застосовується на каналах високої якості, 
а модуляція на основі синусоідальних сигналів переважно в тому випадку, коли 
канал вносить сильно спотворені&nbsp; сигнали, що передаються. Звичайно 
модуляція використовується в глобальних мережах при передачі даних через 
аналогові телефонні канали зв'язку, які були розроблені для передачі голосу в 
аналоговій формі і тому погано підходять для безпосередньої передачі імпульсів.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE"><img border="0" src="images/RIS1_9.gif" width="436" height="260"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.9. Приклади представлення дискретної інформації</td>
  </tr>
</table>
<p>На спосіб передачі сигналів впливає і кількість проводів в лініях зв'язку між 
комп'ютерами. Для скорочення вартості ліній зв'язку в мережах звичайно прагнуть 
до скорочення кількості проводів і через це використовують не паралельну 
передачу всіх біт одного байта або навіть декількох байт, як це робиться 
всередині комп'ютера, а послідовну, побітную передачу, що вимагає усього однієї 
пари проводів.</p>
<p>Ще однією проблемою, яку треба вирішувати при передачі сигналів, є проблема 
взаємної <i>синхронізації </i>передавача одного комп'ютера з приймачем іншого. 
При організації взаємодії модулів всередині комп'ютера ця проблема вирішується 
дуже просто, оскільки в цьому випадку всі модулі синхронізуються від загального 
тактового генератора. Проблема синхронізації при зв'язку комп'ютерів може 
вирішуватися різними способами, як за допомогою обміну спеціальними тактовими 
синхроімпульсами по окремій лінії, так і за допомогою періодичної синхронізації 
заздалегідь зумовленими кодами або імпульсами характерної форми, відмінної від 
форми імпульсів даних.</p>
<p>Незважаючи на заходи, що робляться вибір відповідної швидкості обміну даними, 
ліній зв'язку з певними характеристиками, способу синхронізації приймача і 
передавача, існує імовірність спотворення деяких біт даних, що передаються. Для 
підвищення надійності передачі даних між комп'ютерами часто використовується 
стандартний прийом підрахунок <i>контрольної суми </i>і передача її по лініях 
зв'язку після кожного байта або після деякого блоку байтів. Часто в протокол 
обміну даними включається як обов'язковий елемент сигнал-квитанція, який 
підтверджує правильність прийому даних і посилається від одержувача відправнику.</p>
<p>Задачі надійного обміну двійковими сигналами, представленими відповідними 
електромагнітними сигналами, в обчислювальних мережах вирішує певний клас 
обладнання. У локальних мережах це <i>мережеві адаптери</i>, а в глобальних 
мережах апаратура передачі даних, до якої відносяться, наприклад, пристрої, що 
виконують модуляцію і демодуляцію дискретних сигналів, <i>модеми</i>. Це 
обладнання кодує і декодує кожний інформаційний біт, синхронізує передачу 
електромагнітних сигналів по лініях зв'язку, перевіряє правильність передачі по 
контрольній сумі і може виконувати деякі інші операції. Мережеві адаптери 
розраховані, як правило, на роботу з певною <i>передаючою середою</i> 
коаксіальним кабелем, вітою парою, оптоволокном і т. п. Кожний тип передаючої 
середи володіє певними електричними характеристиками, що впливають на спосіб 
використання даної середи, і визначає швидкість передачі сигналів, спосіб їх 
кодування і деякі інші параметри.</p>
<h3><a name="p1.2.4"></a>1.2.4. Проблеми об'єднання декількох комп'ютерів</h3>
<p>Досі ми розглядали мережу, яка вироджена, що перебуває усього з двох машин. 
При об'єднанні в мережу більшого числа комп'ютерів виникає цілий комплекс нових 
проблем.</p>
<h4><a name="p1.2.4.1"></a>Топологія фізичних зв'язків</h4>
<p>Насамперед необхідно вибрати спосіб організації фізичних зв'язків, тобто <i>
топологію</i>. Під топологією обчислювальної мережі розуміється конфігурація 
графа, вершинам якого відповідають комп'ютери мережі (іноді і інше обладнання, 
наприклад концентратори), а ребрам фізичні зв'язки між ними. Комп'ютери, 
підключені до мережі, часто називають станціями<i> або</i> вузлами<i> мережі</i>.</p>
<p>Помітимо, що конфігурація <i>фізичних зв'язків </i>визначається електричними 
з'єднаннями комп'ютерів між собою і може відрізнятися від конфігурації <i>
логічних зв'язків </i>між вузлами мережі. Логічні зв'язки являють собою маршрути 
передачі даних між вузлами мережі і утворяться шляхом відповідної настройки 
комунікаційного обладнання.</p>
<p>Вибір топології електричних зв'язків істотно впливає на багато які 
характеристики мережі. Наприклад, наявність резервних зв'язків підвищує 
надійність мережі і робить можливим балансування завантаження окремих каналів. 
Простота приєднання нових вузлів, властива деяким топологіям, робить мережу 
легко що розширюється. Економічні міркування часто приводять до вибору 
топологій, для яких характерна мінімальна сумарна довжина ліній зв'язку.</p>
<p>Розглянемо деякі, що найчастіше зустрічаються топології.</p>
<p><img SRC="images/RIS1_10a.gif" ALIGN="LEFT" HSPACE="5" VSPACE="5" width="95" height="159"> <b><i>
Повнозв'язна</i></b> топологія (мал. 1.10, а) відповідає мережі, в якій кожний 
комп'ютер мережі пов'язаний з всіма іншими. Незважаючи на логічну простоту, цей 
варіант виявляється громіздким і неефективним. Дійсно, кожний комп'ютер в мережі 
повинен мати велику кількість комунікаційних портів, достатню для зв'язку з 
кожним з інших комп'ютерів мережі. Для кожної пари комп'ютерів повинна бути 
виділена окрема електрична лінія зв'язку. Повнозв'язана топологія застосовуються 
рідко, оскільки не задовольняє жодній з приведених вище вимог. Частіше цей 
вигляд топології використовується в багатомашинних комплексах або глобальних 
мережах при невеликій кількості комп'ютерів.</p>
<p>Всі інші варіанти засновані на неповнозв'язаних топологіях, коли для обміну 
даними між двома комп'ютерами може бути потрібна проміжна передача даних через 
інші вузли мережі.</p>
<p><img SRC="images/RIS1_gif_6.gif" ALIGN="LEFT" HSPACE="1" VSPACE="1" width="167" height="53"> <b><i>
Коміркова</i></b> топологія (<i>mesh</i>) виходить з повнозв'язної шляхом 
видалення деяких можливих зв'язків (<nobr>мал. 1.10б, </nobr>). У мережі з 
комірковою топологією&nbsp; зв'язуються тільки ті комп'ютери, між якими 
відбувається інтенсивний обмін даними, а для обміну даними між комп'ютерами, не 
сполученими прямими зв'язками, використовуються транзитні передачі через 
проміжні вузли. Коміркова топологія допускає з'єднання великої кількості 
комп'ютерів і характерна, як правило, для глобальних мереж. </p>
<p><img SRC="images/RIS1_gif_7.gif" ALIGN="LEFT" HSPACE="1" VSPACE="1" width="57" height="148"> <b><i>
Загальна шина </i></b>&nbsp;(мал. 1.10, в) є дуже поширеною (а донедавна самою 
поширеною) топологією для локальних мереж. У цьому випадку комп'ютери 
підключаються до одного коаксіального кабелю по схемі “монтажного АБО”. 
Інформація, що Передається може розповсюджуватися в обидві сторони. Застосування 
загальної шини знижує вартість проводки, уніфікує підключення різних модулів, 
забезпечує можливість майже миттєвого широкомовного звертання до всіх станцій 
мережі. Таким чином, основними перевагами такої схеми є дешевизна і простота 
розводки кабелю по приміщеннях. Самий серйозний недолік загальної шини полягає в 
її низькій надійності: будь-який дефект кабелю або якого-небудь з численних 
роз'ємів повністю паралізує всю мережу. На жаль, дефект коаксіального роз'єму 
рідкістю не є. Іншим недоліком загальної шини є її невисока продуктивність, 
оскільки при такому способі підключення в кожний момент часу тільки один 
комп'ютер може передавати дані в мережу. Тому пропускна спроможність каналу 
зв'язку завжди ділиться тут між всіма вузлами мережі.</p>
<p><img SRC="images/RIS1_gif_8.gif" ALIGN="LEFT" HSPACE="1" VSPACE="1" width="80" height="60"> <i><b>
Топологія зірка </b></i>&nbsp;(мал. 1.10, г). У цьому випадку кожний комп'ютер 
підключається окремим кабелем до загального пристрою, званого <i>концентратором</i>, 
який знаходиться в центрі мережі. У функції концентратора входить напрям 
інформації, що передається комп'ютером одному або всім іншим комп'ютерам мережі. 
Головна перевага цієї топології перед загальною шиною істотно більша надійність. 
Будь-які прикрощі з кабелем торкаються лише того комп'ютера, до якого цей кабель 
приєднаний, і тільки несправність концентратора може вивести з ладу всю мережу. 
Крім того, концентратор може грати роль інтелектуального фільтра інформації, що 
поступає від вузлів в мережу, і при необхідності блокувати заборонені 
адміністратором передачі.</p>
<p><img SRC="images/RIS1_gif_9.gif" ALIGN="LEFT" HSPACE="2" VSPACE="2" width="167" height="87"> До 
недоліків топології типу зірка відноситься більш висока вартість мережевого 
обладнання через необхідність придбання концентратора. Крім того, можливості по 
нарощуванню кількості вузлів в мережі обмежуються кількістю портів 
концентратора. Іноді доцільно будувати мережу з використанням декількох 
концентраторів, ієрархічно сполучених між собою зв'язками типу зірка (мал. 1.10,
<i>д</i>). У наш час ієрархічна зірка є самим поширеним типом топології зв'язків 
як в локальних, так і глобальних мережах.</p>
<p>&nbsp;</p>
<p><img SRC="images/RIS1_gif_10.gif" ALIGN="LEFT" HSPACE="1" VSPACE="1" width="113" height="87"> У 
мережах з <b><i>кільцевою </i></b>конфігурацією (мал. 1.10, <i>е</i>) дані 
передаються по кільцю від одного комп'ютера до іншого, як правило, в одному 
напрямі. Якщо комп'ютер розпізнає дані як “свої”, то він копіює їх собі у 
внутрішній буфер. У мережі з кільцевою топологією необхідно вживати спеціальні 
заходів, щоб у разі виходу з ладу або відключення якої-небудь станції не урився 
канал зв'язку між іншими станціями. Кільце являє собою дуже зручну конфігурацію 
для організації зворотної зв'язки дані, зробивши повний обіг, повертаються до 
вузла-джерела. Тому цей вузол може контролювати процес доставки даних адресату. 
Часто ця властивість кільця використовується для тестування зв'язаності мережі і 
пошуку вузла, працюючого некоректно. Для цього в мережу посилаються спеціальні 
тестові повідомлення.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%">
  <tr>
    <td VALIGN="MIDDLE" align="center">
    <img border="0" src="images/RIS1_gif_11.gif" width="398" height="289"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE" align="center">МАЛ. 1.10. Типові топології мереж</td>
  </tr>
</table>
<p>У той час як невеликі мережі, як правило, мають типову топологію зірка, 
кільце або загальна шина, для великих мереж характерна наявність довільних 
зв'язків між комп'ютерами. У таких мережах можна виділити окремі довільно 
пов'язані фрагменти (підмережі), що мають типову топологію, тому їх називають 
мережами зі змішаною<i> топологією</i> (<i>мал.</i> 1.11).</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE"><img border="0" src="images/RIS1_gif_12.gif" width="220" height="195"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.11. Змішана топологія</td>
  </tr>
</table>
<h4><a name="p1.2.4.2"></a>Організація спільного використання ліній зв'язку</h4>
<p>Тільки в мережі з повнозв'язаній топологією для з'єднання кожної пари 
комп'ютерів є окрема лінія зв'язку. У всіх інших випадках неминуче виникає 
питання про те, як організувати спільне використання ліній зв'язку декількома 
комп'ютерами мережі. Як і завжди при розділенні ресурсів, головною метою тут є 
здешевлення мережі.</p>
<p>У обчислювальних мережах використовують як індивідуальні лінії зв'язку між 
комп'ютерами, так і <i>що розділяються (shared)</i>, коли одна лінія зв'язку 
навперемінно використовується декількома комп'ютерами. У разі застосування ліній 
зв'язку (часто використовується також термін середовище передачі, що 
розділяється даними&nbsp;&nbsp; shared media), що розділяються виникає комплекс 
проблем, пов'язаних з їх спільним використанням, який включає як чисто 
електричні проблеми забезпечення потрібної якості сигналів при підключенні до 
одному і того ж проводу декількох приймачів і передавачів, так і логічні 
проблеми розділення під час доступу до цих ліній.</p>
<p>Класичним прикладом мережі з лініями зв'язку, що розділяються є мережі з 
топологією “загальна шина”, в яких один кабель спільно використовується всіма 
комп'ютерами мережі. Жоден з комп'ютерів мережі в принципі не може 
індивідуально, незалежно від всіх інших комп'ютерів мережі, використати кабель, 
оскільки при одночасній передачі даних відразу декількома вузлами сигнали 
змішуються і спотворюються. У топологіях “кільце” або “зірка” індивідуальне 
використання ліній зв'язку, що з'єднують комп'ютери, принципово можливо, але ці 
кабелі часто також розглядають як мережі, що розділяються для всіх комп'ютерів, 
так що, наприклад, тільки один комп'ютер кільця має право в даний момент часу 
відправляти по кільцю пакети іншим комп'ютерам.</p>
<p>Існують різні способи рішення задачі організації спільного доступу до ліній 
зв'язку, що розділяються. Всередині комп'ютера проблеми розділення ліній зв'язку 
між різними модулями також існують прикладом є доступ до системної шини, яким 
управляє або процесор, або спеціальний арбітр шини. У мережах організація 
спільного доступу до ліній зв'язку має свою специфіку через істотно більший час 
поширення сигналів по довгих проводах, до того ж цей час для різних пар 
комп'ютерів може бути різним. Через це процедури узгодження доступу до лінії 
зв'язку можуть займати дуже великий проміжок часу і приводити до значних втрат 
продуктивності мережі.</p>
<p>Незважаючи на всі ці складності, в локальних мережах лінії зв'язку, що 
розділяються використовуються дуже часто. Цей підхід, зокрема, реалізований в 
широко поширених класичних технологіях <b>Ethernet </b>і <b>Token Ring</b>. 
Однак в останні роки намітилася тенденція відмови від серед передачі даних, що 
розділяються і в локальних мережах. Це пов'язано з тим, що за здешевлення 
мережі, що досягається таким чином доводиться розплачуватися продуктивністю.</p>
<p>Мережа з середою, що розділяється при великій кількості вузлів буде працювати 
завжди повільніше, ніж аналогічна мережа з індивідуальними лініями зв'язку, 
оскільки пропускна спроможність індивідуальної лінії зв'язку дістається одному 
комп'ютеру, а при її спільному використанні ділиться на всі комп'ютери мережі. 
Часто з такою втратою продуктивність мириться ради збільшення економічної 
ефективності мережі. Не тільки в класичних, але і в зовсім нових технологіях, 
розроблених для локальних мереж, зберігається режим ліній зв'язку, що 
розділяються. Наприклад, розробники технології <b>Gigabit Ethernet,</b> 
прийнятої в 1998 році як новий стандарт, включили режим розділення передаючої 
середи в свої специфікації нарівні з режимом роботи по індивідуальних лініях 
зв'язку.</p>
<p>При використанні індивідуальних ліній зв'язку в повнозв'язних топологіях 
кінцеві вузли повинні мати по одному порту на кожну лінію зв'язку. У 
зіркоподібних топологіях кінцеві вузли можуть підключатися індивідуальними 
лініями зв'язку до спеціального пристрою комутатору. У глобальних мережах 
комутатори використовувалися вже на початковому етапі, а в локальних мережах з 
початку 90-х років. Комутатори приводять до істотного дорожчання локальної 
мережі, тому поки їх застосування обмежене, але по мірі зниження вартості 
комутації цей підхід, можливо, витіснить застосування ліній зв'язку, що 
розділяються. Необхідно підкреслити, що індивідуальними в таких мережах є тільки 
лінії зв'язку між кінцевими вузлами і комутаторами мережі, а зв'язки між 
комутаторами залишаються такими, що розділяються, оскільки по них передаються 
повідомлення різних кінцевих вузлів (мал. 1.12)</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE"><img border="0" src="images/RIS1_gif_13.gif" width="449" height="227"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.12. Індивідуальні і лінії зв'язку, що 
    розділяються в мережах на основі комутаторів</td>
  </tr>
</table>
<p>У глобальних мережах відмова від ліній зв'язку, що розділяються пояснюється 
технічними причинами. Тут великі тимчасові затримки поширення сигналів 
принципово обмежують застосовність техніки розділення лінії зв'язку. Комп'ютери 
можуть затратити більше часу на переговори про те, кому зараз можна 
використовувати лінію зв'язку, що безпосередньо на передачу даних по цій лінії 
зв'язку. Однак це не відноситься до ліній зв'язку типу “комутатор -комутатор”. У 
цьому випадку тільки два комутатори борються за доступ до лінії зв'язку, і це 
істотно спрощує задачу організації спільного використання лінії.</p>
<h4><a name="p1.2.4.3"></a>Адресація комп'ютерів</h4>
<p>Ще однією новою проблемою, яку треба враховувати при об'єднанні трьох і 
більше комп'ютерів, є проблема їх адресації. До адреси вузла мережі і схеми його 
призначення можна пред'явити декілька вимог.</p>
<ul>
  <li>Адреса повинна унікально ідентифікувати комп'ютер в мережі будь-якого 
  масштабу. </li>
  <li>Схема призначення адрес повинна зводити до мінімуму ручний труд 
  адміністратора і імовірність дублювання адрес. </li>
  <li>Адреса повинна мати ієрархічну структуру, зручну для побудови великих 
  мереж. Цю проблему добре ілюструють міжнародні поштові адреси, які дозволяють 
  поштовій службі, яка організує доставку листів між країнами, користуватися 
  тільки назвою країни адресата і не враховувати назву його міста, а тим більше 
  вулиці. У великих мережах, що складаються з багатьох тисяч вузлів, відсутність 
  ієрархії адреси може привести до великих витрат кінцевим вузлам і 
  комунікаційному обладнанню доведеться оперувати з таблицями адрес, що 
  складаються з тисяч записів. </li>
  <li>&nbsp;Адреса повинна бути зручна для користувачів мережі, а це означає, що він 
  повинен мати символьне уявлення наприклад, Server5 або www.iir.kiev.ua. </li>
  <li>Адреса повинна мати по можливості компактне уявлення, щоб не 
  перевантажувати пам'ять комунікаційної апаратури мережевих адаптерів, 
  маршрутизаторів. </li>
</ul>
<p>Неважко помітити, що ці вимоги суперечливі наприклад, адреса, що має 
ієрархічну структуру, швидше усього буде менш компактною, ніж неієрархічний 
(таку адресу часто називають “плоским”, що тобто не має структури). Символьна ж 
адреса швидше всього зажадає більше пам'яті, ніж адреса-число.</p>
<p>Оскільки всі перераховані вимоги важко сумістити в рамках якої-небудь однієї 
схеми адресації, то на практиці звичайно використовується відразу декілька схем, 
так що комп'ютер одночасно має декілька адрес-імен. Кожна адреса 
використовується в тій ситуації, коли відповідний вигляд адресації найбільш 
зручний. А щоб не виникало плутанина і комп'ютер завжди однозначно визначався 
своєю адресою, використовуються спеціальні допоміжні протоколи, які за адресою 
одного типу можуть визначити адреси інших типів.</p>
<p><i>Найбільше поширення</i> отримали три схеми адресації вузлів.</p>
<ul>
  <li><b><i>Апаратні (hardware) адреси</i></b>. Ці адреси призначені для мережі 
  невеликого або середнього розміру, тому вони не мають ієрархічної структури. 
  Типовим представником адреси такого типу є адреса мережевого адаптера 
  локальної мережі. Така адреса звичайно використовується тільки апаратурно, 
  тому її стараються зробити по можливості компактною і записують у вигляді 
  двійкового або шістнадцядкового значення, наприклад 0081005е24а8. При завданні 
  апаратних адрес звичайно не потрібне виконання ручної роботи, оскільки вони 
  або вбудовуються в апаратуру компанією-виробником, або генеруються автоматично 
  при кожному новому запуску обладнання, причому унікальність адреси в межах 
  мережі забезпечує обладнання. Крім відсутності ієрархії, використання 
  апаратних адрес пов'язане ще з одним недоліком при заміні апаратури, 
  наприклад, мережевого адаптера, змінюється і адреса комп'ютера. Більш того при 
  установці декількох мережевих адаптерів у комп'ютера з'являється декілька 
  адрес, що не дуже зручно для користувачів мережі.</li>
  <li><b><i>Символьні адреси</i></b> або <b><i>імена</i></b>. Ці адреси 
  призначені для запам'ятовування людьми і тому звичайно несуть смислове 
  навантаження. Символьні адреси легко використати як в невеликих, так і великих 
  мережах. Для роботи у великих мережах символьне ім'я може мати складну 
  ієрархічну структуру, наприклад ftp-archl.ucl.ac.uk. Ця адреса говорить про 
  те, що даний комп'ютер підтримує ftp-архів в мережі одного з коледжів 
  Лондонського університету (University College London ucl) і ця мережа 
  відноситься до академічної гілки (ас) Internet Великобританії (United Kingdom 
  uk). При роботі в межах мережі Лондонського університету таке довге символьне 
  ім'я явно надмірне і замість нього зручно користуватися коротким символьним 
  ім'ям, на роль якого добре підходить сама молодша складаюча повного імені, 
  тобто ім'я ftp-arch1.</li>
  <li><b><i>Числові складові адреси</i></b>. Символьні імена зручні для людей, 
  але через змінний формат і потенційно велику довжину їх передача по мережі не 
  дуже економічна. Тому в багатьох випадках для роботи у великих мережах як 
  адреси вузлів використовують числові складові адреси фіксованого і компактного 
  форматів. Типовим представниками адрес цього типу є IP&nbsp; і IPX-адреси. У 
  них підтримується дворівнева ієрархія, адреса ділиться на старшу частину номер 
  мережі і молодшу номер вузла. Такий розподіл дозволяє передавати сполучення 
  між мережами тільки на основі номера мережі, а номер вузла використовується 
  тільки після доставки повідомлення в потрібну мережу; точно так само, як назва 
  вулиці використовується листоношею тільки після того, як лист доставлений в 
  потрібне місто. Останнім часом, щоб зробити маршрутизацію у великих мережах 
  більш ефективної, пропонуються більш складні варіанти числової адресації, 
  відповідно до яких адреса має три і більше за складові. Такий підхід, зокрема, 
  реалізований в новій версії протоколу IPv6, призначеного для роботи в мережі 
  Internet.</li>
</ul>
<p>&nbsp;У сучасних мережах для адресації вузлів застосовуються, як правило, 
одночасно всі три приведені вище схеми. Користувачі адресують комп'ютери 
символьними іменами, які автоматично замінюються в повідомленнях, що передаються 
по мережі, на числові номери. За допомогою цих числових номерів повідомлення 
передаються з однієї мережі в іншу, а після доставки повідомлення в мережу 
призначення замість числового номера використовується апаратна адреса 
комп'ютера. Сьогодні така схема характерна навіть для невеликих автономних 
мереж, де, здавалося б, вона явно надмірна це робиться для того, щоб при 
включенні цієї мережі у велику мережу не треба було міняти склад операційної 
системи.</p>
<p>Проблема встановлення відповідності між адресами різних типів, якою 
займається <b><i>служба дозволу імен</i></b>, може вирішуватися як повністю 
централізованими, так і розподіленими засобами. У разі централізованого підходу 
в мережі виділяється один комп'ютер (сервер імен), в якому зберігається таблиця 
відповідності один одному імен різних типів, наприклад символьних імен і 
числових номерів. Всі інші комп'ютери звертаються до сервера імен, щоб на 
символьне ім'я знайти числовий номер комп'ютера, з яким необхідно обмінятися 
даними.</p>
<p>При іншому, розподіленому підході, кожний комп'ютер сам вирішує задачу 
встановлення відповідності між іменами. Наприклад, якщо користувач указав для 
вузла призначення числовий номер, то перед початком передачі даних 
комп'ютер-відправник посилає всім комп'ютерам мережі повідомлення (таке 
повідомлення називається широкомовним) з проханням пізнати це числове ім'я. Всі 
комп'ютери, отримавши це повідомлення, порівнюють заданий номер зі своїм 
власним. Той комп'ютер, у якого виявився збіг, посилає відповідь, що містить 
його апаратну адресу, після чого стає можливим відправка повідомлень по 
локальній мережі.</p>
<p>Розподілений підхід хороший тим, що не передбачає виділення спеціального 
комп'ютера, який до того ж часто вимагає ручного завдання таблиці відповідності 
імен. Недоліком розподіленого підходу є необхідність широкомовних повідомлень 
такі повідомлення перевантажують мережу, оскільки вони вимагають обов'язкової 
обробки всіма вузлами, а не тільки вузлом призначення. Тому розподілений підхід 
використовується тільки в невеликих локальних мережах. У великих мережах 
поширення широкомовних повідомлень по всіх її сегментах стає практично 
нереальним, тому для них характерний централізований підхід. Найбільш відомою 
службою централізованого дозволу імен є служба <b>Domain Name System</b> (<b>DNS</b>) 
мережі Internet.</p>
<hr color="#008080" size="3">
<h3><a name="p1.2.5"></a>1.2.5. <font color="#FF0000">Ethernet </font>- приклад 
стандартного розв'язання мережевих проблем</h3>
<p>Розглянемо, яким чином описані вище загальні підходи до розв'язання найбільш 
важливих проблем побудови мереж втілені в найбільш популярній мережевій 
технології <b>Ethernet</b><i>.</p>
<p><b>Мережева технологія</b> </i>це узгоджений набір стандартних протоколів і 
реалізовуючих їх програмно-апаратних засобів (наприклад, мережевих адаптерів, 
драйверів, кабелів і роз'єм), достатній для побудови обчислювальної мережі. 
Епітет “достатній” підкреслює ту обставину, що цей набір являє собою мінімальний 
набір засобів, за допомогою яких можна побудувати працездатну мережу. Можливо, 
цю мережу можна поліпшити, наприклад, за рахунок виділення в ній підмереж, що 
відразу зажадає крім протоколів стандарту Ethernet застосування протоколу IP, а 
також спеціальних комунікаційних пристроїв маршрутизаторів. Поліпшена мережа 
буде, швидше за все, більш надійною і швидкодіючою, але за рахунок надбудов над 
засобами технології Ethernet, яка склала базис мережі.</p>
<p>Термін “мережева технологія” частіше за все використовується в описаному вище 
вузькому значенні, але іноді застосовується і його розширене тлумачення як 
будь-якого набору засобів і правил для побудови мережі, наприклад, “технологія&nbsp; 
маршрутизації на скрізь”, “технологія створення захищеного каналу”, “технологія 
ІР-мереж”.</p>
<p>Протоколи, на основі яких будується мережа певної технології (у вузькому 
значенні), спеціально розроблялися для спільної роботи, тому від розробника 
мережі не потрібно додаткових зусиль по організації їх взаємодії. Іноді мережеві 
технології називають <i>базовими технологіями</i>, маючи на увазі те, що на їх 
основі будується базис будь-якої мережі. Прикладами базових мережевих технологій 
можуть служити поряд з Ethernet такі відомі технології локальних мереж як, <b>
Token Ring</b> і <b>FDDI</b>, або ж технології територіальних мереж <b>Х.25</b> 
і <b>frame relay</b>. Для отримання прецездатної мережі в цьому випадку досить 
придбати програмні і апаратні засоби, що відносяться до однієї базової 
технології мережеві адаптери з драйверами, концентратори, комутатори, кабельну 
систему і т. п., і з'єднати їх відповідно до вимог стандарту на дану технологію.</p>
<p>Стандарт <b>Ethernet </b>був прийнятий в 1980 році. Число мереж, побудованих 
на основі цієї технології, до даного моменту оцінюється в 5 мільйонів, а 
кількість комп'ютерів, працюючих в таких мережах, в 50 мільйонів.</p>
<p>Основний принцип, встановлений в основу <b>Ethernet</b>, - <i><b>випадковий 
метод доступу до </b></i>середи передачі даних, що розділяється. Як така середа 
може використовуватися товстий або тонкий коаксіальний кабель,&nbsp; віта пара, 
оптоволокно або радіохвилі (до речі, першою мережею, побудованою на принципі 
випадкового доступу до середи, що розділяється, була радіомережа Aloha 
Гавайського університету).</p>
<p>У стандарті Ethernet суворо зафіксована топологія електричних зв'язків. 
Комп'ютери підключаються до середи, що розділяється відповідно до типової 
структури “загальна шина” (мал. 1.13). За допомогою шини, що розділяється в часі 
будь-які два комп'ютери можуть обмінюватися даними. Управління доступом до лінії 
зв'язку здійснюється спеціальними контролерами <b>мережевими адаптерами Ethernet</b>. 
Кожний комп'ютер, а більш точно, кожний мережевий адаптер, має унікальну адресу. 
Передача даних відбувається з швидкістю 10 Мбіт/с. Ця величина є пропускною 
спроможністю мережі Ethernet.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%">
  <tr>
    <td VALIGN="MIDDLE" align="center">
    <img border="0" src="images/RIS1_gif_14.gif" width="264" height="114"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE" align="center">МАЛ. 1.13. Мережа Ethernet</td>
  </tr>
</table>
<p>Суть випадкового методу доступу складається в наступному. Комп'ютер в мережі 
Ethernet може передавати дані по мережі, тільки якщо мережа вільна, тобто якщо 
ніякий інший комп'ютер в даний момент не займається обміном. Тому важливою 
частиною технології Ethernet є процедура визначення доступності середи.</p>
<p>Після того як комп'ютер пересвідчився, що мережа вільна, він починає 
передачу, при цьому “захоплює” середу. Час монопольного використання середи, що 
розділяється одним вузлом обмежується часом передачі одного кадру. <i>Кадр </i>
це одиниця даних, якими обмінюються комп'ютери в мережі Ethernet. Кадр має 
фіксований формат і нарівні з полем даних містить різну службову інформацію, 
наприклад адресу одержувача і адресу відправника.</p>
<p>Мережа Ethernet влаштована так, що при попаданні кадру в середу передачі 
даних, що розділяється всі мережеві адаптери одночасно починають приймати цей 
кадр. Всі вони аналізують адресу призначення, розташовану в одному з початкових 
полів кадру, і, якщо ця адреса співпадає з їх власною адресою, кадр вміщується у 
внутрішній буфер мережевого адаптера. Таким чином комп'ютер-адресат отримує 
призначені йому дані.</p>
<p>Іноді може виникати ситуація, коли одночасно два або більше за комп'ютер 
вирішують, що мережа вільна, і починають передавати інформацію. Така ситуація, 
звана <b><i>колізією</i>, </b>перешкоджає правильній передачі даних по мережі. У 
стандарті Ethernet передбачений алгоритм виявлення і коректної обробки колізій. 
Імовірність виникнення колізії залежить від інтенсивності мережевого трафіка.</p>
<p>Після виявлення колізії мережеві адаптери, які намагалися передати свої 
кадри, припиняють передачу і після паузи випадкової тривалості намагаються знов 
отримати доступ до середи і передати той кадр, який викликав колізію.</p>
<p>Головним достоїнством мереж Ethernet, завдяки якому вони стали такою 
популярною, є їх економічність. Для побудови мережі досить мати по одному 
мережевому адаптеру для кожного комп'ютера плюс один фізичний сегмент 
коаксіального кабелю потрібної довжини. Інші базові технології, наприклад Token 
Ring, для створення навіть невеликої мережі вимагають наявності додаткового 
пристрою концентратора.</p>
<p>Крім того, в мережах Ethernet реалізовані досить прості алгоритми доступу до 
середи, адресації і передачі даних. Простота логіки роботи мережі веде до 
спрощення і, відповідно, здешевлення мережевих адаптерів і їх драйверів. По тій 
же причині адаптери мережі Ethernet мають високу надійністю. І нарешті, ще 
однією чудовою властивістю мереж Ethernet є їх хороша розширюваність, тобто 
легкість підключення нових вузлів.</p>
<p>Інші базові мережеві технології Token Ring, FDDI, 100VGAny-LAN, хоч і 
володіють багатьма індивідуальними рисами, в той же час мають багато загальних 
властивостей з Ethernet. Насамперед це застосування регулярних фіксованих 
топологій (ієрархічна зірка і кільце), а також серед передачі даних, що 
розділяються. Істотні відмінності однієї технології від іншої пов'язані з 
особливостями методу доступу, що використовується до середи, що розділяється. 
Так, відмінності технології Ethernet від технології Token Ring багато в чому 
визначаються специфікою закладених в них методів розділення середи випадкового 
алгоритму доступу в Ethernet і методу доступу шляхом передачі маркера в Token 
Ring.</p>
<h3><a name="p1.2.6"></a>1.2.6. Структуризація як засіб побудови великих мереж</h3>
<p>У мережах з невеликою (10-30) кількістю комп'ютерів частіше за все 
використовується одна з типових топологій загальна шина, кільце, зірка або 
повнозв'язна мережа. Всі перераховані топології володіють властивістю 
однорідності, тобто всі комп'ютери в такій мережі мають однакові права у 
відношенні доступу до інших комп'ютерів (за винятком центрального комп'ютера при 
з'єднанні зірка). Така однорідність структури робить простою процедуру 
нарощування числа комп'ютерів, полегшує обслуговування і експлуатацію мережі.</p>
<p>Однак при побудові великих мереж однорідна структура зв'язків перетворюється 
з переваги в недолік. У таких мережах використання типових структур породжує 
різні обмеження, найважливішими з яких є:</p>
<ul>
  <li>обмеження на довжину зв'язку між вузлами; </li>
  <li>обмеження на кількість вузлів в мережі; </li>
  <li>обмеження на інтенсивність трафіка, що породжується вузлами мережі. </li>
</ul>
<p>Наприклад, технологія <b>Ethernet </b>на тонкому коаксіальному кабелі 
дозволяє використати кабель довжиною не більше за 185 метрів, до якого можна 
підключити не більше за 30 комп'ютерів. Однак, якщо комп'ютери інтенсивно 
обмінюються інформацією між собою, іноді доводиться знижувати число підключених 
до кабелю комп'ютерів до <b>20</b>, а то і до <b>10</b>, щоб кожному комп'ютеру 
діставалася прийнятна частка загальної пропускної спроможності мережі.</p>
<p>Для зняття цих обмежень використовуються спеціальні методи структуризації 
мережі і спеціальне структуроутворююче обладнання повторювачі, концентратори, 
мости, комутатори, маршрутизатори. Обладнання такого роду також називають 
комунікаційним, маючи на увазі, що за допомогою нього окремі сегменти мережі 
взаємодіють між собою.</p>
<h4><a name="p1.2.6.1"></a>Фізична структуризація мережі</h4>
<p>Найпростіший з комунікаційних пристроїв - <i><b>повторювач (repeator) </b>
</i>використовується для фізичного з'єднання різних сегментів кабелю локальної 
мережі з метою збільшення загальної довжини мережі. Повторювач передає сигнали, 
що приходять з одного сегмента мережі, в інші її сегменти (мал. 1.14). 
Повторювач дозволяє подолати обмеження на довжину ліній зв'язку за рахунок 
поліпшення якості сигналу відновлення його потужності, що передається і 
амплітуди, поліпшення фронтів і т.п.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE"><img border="0" src="images/RIS1_gif_15.gif" width="505" height="101"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.14. Повторювач дозволяє збільшити довжину мережі 
    Ethernet</td>
  </tr>
</table>
<p>Повторювач, який має декілька портів і з'єднує декілька фізичних сегментів, 
часто називають <b><i>концентратором </i></b>(<b><i>concentrator</i></b>) або <b>
хабом</b> (<b>hub</b>). Ці назви (hub <b>основа</b>, центр діяльності) 
відображають той факт, що в даному пристрої зосереджуються всі зв'язки між 
сегментами мережі.</p>
<p>Концентраторы характерні практично для всіх базових технологій локальних 
мереж Ethernet, ArcNet, Token Ring, FDDI, Fast Ethernet, Gigabit Ethernet, 
l00VG-AnyLAN.</p>
<p>Треба підкреслити, що в роботі концентраторів будь-яких технологій багато 
загального вони повторюють сигнали, що прийшли з одного з своїх портів, на інших 
своїх портах. Різниця полягає в тому, на яких саме портах повторюються вхідні 
сигнали. Так, концентратор Ethernet повторює вхідні сигнали на всіх своїх 
портах, крім того, з якого сигнали поступають (мал. 1.15, а). А концентратор 
Token Ring (мал. 1.15, б) повторює вхідні сигнали, що поступають з деякого 
порту, тільки на одному порту на тому, до якого підключений наступний в кільці 
комп'ютер.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE"><img border="0" src="images/RIS1_gif_16.gif" width="415" height="160"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">Мал. 1.15. Концентратори різних технологій</td>
  </tr>
</table>
<p><b><font color="#FF0000">УВАГА</font></b>&nbsp; Концентратор завжди змінює 
фізичну топологію мережі, але при цьому залишає без зміни її логічну топологію.</p>
<p>Нагадаємо, що під фізичною топологією розуміється конфігурація зв'язків, 
утворених окремими частинами кабелю, а під логічною конфігурація інформаційних 
потоків між комп'ютерами мережі. У багатьох випадках фізична і логічна топології 
мережі співпадають. Наприклад, мережа, представлена на мал. 1.16, <i>а, </i>має 
фізичну топологію кільце. Комп'ютери цієї мережі отримують доступ до кабелів 
кільця за рахунок передачі один одному спеціального кадру маркера, причому цей 
маркер також передається послідовно від комп'ютера до комп'ютера в тому ж 
порядку, в якому комп'ютери утворять фізичне кільце, тобто комп'ютер А передає 
маркер комп'ютеру В, комп'ютер В комп'ютеру Сит. д. Мережа, показана на мал. 
1.16,<i>б</i>, демонструє приклад, коли неспівпадають фізичної і логічної топології. 
Фізично комп'ютери сполучені по топології загальна шина. Доступ же до шини 
відбувається не по алгоритму випадкового доступу, що застосовується в технології 
Ethernet, а шляхом передачі маркера в кільцевому порядку: від комп'ютера А 
комп'ютеру В, від комп'ютера В комп'ютеру С і т. д. Тут порядок передачі маркера 
вже не повторює фізичні зв'язки, а визначається логічним конфігуруванням 
драйверів мережевих адаптерів. Ніщо не заважає настроїти мережеві адаптери і їх 
драйвери так, щоб комп'ютери утворили кільце в іншому порядку, наприклад: В, А, 
С... При цьому фізична структура мережі ніяк не змінюється.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE"><img border="0" src="images/RIS1_gif_17.gif" width="489" height="377"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.16. Логічна і фізична топології мережі</td>
  </tr>
</table>
<p>Іншим прикладом неспівпадання фізичної і логічної топологій мережі є вже 
розглянута мережа на мал. 1.15, а. Концентратор Ethernet підтримує в мережі 
фізичну топологію зірка. Однак логічна топологія мережі залишилася без змін це 
загальна шина. Оскільки концентратор повторює дані, що прийшли з будь-якого 
порту, на всіх інших портах, то вони з'являються одночасно на всіх фізичних 
сегментах мережі, як і в мережі з фізичною загальною шиною. Логіка доступу до 
мережі абсолютно не міняється: всі компоненти алгоритму випадкового доступу 
визначення незайнятості середи, захоплення середи, розпізнавання і відробляння 
колізій залишаються в силі.</p>
<p>Фізична структуризація мережі за допомогою концентраторів корисна не тільки 
для збільшення відстані між вузлами мережі, але і для підвищення її надійності. 
Наприклад, якщо який-небудь комп'ютер мережі Ethernet з фізичною загальною шиною 
через збій починає безперервно передавати дані по загальному кабелю, то вся 
мережа виходить з ладу, і для розв'язання цієї проблеми залишається тільки один 
вихід вручну від'єднувати мережевий адаптер цього комп'ютера від кабелю. У 
мережі Ethernet, побудованій з використанням концентратора, ця проблема може 
бути вирішена автоматично концентратор відключає свій порт, якщо виявляє, що 
приєднаний до нього вузол дуже довго монопольно займає мережу. Концентратор може 
блокувати некоректно працюючий вузол і в інших випадках, виконуючи роль деякого 
керуючого вузла.</p>
<h4><a name="p1.2.6.2"></a>Логічна структуризація мережі</h4>
<p>Фізична структуризація мережі корисна в багатьох відносинах, однак в ряді 
випадків, що звичайно відносяться до мереж великого і середнього розміру, 
неможливо обійтися без логічної структуризації мережі. Найбільш важливою 
проблемою, що не вирішується шляхом фізичної структуризації, залишається 
проблема перерозподілу трафіка, що передається між різними фізичними сегментами 
мережі.</p>
<p>У великій мережі природним образом виникає неоднорідність інформаційних 
потоків: мережа складається з безлічі підмереж робочих груп, відділів, філіалів 
підприємства і інших адміністративних підрозділів. Дуже часто найбільш 
інтенсивний обмін даними спостерігається між комп'ютерами, що належать до однієї 
підмережі, і тільки невелика частина звертань відбувається до ресурсів 
комп'ютерів, що знаходяться поза локальними робочими групами. (Донедавна таке 
співвідношення трафіків не бралося під сумніву, і був навіть сформульований 
емпіричний закон “80/20”, відповідно до якого в кожній підмережі 80 % трафіка є 
внутрішнім і тільки 20 % зовнішнім.) Зараз характер навантаження мереж багато в 
чому змінився, широко впроваджується технологія intranet, на багатьох 
підприємствах є централізовані сховища корпоративних даних, активно 
підприємства, що використовуються всіма співробітниками. Все це не могло не 
вплинути на розподіл інформаційних потоків. І тепер не рідкі ситуації, коли 
інтенсивність зовнішніх звертань вище за інтенсивність обміну між “сусідніми” 
машинами. Але незалежно від того, в якій пропорції розподіляються зовнішній і 
внутрішній трафік, для підвищення ефективності роботи мережі неоднорідність 
інформаційних потоків необхідно враховувати.</p>
<p>Мережа з типовою топологією (шина, кільце, зірка), в якій всі фізичні 
сегменти розглядаються як одне середовище, що розділяється, виявляється 
неадекватній структурі інформаційних потоків у великій мережі. Наприклад, в 
мережі із загальною шиною взаємодія будь-якої пари комп'ютерів займає її на весь 
час обміну, тому при збільшенні числа комп'ютерів в мережі шина стає вузьким 
місцем. Комп'ютери одного відділу вимушені чекати, коли закінчить обмін пари 
комп'ютерів іншого відділу, і це при тому, що необхідність в зв'язку між 
комп'ютерами двох різних відділів виникає набагато рідше і вимагає зовсім 
невеликої пропускної спроможності.</p>
<p>Цей випадок ілюструє мал. 1.17,<i>а</i>. Тут показана мережа, побудована з 
використанням концентраторів. Нехай комп'ютер А, що знаходиться в одній 
підмережі з комп'ютером В, посилає йому дані. Незважаючи на розгалужену фізичну 
структуру мережі, концентратори розповсюджують будь-який кадр по всіх її 
сегментах. Тому кадр, що посилається комп'ютером А комп'ютеру В, хоч і не 
потрібен комп'ютерам відділів 2 і 3, відповідно до логіки роботи концентраторів 
поступає на ці сегменти також. І доти, поки комп'ютер В не отримає адресований 
йому кадр, жоден з комп'ютерів цієї мережі не зможе передавати дані.</p>
<p>Така ситуація виникає через те, що логічна структура даної мережі залишилася 
однорідною вона ніяк не враховує збільшення інтенсивності трафіка всередині 
відділу і надає всім парам комп'ютерів рівні можливості по обміну інформацією 
(мал. 1.17, <i>б</i>).</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE"><img border="0" src="images/RIS1_gif_18.gif" width="549" height="600"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.17. Суперечність між логічною структурою мережі і 
    структурою інформаційних потоків</td>
  </tr>
</table>
<p>Розв'язання проблеми складається у відмові від ідеї єдиного однорідного 
середовища, що розділяється. Наприклад, в розглянутому вище прикладі бажано було 
б зробити так, щоб кадри, які передають комп'ютери відділу 1, виходили б за межі 
цієї частини мережі в тому і тільки в тому випадку, якщо ці кадри направлені 
якому-небудь комп'ютеру з інших відділів. З іншого боку, в мережу кожного з 
відділів повинні попасти ті і тільки ті кадри, які адресовані вузлам цієї 
мережі. При такій організації роботи мережі її продуктивність істотно 
підвищиться, оскільки комп'ютери одного відділу не будуть простоювати в той час, 
коли обмінюються даними комп'ютери інших відділів.</p>
<p>Неважко помітити, що в запропонованому рішенні ми відмовилися від ідеї 
загального середовища, що розділяється в межах всієї мережі, хоч і залишили її в 
межах кожного відділу. Пропускна спроможність ліній зв'язку між відділами не 
повинна співпадати з пропускною спроможністю середи всередині відділів. Якщо 
трафік між відділами становить тільки 20 % трафіки всередині відділу (як вже 
відмічалося, ця величина може бути іншою), то і пропускна спроможність ліній 
зв'язку і комунікаційного обладнання, що з'єднує відділи, може бути значно нижче 
внутрішнього трафіка мережі відділу.</p>
<p><font color="#FF0000"><b>УВАГА</b></font> Поширення трафіка, призначеного для 
комп'ютерів деякого сегмента мережі, тільки в межах цього сегмента, називається
<i>локалізацією </i>трафіка. <i>Логічна структуризація </i>мережі це процес 
разбиения мережі на сегменти з локалізованим трафіком.</p>
<p>Для логічної структуризації мережі використовуються такі комунікаційні 
пристрої, як мости, комутатори, маршрутизатори і шлюзи.</p>
<p><i><b>Міст</b></i> (<i><b>bridge</b></i>) ділить середу передачі мережі, що 
розділяється на частині (часто звані логічними сегментами), передаючи інформацію 
з одного сегмента в інший тільки в тому випадку, якщо така передача дійсно 
необхідна, тобто якщо адреса комп'ютера призначення належить інший підмережі. 
Тим самим міст ізолює трафік однієї підмережі від трафіка іншої, підвищуючи 
загальну продуктивність передачі даних в мережі. Локалізація трафіка не тільки 
економить пропускну спроможність, але і зменшує можливість несанкціонованого 
доступу до даних, оскільки кадри не вийдуть за межі свого сегмента і їх 
складніше перехопити зловмиснику.</p>
<p>На мал. 1.18 показана мережа, яка була отримана з мережі з центральним 
концентратором (див. мал. 1.17) шляхом його заміни на міст. Мережі 1-го і 2-го 
відділів складаються з окремих логічних сегментів, а мережа відділу 3 з двох 
логічних сегментів. Кожний логічний сегмент побудований на базі концентратора і 
має найпростішу фізичну структуру, утворену відрізками кабелю, зв'язуючи 
комп'ютери з портами концентратора.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE"><img border="0" src="images/RIS1_gif_19.gif" width="523" height="301"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.18. Логічна структуризації мережі за допомогою 
    моста</td>
  </tr>
</table>
<p>Мости використовують для локалізації трафіка апаратні адреси комп'ютерів. Це 
утрудняє розпізнавання приналежності того або іншого комп'ютера до певного 
логічного сегмента сама адреса не містить ніякої інформації з цього приводу. 
Тому міст досить спрощено представляє розподіл мережі на сегменти він 
запам'ятовує, через який порт на нього поступив кадр даних від кожного 
комп'ютера мережі, і надалі передає кадри, призначені для цього комп'ютера, на 
цей порт. Точної топології зв'язків між логічними сегментами міст не знає. Через 
це застосування мостів приводить до значних обмежень на конфігурацію зв'язків 
мережі сегменти повинні бути сполучені таким чином, щоб в мережі не утворювалися 
замкнені контури.</p>
<p><i><b>Комутатор</b></i> (<i><b>switch</b></i>, <b><i>switching hub</i></b>) 
за принципом обробки кадрів нічим не відрізняється від моста. Основна його 
відмінність від моста полягає в тому, що він є свого роду комунікаційним 
мультипроцесором, оскільки кожний його порт оснащений спеціалізованим 
процесором, який обробляє кадри по алгоритму моста незалежно від процесорів 
інших портів. За рахунок цього загальна продуктивність комутатора звичайно 
набагато вище за продуктивність традиційного моста, що має один процесорний 
блок. Можна сказати, що комутатори це мости нового покоління, які обробляють 
кадри в паралельному режимі.</p>
<p>Обмеження, пов'язані із застосуванням мостів і комутаторів по топології 
зв'язків, а також ряд інших, привели до того, що серед комунікаційних пристроїв 
з'явився ще один тип обладнання <b><i>маршрутизатор </i></b>(<i><b>router</b></i>).<b><i> 
Маршрутизатори</i></b> більш надійно і більш ефективно, ніж мости, ізолюють 
трафік окремих частин мережі один від одного. Маршрутизатори утворять логічні 
сегменти за допомогою явної адресації, оскільки використовують не плоскі 
апаратні, а складові числові адреси. У цих адресах є поле номера мережі, так що 
всі комп'ютери, у яких значення цього поля однакове, належать до одного 
сегмента, званого в цьому випадку підмережею (<i>subnet</i>).</p>
<p>Крім локалізації трафіка маршрутизатори виконують ще багато інших корисних 
функцій. Так, маршрутизатори можуть працювати в мережі із замкненими контурами, 
при цьому вони здійснюють вибір найбільш раціонального маршруту з декількох 
можливих. Мережа, представлена на мал. 1.19, відрізняється від своєї попередниці 
(див. мал. 1.18) тим, що між підмережами відділів 1 і 2 прокладений додатковий 
зв'язок, який може використовуватися як для підвищення продуктивності мережі, 
так і для підвищення її надійності.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE"><img border="0" src="images/RIS1_gif_20.gif" width="525" height="296"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.19. Логічна структуризація мережі за допомогою 
    маршрутизаторів</td>
  </tr>
</table>
<p>Іншою дуже важливою функцією маршрутизаторів є їх здатність зв'язувати в 
єдину мережу підмережі, побудовані з використанням різних мережевих технологій, 
наприклад Ethernet і Х.25.</p>
<p>Крім перерахованих пристроїв окремі частини мережі може з'єднувати <i>шлюз</i> 
(<i>gateway</i>). Звичайно основною причиною, по якій в мережі використовують 
шлюз, є необхідність об'єднати мережі з різними типами системного і прикладного 
програмного забезпечення, а не бажання локалізувати трафік. Проте шлюз 
забезпечує і локалізацію трафіка як деякий побічний ефект.</p>
<p>Великі мережі практично ніколи не будуються без логічної структуризації. Для 
окремих сегментів і підмереж характерні типові однорідні топології базових 
технологій, і для їх об'єднання завжди використовується обладнання, що 
забезпечує локалізацію трафіка, мости, комутатори, маршрутизатори і шлюзи.</p>
<h3><a name="p1.2.7"></a>1.2.7. Мережеві служби</h3>
<p>Для кінцевого користувача мережа це не комп'ютери, кабелі і концентратори і 
навіть не інформаційні потоки, для нього мережа це, передусім, той набір 
мережевих служб, за допомогою яких він отримує можливість переглянути список 
комп'ютерів, що є в мережі, прочитати виділений файл, роздрукувати документ на 
“чужому” принтері або послати поштове повідомлення. Саме сукупність можливостей, 
що надаються наскільки широкий їх вибір, наскільки вони зручні, надійні і 
безпечні визначає для користувача вигляд тієї або іншої мережі.</p>
<p>Крім власне обміну даними, мережеві служби повинні вирішувати і інші, більш 
специфічні задачі, наприклад, задачі, що породжуються розподіленою обробкою 
даних. До таких задач відноситься забезпечення несуперечності декількох списів 
даних, розміщених на різних машинах (служба реплікації), або організація 
виконання однієї задачі паралельно на декількох машинах мережі (служба виклику 
видалених процедур). Серед мережевих служб можна виділити адміністративні, тобто 
такі, які в основному орієнтовані не на простого користувача, а на 
адміністратора і служать для організації правильної роботи мережі загалом. 
Служба адміністрування облікових записів про користувачів, яка дозволяє 
адміністратору вести загальну базу даних про користувачів мережі, система 
моніторинга мережі, що дозволяє охоплювати і аналізувати мережевий трафік, 
служба безпеки, в функції якій може входити серед іншого виконання процедури 
логічного входу з подальшою перевіркою пароля, все це приклади адміністративних 
служб.</p>
<p>Реалізація мережевих служб здійснюється програмними засобами. Основні служби 
файлова служба і служба друку звичайно надаються мережевою операційною системою, 
а допоміжні, наприклад служба баз даних, факсу або передачі голосу, системними 
мережевими додатками або утилітами, працюючими в тісному контакті з мережевою 
ОС. Взагалі кажучи, розподіл служб між ОС і утилітами досить умовно і змінюється 
в конкретних реалізаціях ОС.</p>
<p>При розробці мережевих служб доводиться вирішувати проблеми, які властиві 
будь-яким розподіленим додаткам: визначення протоколу взаємодії між клієнтською 
і серверний частинами, розподіл функцій між ними, вибір схеми адресації додатків 
і інш.</p>
<p>Одним з головних показників якості мережевої служби є її зручність. Для 
одного і того ж ресурсу може бути розроблено декілька служб, по-різному що 
вирішують загалом-то одну і ту ж задачу. Відмінності можуть полягати в 
продуктивності або в рівні зручності послуг, що надаються. Наприклад, файлова 
служба може бути заснована на використанні команди передачі файла з одного 
комп'ютера в інший на ім'я файла, а це вимагає від користувача знання імені 
потрібного файла. Та ж файлова служба може бути реалізований і так, що 
користувач монтує видалену файлову систему до локального каталога, а далі 
звертається до виділених файлів як до своїм власним, що набагато більш зручно.</p>
<p>Якість мережевої служби залежить і від якості призначеного для користувача 
інтерфейсу інтуїтивної зрозумілості, наочності, раціональності.</p>
<p>При визначенні міри зручності ресурсу, що розділяється часто вживають термін 
“прозорість”. <i>Прозорий доступ</i> це такий доступ, при якому користувач не 
помічає, де розташований потрібний йому ресурс на його комп'ютері або на 
віддаленому. Після того як він змонтував виділену файлову систему в своє дерево 
каталогів, доступ до виділених файлів стає для нього абсолютно прозорим. Сама 
операція монтування також може мати різну міру прозорості в мережах з меншою 
прозорістю користувач повинен знати і задавати в команді ім'я комп'ютера, на 
якому зберігається виділена файлова система, в мережах з більшою мірою 
прозорості відповідний програмний компонент мережі проводить пошук томів файлів, 
що розділяються безвідносно місць їх зберігання, а потім надає їх користувачеві 
в зручному для нього вигляді, наприклад у вигляді списку або набору піктограм.</p>
<p>Для забезпечення прозорості важливий спосіб адресації (іменування) мережевих 
ресурсів, що розділяються. Імена мережевих ресурсів, що розділяються не повинні 
залежати від їх фізичного розташування на тому або іншому комп'ютері. У ідеалі 
користувач не повинен нічого міняти в своїй роботі, якщо адміністратор мережі 
перемістив том або каталог з одного комп'ютера на інший. Сам адміністратор і 
мережева операційна система мають інформацію про розташування файлових систем, 
але від користувача вона прихована. Така міра прозорості поки рідко 
зустрічається в мережах, звичайно для отримання доступу до ресурсів певного 
комп'ютера спочатку доводиться встановлювати з ним логічне з'єднання. Такий 
підхід застосовується, наприклад, в мережах <nobr>Windows NT</nobr>.</p>
<h2><a name="v"></a><font color="#FF0000">Висновки</font></h2>
<p>Задачі надійного обміну двійковими сигналами по лініях зв'язку в локальних 
мережах вирішують мережеві адаптери, а в глобальних мережах апаратура передачі 
даних. Це обладнання кодує і декодирует інформацію, синхронізує передачу 
електромагнітних сигналів по лініях зв'язку і перевіряє правильність передачі.
</p>
<ul>
  <li>Програмні засоби, що реалізовують найпростішу схему віддаленого доступу до 
  файлів, включають класичні елементи мережевої операційної системи: сервер, 
  клієнт і засоби транспортування повідомлень по лінії зв'язку. </li>
  <li>Важливою характеристикою мережі є топологія тип графа, вершинам якого 
  відповідають комп'ютери мережі (іноді і інше обладнання, наприклад 
  концентратори), а ребрам фізичні зв'язки між ними. Конфігурація фізичних 
  зв'язків визначається електричними з'єднаннями комп'ютерів між собою і може 
  відрізнятися від конфігурації логічних зв'язків між вузлами мережі. Логічні 
  зв'язки являють собою маршрути передачі даних між вузлами мережі. </li>
  <li>Типовими топологіями фізичних зв'язків є: повнозв'язна, коміркова, 
  загальна шина, кільцева топологія і топологія типу зірка. </li>
  <li>Для обчислювальних мереж характерні як індивідуальні лінії зв'язку між 
  комп'ютерами, так і що розділяються, коли одна лінія зв'язку навперемінно 
  використовується декількома комп'ютерами. У останньому випадку виникають як 
  чисто електричні проблеми забезпечення потрібної якості сигналів при 
  підключенні до одному і того ж проводу декількох приймачів і передавачів, так 
  і логічні проблеми розділення часу доступу до цих ліній. </li>
  <li>Для адресації вузлів мережі використовуються три типи адрес: апаратні 
  адреси, символьні імена, числові складові адреси. У сучасних мережах, як 
  правило, одночасно застосовуються всі ці три схеми адресації. Важливою 
  мережевою проблемою є задача встановлення відповідності між адресами різних 
  типів. Ця проблема може вирішуватися як повністю централізованими, так і 
  розподіленими засобами. </li>
  <li>Для зняття обмежень на довжину мережі і кількість її вузлів 
  використовується фізична структуризація мережі з допомогою повторювачів і 
  концентраторів. </li>
  <li>Для підвищення продуктивності і безпеки мережі використовується логічна 
  структуризація мережі, яка полягає в розбитті мережі на сегменти таким чином, 
  що основна частина трафіка комп'ютерів кожного сегмента не вийде за межі цього 
  сегмента. Засобами логічної структуризації служать мости, комутатори, 
  маршрутизатори і шлюзи. </li>
</ul>

<table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="table1">
  <tr>
    <td width="100%" align="left" colspan="3"><hr color="#2D4C54" size="4"></td>
  </tr>
  <tr>
    <td width="33%" align="left"><a href="001.htm">Попередня</a></td>
    <td width="33%" align="center"><a href="001.htm">Перша</a></td>
    <td width="34%" align="right"><a href="003.htm">Наступна</a></td>
  </tr>
</table>

</body>

</html>
