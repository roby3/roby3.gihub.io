<html xmlns:mso="urn:schemas-microsoft-com:office:office" xmlns:msdt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882">

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Language" content="uk">
<meta HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<title>1.3. Поняття “відкрита система” і проблеми стандартизації</title>

<!--[if gte mso 9]><xml>
<mso:CustomDocumentProperties>
<mso:Categories msdt:dt="string">Навчальний метеріал</mso:Categories>
</mso:CustomDocumentProperties>
</xml><![endif]-->
</head>

<body TEXT="#000080" topmargin="0" leftmargin="0">

<h2>1.3. Поняття “відкрита система” і проблеми стандартизації</h2>
<dir style="list-style-type: none">
  <b>
  <li>1.3.1. <a href="#p131">Багаторівневий підхід. Протокол. Інтерфейс. Стек 
  протоколів</a> </li>
  <li>1.3.2. <a href="#p132">Модель OSI</a></li>
  <li>1.3.3. <a href="#p133">Рівні моделі OSI </a>
  <dir style="list-style-type: none">
    </b>
    <li><a href="#p133_1">Фізичний рівень</a> </li>
    <li><a href="#p133_2">Канальний рівень</a> </li>
    <li><a href="#p133_3">Мережевий рівень</a> </li>
    <li><a href="#p133_4">Транспортний рівень</a> </li>
    <li><a href="#p133_5">Сеансовий рівень</a> </li>
    <li><a href="#p133_6">Представницький рівень</a> </li>
    <li><a href="#p133_7">Прикладний рівень</a> </li>
    <li><a href="#p133_8">Мрежезалежні і мереженезалежні рівні</a> </li>
  </dir>
  <b></li>
  <li>1.3.4. <a href="#p134">Поняття “відкрита система”</a></li>
  <li>1.3.5. <a href="#p135">Модульність і стандартизація</a></li>
  <li>1.3.6. <a href="#p136">Джерела стандартів</a></li>
  <li>1.3.7. <a href="#p137">Стандартні стеки комунікаційних протоколів</a></b><dir style="list-style-type: none">
    <li><a href="#p1370">Стек OSI</a></li>
    <li><a href="#p137_1">Стек TCP/IP</a></li>
    <li><a href="#p137_2">Стек IPX/SPX</a></li>
    <li><a href="#p137_3">Стек NetBIOS/SMB</a></li>
  </dir>
  <b></li>
  <li><a href="#viv">Висновки</a></li>
</dir>
</b><hr color="#00CC99" size="3">
<p>Універсальна теза про користь стандартизації, справедлива для всіх галузей, в 
комп'ютерних мережах набуває особливе значення. Суть мережі це з'єднання різного 
обладнання, а значить, проблема сумісності є однією з найбільш гострих. Без 
прийняття всіма виробниками загальноприйнятих правил побудови обладнання прогрес 
в справі “будівництва” мереж був би неможливий. Тому весь розвиток комп'ютерної 
галузі зрештою відображений в стандартах будь-яка нова технологія тільки тоді 
придбаває “законний” статус, коли її зміст закріпляється у відповідному 
стандарті.</p>
<p>У комп'ютерних мережах ідеологічною основою стандартизації є багаторівневий 
підхід до розробки засобів мережевої взаємодії. Саме на основі цього підходу 
була розроблена стандартна семирівнева модель взаємодії відкритих систем, що 
стала свого роду універсальною мовою мережевих фахівців.</p>
<h3><a name="p131"></a>1.3.1. Багаторівневий підхід. Протокол. Інтерфейс. Стек 
протоколів</h3>
<p>Організація взаємодії між пристроями в мережі є складною задачею. Як відомо, 
для рішення складних задач використовується універсальний прийом декомпозиція, 
тобто розбиття однієї складної задачі на трохи більш прості задачі-модулі (мал. 
1.20). Процедура декомпозиція включає в себе чітке визначення функцій кожного 
модуля, що вирішує окрему задачу, і інтерфейсів між ними. У результаті 
досягається логічне спрощення задачі, а крім того, з'являється можливість 
модифікації окремих модулів без зміни іншої частини системи.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%">
  <tr>
    <td VALIGN="MIDDLE" align="center">
    <img border="0" src="images/RIS1_gif_21.gif" width="379" height="175"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE" align="center">МАЛ. 1.20. Приклад декомпозиція задачі</td>
  </tr>
</table>
<p>При декомпозиції часто використовують багаторівневий підхід. Він полягає в 
наступному. Всю безліч модулів розбивають на рівні. Рівні утворять ієрархію, 
тобто є выщележащі і нижчележащі рівні (мал. 1.21). Безліч модулів, що складають 
кожний рівень, сформована таким чином, що для виконання своїх задач вони 
звертаються із запитами тільки до модулів безпосередньо примикаючого 
нищележащего рівня. З іншого боку, результати роботи всіх модулів, що належать 
деякому рівню, можуть бути передані тільки модулям сусіднього выщележащего 
рівня. Така ієрархічна декомпозиція задачі передбачає чітке визначення функції 
кожного рівня і інтерфейсів між рівнями. Інтерфейс визначає набір функцій, які 
нищележащий рівень надає выщележащему. Внаслідок ієрархічної декомпозиції 
досягається відносна незалежність рівнів, а значить, і можливість їх легкої 
заміни.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%">
  <tr>
    <td VALIGN="MIDDLE" align="center">
    <img border="0" src="images/RIS1_gif_22.gif" width="608" height="148"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE" align="center">МАЛ. 1.21. Багаторівневий підхід - 
    створення ієрархії задач</td>
  </tr>
</table>
<p>Засоби мережевої взаємодії, звичайно, також можуть бути представлені у 
вигляді ієрархічно організованої безлічі модулів. При цьому модулі нижнього 
рівня можуть, наприклад, вирішувати всі питання, пов'язані з надійною передачею 
електричних сигналів між двома сусідніми вузлами. Модулі більш високого рівня 
організують транспортування повідомлень в межах всієї мережі, користуючись для 
цього засобами згаданого нище рівня. А на верхньому рівні працюють 
модулі, що надають користувачам доступ до різних служб файлової, друку і т. п. 
Це тільки один з безлічі можливих варіантів розподілу загальної задачі 
організації мережевої взаємодії на часткові підзадачі.</p>
<p>Багаторівневий підхід до опису і реалізації функцій системи застосовується не 
тільки відносно мережевих засобів. Така модель функціонування використовується, 
наприклад, в локальних файлових системах, коли запит, що поступив на доступ до 
файлу послідовно обробляється декількома програмними рівнями (мал. 1.22). Запит 
спочатку аналізується верхнім рівнем, на якому здійснюється послідовний розбір 
складового символьного імені файлу і визначення унікального ідентифікатора 
файлу. Наступний рівень знаходить за унікальним ім'я всі основні характеристики 
файлу: адреса, атрибути доступу і т. п. Потім на більш низькому рівні 
здійснюється перевірка прав доступу до цього файлу, а далі, після розрахунку 
координат області файлу, що містить необхідні дані, виконується фізичний обмін 
із зовнішнім пристроєм за допомогою драйвера диска.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%">
  <tr>
    <td VALIGN="MIDDLE" align="center">
    <img border="0" src="images/RIS1_gif_23.gif" width="478" height="483"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE" align="center">МАЛ. 1.22. Багаторівнева модель файлової 
    системи</td>
  </tr>
</table>
<p>Багаторівневі представлення засобів мережевої взаємодії має свою специфіку, 
пов'язану з тим, що в процесі обміну повідомленнями беруть участь <i>дві </i>
машини, тобто в цьому випадку необхідно організувати узгоджену роботу двох 
“ієрархій”. При передачі повідомлень обидва учасники мережевого обміну повинні 
прийняти безліч угод. Наприклад, вони повинні погодити рівні і форму електричних 
сигналів, спосіб визначення довжини повідомлень, домовитися про методи контролю 
достовірності і т. п. Іншими словами, угоди повинні бути прийняті для всіх 
рівнів, починаючи від самого низького рівня передачі бітів до самого високого, 
що реалізовує сервіс для користувачів мережі.</p>
<p>На мал. 1.23 показана модель взаємодії двох вузлів. З кожної сторони засобу 
взаємодії представлені чотирма рівнями. Процедура взаємодії цих двох вузлів може 
бути описана у вигляді набору правил взаємодії кожної пари відповідних рівнів 
обох сторін, що беруть участь. Формалізовані правила, що визначають 
послідовність і формат повідомлень, якими обмінюються мережеві компоненти, 
лежачі на одному рівні, але в різних вузлах, називаються <i>протоколом</i>.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%">
  <tr>
    <td VALIGN="MIDDLE" align="center">
    <img border="0" src="images/RIS1_gif_24.gif" width="492" height="312"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE" align="center">МАЛ. 1.23. Взаємодія двох вузлів</td>
  </tr>
</table>
<p>Модулі, що реалізовують протоколи сусідніх рівнів і що знаходяться в одному 
вузлі, також взаємодіють один з одним відповідно до чітко певних правил і за 
допомогою стандартизованих форматів повідомлень. Ці правила прийнято називати <i>
інтерфейсом. </i>Інтерфейс визначає набір сервісів, що надається даним рівнем 
сусідньому рівню. У суті, протокол і інтерфейс виражають одне і те ж поняття, 
але традиційно в мережах за ними закріпили різні області дії: протоколи 
визначають правила взаємодії модулів одного рівня в різних вузлах, а інтерфейси 
модулів сусідніх рівнів в одному вузлі.</p>
<p>Кошти кожного рівня повинні відпрацьовувати, по-перше, свій власний протокол, 
а по-друге, інтерфейси з сусідніми рівнями.</p>
<p>Ієрархічно організований набір протоколів, достатній для організації 
взаємодії вузлів в мережі, називається <i>стеком комунікаційних протоколів</i>.</p>
<p>Комунікаційні протоколи можуть бути реалізовані як програмно, так і апаратно. 
Протоколи нижніх рівнів часто реалізовуються комбінацією програмних і апаратних 
засобів, а протоколи верхніх рівнів як правило, чисто програмними засобами.</p>
<p>Програмний модуль, що реалізовує деякий протокол, часто скорочено також 
називають “протоколом”. При цьому співвідношення між протоколом формально певною 
процедурою і протоколом програмним модулем, що реалізовує цю процедуру, 
аналогічно співвідношенню між алгоритмом рішення деякої задачі і програмою, що 
вирішує цю задачу.</p>
<p>Зрозуміло, що один і той же алгоритм може бути запрограмований з різною мірою 
ефективності. Точно так само і протокол може мати декілька програмних 
реалізацій. Саме тому при порівнянні протоколів потрібно враховувати не тільки 
логіку їх роботи, але і якість програмних рішень. Більш того на ефективність 
взаємодії пристроїв в мережі впливає якість всієї сукупності протоколів, що 
складають стек, зокрема, наскільки раціонально розподілені функції між 
протоколами різних рівнів і наскільки добре визначені інтерфейси між ними.</p>
<p>Протоколи реалізовуються не тільки комп'ютерами, але і іншими мережевими 
пристроями концентраторами, мостами, комутаторами, маршрутизаторами і т. д. 
Дійсно, в загальному випадку зв'язок комп'ютерів в мережі здійснюється не 
напряму, а через різні комунікаційні пристрої. У залежності від типу пристрою в 
ньому повинні бути вбудовані засоби, що реалізовують той або інший набір 
протоколів.</p>
<p>Щоб ще раз пояснити поняття “протокол” і “інтерфейс”, розглянемо приклад, що 
не має відношення до обчислювальних мереж, а саме обговоримо взаємодію двох 
підприємств <font color="#008000">А</font> і <font color="#008000">В</font>, 
пов'язаних між собою діловою співпрацею. Між підприємствами існують численні 
домовленості і угоди, такі, наприклад, як регулярне постачання продукції одного 
підприємства іншому. Відповідно до цієї домовленості начальник відділу продажу 
підприємства <font color="#008000">А</font> регулярно на початку кожного місяця 
посилає офіційне повідомлення начальнику відділу закупівлі підприємства
<font color="#008000">В</font> про те, скільки і якого товару може бути 
поставлено в цьому місяці. У відповідь на це повідомлення начальник відділу 
закупівлі підприємства <font color="#008000">В </font>посилає у відповідь заявку 
встановленого зразка на необхідну кількість продукції. Можливо, процедура 
взаємодії цих начальників включає додаткові узгодження, в будь-якому випадку 
існує встановлений порядок взаємодії, який можна вважати “протоколом рівня 
начальників”. Начальники посилають свої повідомлення і заявки через своїх 
секретарів. Порядок взаємодії начальника і секретаря відповідає поняттю 
міжрівневого інтерфейсу “начальник -секретар”. На підприємстві
<font color="#008000">А</font> обмін документами між начальником і секретарем 
йде через спеціальну папку, а на підприємстві <font color="#008000">В</font> 
начальник спілкується з секретарем по факсу. Таким чином, інтерфейси “начальник 
- секретар” на цих двох підприємствах відрізняються.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE">
    <img border="0" src="images/RIS1_gif_25.gif" width="575" height="460"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.24. Приклад багаторівневої взаємодії підприємств</td>
  </tr>
</table>
<p>Після того як повідомлення передані секретарям, начальників не хвилює, яким 
чином ці повідомлення будуть переміщатися далі звичайною або електронною поштою, 
факсом або нарочним. Вибір способу передачі це рівень компетенції секретарів, 
вони можуть вирішувати це питання, не повідомляючи про це своїх начальників, 
оскільки їх протокол взаємодії пов'язаний тільки з передачею повідомлень, що 
поступають зверху, і не стосується змісту цих повідомлень. На мал. 1.24 
показано, що як протокол взаємодії “секретар секретар” використовується обмін 
листами. При розв'язанні інших питань начальники можуть взаємодіяти по інших 
правилах-протоколах, але це не вплине на роботу секретарів, для яких не важливо, 
які повідомлення відправляти, а важливо, щоб вони дійшли до адресата. Отже, в 
цьому випадку ми маємо справу з двома рівнями рівнем начальників і рівнем 
секретарів, і кожний з них має власний протокол, який може бути змінений 
незалежно від протоколу іншого рівня. Ця незалежність протоколів один від одного 
і робить привабливим багаторівневий підхід.</p>
<h3><a name="p132"></a>1.3.2. Модель OSI</h3>
<p>З того, що протокол є угодою, прийнятою двома взаємодіючими об'єктами, в 
цьому випадку двома працюючими в мережі комп'ютерами, зовсім не потрібно, щоб 
він обов'язково був стандартним. Але на практиці при реалізації мереж прагнуть 
використати стандартні протоколи. Це можуть бути фірмові, національні або 
міжнародні стандарти.</p>
<p>На початку 80-х років ряд міжнародних організацій по стандартизації IS0, 
ITU-T і деякі інші розробили модель, яка зіграла значну роль в розвитку мереж. 
Ця модель називається <i><b>моделлю взаємодії відкритих систем (Open System 
Interconnection, OSI) або</b></i> <b>моделлю OSI</b>. Модель OSI визначає різні 
рівні взаємодії систем, дає їм стандартні імена і вказує, які функції повинен 
виконувати кожний рівень. Модель OSI була розроблена на основі великого досвіду, 
отриманого при створенні комп'ютерних мереж, в основному глобальних, у 70-ті 
роки. Повний опис цієї моделі займає більше за 1000 сторінок тексту.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%">
  <tr>
    <td VALIGN="MIDDLE" align="center">
    <img border="0" src="images/RIS1_gif_26.gif" width="621" height="601"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE" align="center">МАЛ. 1.25. Модель взаємодії відкритих 
    систем ISO/OSI</td>
  </tr>
</table>
<p>У моделі OSI (мал. 1.25) засоби взаємодії діляться на сім рівнів: прикладний, 
представницький, сеансовий, транспортний, мережевий, канальний і фізичний. 
Кожний рівень має справу з одним певним аспектом взаємодії мережевих пристроїв.</p>
<p>Модель OSI описує тільки системні засоби взаємодії, що реалізовуються 
операційною системою, системними утилітами, системними апаратними коштами. 
Модель не включає засоби взаємодії додатків кінцевих користувачів. Свої власні 
протоколи взаємодії додатку реалізовують, звертаючись до системних засобів. Тому 
необхідно розрізнювати рівень взаємодії додатків і прикладний рівень.</p>
<p>Потрібно також мати на увазі, що додаток може взяти на себе функції деяких 
верхніх рівнів моделі OSI. Наприклад, деяка СУБД має вбудовані засоби 
віддаленого доступу до файлів. У цьому випадку додаток, виконуючи доступ до 
віддалених ресурсів, не використовує системну файлову службу; він обходить 
верхні рівні моделі OSI і звертається напряму до системних засобів, 
відповідальних за транспортування повідомлень по мережі, які розташовуються на 
нижніх рівнях моделі OSI.</p>
<p>Отже, нехай додаток звертається із запитом до прикладного рівня, наприклад до 
файлової служби. На основі цього запиту програмне забезпечення прикладного рівня 
формує повідомлення стандартного формату. Звичайне повідомлення складається із 
заголовка і поля даних. Заголовок містить службову інформацію, яку необхідно 
передати через мережу прикладному рівню машини-адресата, щоб повідомити йому, 
яку роботу треба виконати. У нашому випадку заголовок, очевидно, повинен містити 
інформацію про місце знаходження файла і про тип операції, яку необхідно над ним 
виконати. Поле даних повідомлення може бути пустим або містити які-небудь дані, 
наприклад ті, які необхідно записати у віддалений файл. Але для того щоб 
доставити цю інформацію за призначенням, має бути вирішити ще багато задач, 
відповідальність за які несуть нищележащі рівні. </p>
<p>Після формування повідомлення прикладний рівень направляє його вниз по стеку 
представницькому рівню. Протокол представницького рівня на основі інформації, 
отриманої із заголовка прикладного рівня, виконує необхідні дії і додає до 
повідомлення власну службову інформацію - заголовок представницького рівня, в 
якому містяться вказівки для протоколу представницького рівня машини-адресата. 
Отримане в результаті повідомлення передається вниз сеансовому рівню, який в 
свою чергу додає свій заголовок, і т. д. (Деякі реалізації протоколів вміщують 
службову інформацію не тільки на початку повідомлення у вигляді заголовка, але і 
в кінці, у вигляді так званого “кінцевика”.) Нарешті, повідомлення досягає 
нижнього, фізичного рівня, який власне і передає його по лініях зв'язку 
машині-адресату. До цього моменту повідомлення “обростає” заголовками всіх 
рівнів (мал. 1.26). </p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%">
  <tr>
    <td VALIGN="MIDDLE" align="center">
    <img border="0" src="images/RIS1_gif_27.gif" width="723" height="316"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE" align="center">МАЛ. 1.26. Вкладеність повідомлень різних 
    рівнів</td>
  </tr>
</table>
<p>Коли повідомлення по мережі поступає на машину-адресата, воно приймається її 
фізичним рівнем і послідовно переміщається вгору з рівня на рівень. Кожний 
рівень аналізує і обробляє заголовок свого рівня, виконує відповідні даному 
рівню функції, а потім видаляє цей заголовок і передає повідомлення рівню, який 
вище наступного.</p>
<p>Нарівні з терміном <i>повідомлення (message)</i> існують і інші терміни, що 
застосовуються мережевими фахівцями для позначення одиниць даних в процедурах 
обміну. У стандартах ISO для позначення одиниць даних, з якими мають справу, 
протоколи різних рівнів, використовується загальна назва протокольний<i> блок 
даних,(ProtocolData Unit, PDU)</i>. Для позначення блоків даних певних рівнів 
часто використовуються спеціальні назви: <b>кадр (frame), пакет</b> (<b>packet)</b>,<b> 
дейтаграмма (datagram)</b>,<b> сегмент</b> (<b>segment</b>).</p>
<p>У моделі OSI розрізнюються два основних типи протоколів. У протоколах <i>з 
встановленням з'єднання (connection-oriented) перед</i> обміном даними 
відправник і одержувач повинні спочатку встановити з'єднання і, можливо, вибрати 
деякі параметри протоколу, які вони будуть використати при обміні даними. Після 
завершення діалогу вони повинні розірвати це з'єднання. Телефон це приклад 
взаємодії, заснований на встановленні з'єднання.</p>
<p>Друга група протоколів протоколи <i>без попереднього встановлення з'єднання (connectionless)</i>. 
Такі протоколи називаються також <i>дейтаграмними протоколами</i>. Відправник 
просто передає повідомлення, коли воно готове. Опускання листа в поштовий ящик 
це приклад зв'язку без попереднього встановлення з'єднання. При взаємодії 
комп'ютерів використовуються протоколи обох типів.</p>
<h3><a name="p133"></a>1.3.3. Рівні моделі OSI</h3>
<h4><a name="p133_1"></a>Фізичний рівень</h4>
<p>Фізичний рівень (Physical layer) має справу з передачею бітів по фізичних 
каналах зв'язку, таких, наприклад, як коаксіальний кабель, о витая пара, 
оптоволоконний кабель або цифровий територіальний канал. До цього рівня мають 
відношення характеристики фізичних серед передачі даних, такі як смуга 
пропущення, прешкодозахищеність, хвильовий опір і інші. На цьому ж рівні 
визначаються характеристики електричних сигналів, що передають дискретну 
інформацію, наприклад, крутість фронтів імпульсів, рівні напруження або струму 
сигналу, що передається, тип кодування, швидкість передачі сигналів. Крім цього, 
тут стандартизуються типи роз'ємів і призначення кожного контакту.</p>
<p>Функції фізичного рівня реалізовуються у всіх пристроях, підключених до 
мережі. З боку комп'ютера функції фізичного рівня виконуються мережевим 
адаптером або послідовним портом.</p>
<p>Прикладом протоколу фізичного рівня може служити специфікація 10Base-T 
технології Ethernet, яка визначає як кабель, що використовується неекрановану 
пару категорії, що виється 3 з хвильовим опором 100 Ом, роз'єм RJ-45, 
максимальну довжину фізичного сегмента 100 метрів, манчестерський код для 
представлення даних в кабелі, а також деякі інші характеристики середи і 
електричних сигналів.</p>
<h4><a name="p133_2"></a>Канальний рівень</h4>
<p>На фізичному рівні просто пересилаються біти. При цьому не враховується, що в 
деяких мережах, в яких лінії зв'язку використовуються (розділяються) 
навперемінно декількома парами взаємодіючих комп'ютерів, фізична середа передачі 
може бути зайнята. Тому однією із задач канального рівня (Data Link layer) є 
перевірка доступності середи передачі. Іншою задачею канального рівня є 
реалізація механізмів виявлення і корекції помилок. Для цього на канальному 
рівні біти групуються в набори, звані <i>кадрами (frames)</i>. Канальний рівень 
забезпечує коректність передачі кожного кадру, вміщуючи спеціальну послідовність 
біт в початок і кінець кожного кадру, для його виділення, а також обчислює 
контрольну суму, обробляючи всі байти кадру певним способом і додаючи контрольну 
суму до кадру. Коли кадр приходить по мережі, одержувач знов обчислює контрольну 
суму отриманих даних і порівнює результат з контрольною сумою з кадру. Якщо вони 
співпадають, кадр вважається правильним і приймається. Якщо ж контрольні суми не 
співпадають, то фіксується помилка. Канальний рівень може не тільки виявляти 
помилки, але і виправляти їх за рахунок повторної передачі пошкоджених кадрів. 
Необхідно зазначити, що функція виправлення помилок не є обов'язковою для 
канального рівня, тому в деяких протоколах цього рівня&nbsp; <b>вона відсутня, 
наприклад, в Ethernet і Frame Relay</b>.</p>
<p>У протоколах канального рівня, що використовуються в локальних мережах, 
закладена певна структура зв'язків між комп'ютерами і способи їх адресації. Хоч 
канальний рівень і забезпечує доставку кадру між будь-якими двома вузлами 
локальної мережі, він це робить тільки в мережі з абсолютно певною топологією 
зв'язків, саме тією топологією, для якої він був розроблений. До таких типових 
топологій, що підтримуються протоколами канального рівня локальних мереж, 
відносяться загальна шина, кільце і зірка, а також структури, отримані з них за 
допомогою мостів і комутаторів. Прикладами протоколів канального рівня є 
протоколи Ethernet, Token Ring, FDDI, lOOVG-AnyLAN.</p>
<p>У локальних мережах протоколи канального рівня використовуються комп'ютерами,&nbsp; 
мостами, комутаторами і маршрутизаторами. У комп'ютерах функції канального рівня 
реалізовуються спільними зусиллями мережевих адаптерів і їх драйверів.</p>
<p>У глобальних мережах, які рідко володіють регулярною топологією, канальний 
рівень часто забезпечує обмін сполученнями тільки між двома сусідніми 
комп'ютерами, сполученими індивідуальною лінією зв'язку. Прикладами протоколів 
“точка-точка” (як часто називають такі протоколи) можуть служити широко поширені 
протоколи РРР і LAP-B. У таких випадках для доставки сполучень між кінцевими 
вузлами через всю мережу використовуються засоби і мережевого рівня. Саме так 
організовані мережі Х.25. Іноді в глобальних мережах функції канального рівня в 
чистому вигляді виділити важко, оскільки в одному і тому ж протоколі вони 
об'єднуються з функціями мережевого рівня. Прикладами такого підходу можуть 
служити протоколи технологій ATM і Frame Relay.</p>
<p>Загалом канальный рівень являє собою вельми могутній і закінчений набір 
функцій по пересилці сполучень між вузлами мережі. У деяких випадках протоколи 
канального рівня виявляються самодостатніми транспортними засобами і можуть 
допускати роботу понад них безпосередньо протоколів прикладного рівня або 
додатків, без залучення засобів мережевого і транспортного рівнів. Наприклад, 
існує реалізація протоколу управління мережею SNMP, безпосередньо без Ethernet, 
хоч стандартно цей протокол працює на основі мережевого протоколу IP і 
транспортного протоколу UDP. Природно, що застосування такої реалізації буде 
обмеженим вона не підходить для складних мереж різних технологій, наприклад 
Ethernet і Х.25, і навіть для такої мережі, в якій у всіх сегментах 
застосовується Ethernet, але між сегментами існують петлевідні зв'язкі. А ось в 
двохсегментній мережі Ethernet, об'єднаній мостом, реалізація SNMP над канальним 
рівнем буде цілком прецездатний.</p>
<p>Проте для забезпечення якісного транспортування повідомлень в мережах 
будь-яких топологій і технологій функцій канального рівня виявляється 
недостатньо, тому в моделі OSI рішення цієї задачі покладається на два наступних 
рівні мережевий і транспортний.</p>
<h4><a name="p133_3"></a>Мережевий рівень</h4>
<p>Мережевий рівень (Network layer) служить для утворення єдиної транспортної&nbsp; 
системи, що об'єднує декілька мереж, причому ці мережі можуть використати 
абсолютно різні принципи передачі сполучень між кінцевими вузлами і володіти 
довільною структурою зв'язків. Функції мережевого рівня досить різноманітні. 
Почнемо їх розгляд на прикладі об'єднання локальних мереж.</p>
<p>Протоколи канального рівня локальних мереж забезпечують доставку даних між 
будь-якими вузлами тільки в мережі з відповідною типовою топологією, наприклад 
топологією ієрархічної зірки. Це дуже жорстке обмеження, яке не дозволяє 
будувати мережі з розвиненою структурою, наприклад, мережі, що об'єднують 
декілька мереж підприємства в єдину мережу, або високонадійні мережі, в яких 
існують надмірні зв'язки між вузлами. Можна було б ускладнювати протоколи 
канального рівня для підтримки петлевидних надмірних зв'язків, але принцип 
розділення обов'язків між рівнями приводить до іншого розв'язку. Щоб з одного 
боку зберегти простоту процедур передачі даних для типових топологій, а з іншою 
допустити використання довільних топологій, вводиться додатковий мережевий 
рівень.</p>
<p>На мережевому рівні сам термін <i>мережа </i>наділяють специфічним значенням. 
У цьому випадку під мережею розуміється сукупність комп'ютерів, сполучених між 
собою відповідно до однієї з стандартних типових топологій і використовуючих для 
передачі даних один з протоколів канального рівня, визначений для цієї 
топології.</p>
<p>Всередині мережі доставка даних забезпечується відповідним канальним рівнем, 
а ось доставкою даних між мережами займається мережевий рівень, який і підтримує 
можливість правильного вибору маршруту передачі повідомлення навіть в тому 
випадку, коли структура зв'язків між складаючими мережами має характер, 
відмінний від прийнятого в протоколах канального рівня.</p>
<p>Мережі сполучаються між собою спеціальними пристроями, званими 
маршрутизаторами. <i>Маршрутизатор </i>цей пристрій, який збирає інформацію про 
топологію міжмережевих з'єднань і на її основі пересилає пакети мережевого рівня 
в мережу призначення. Щоб передати повідомлення від відправника, що знаходиться 
в одній мережі, одержувачу, що знаходиться в іншій мережі, треба здійснити деяку 
кількість <i>транзитних передач між мережами, іліхопів (</i>від hop<i> стрибок)</i>, 
кожний раз вибираючи відповідний маршрут. Таким чином, маршрут являє собою 
послідовність маршрутизаторів, через які проходить пакет.</p>
<p>На мал. 1.27 показані чотири мережі, пов'язані трьома маршрутизаторами. Між 
вузлами А і В даній мережі пролягають два маршрути: перший через маршрутизатори 
1 і 3, а другий через маршрутизатори 1, 2 і 3.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE">
    <img border="0" src="images/RIS1_gif_28.gif" width="545" height="384"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.27. Приклад складової мережі</td>
  </tr>
</table>
<p>Проблема вибору найкращого шляху називається <i>маршрутизацією, </i>і її 
розв'язання є однією з головних задач мережевого рівня. Ця проблема 
ускладнюється тим, що самий короткий шлях не завжди самий кращий. Часто 
критерієм при виборі маршруту є час передачі даних по цьому маршруту; воно 
залежить від пропускної спроможності каналів зв'язку і інтенсивності трафіка, 
яка може змінюватися з течією часу. Деякі алгоритми маршрутизації намагаються 
пристосуватися до зміни навантаження, в той час як інші приймають рішення на 
основі середніх показників за тривалий час. Вибір маршруту може здійснюватися і 
по інших критеріях, наприклад надійність передачі.</p>
<p>Взагалі функції мережевого рівня ширше, ніж функції передачі повідомлень по 
зв'язках з нестандартною структурою, які ми зараз розглянули на прикладі 
об'єднання декількох локальних мереж. Мережевий рівень вирішує також задачі 
узгодження різних технологій, спрощення адресації у великих мережах і&nbsp; 
створення надійних і гнучких бар'єрів на шляху небажаного трафіка між мережами.</p>
<p>Повідомлення мережевого рівня прийнято називати <i>пакетами (packets)</i>. 
При організації доставки пакетів на мережевому рівні використовується поняття 
“номер мережі”. У цьому випадку адреса одержувача складається з старшої частини 
номера мережі і молодшої номери вузла в цій мережі. Всі вузли однієї мережі 
повинні мати одну і ту ж старшу частину адреси, тому терміну “мережа” на 
мережевому рівні можна дати і&nbsp; інше, більш формальне визначення: мережа це 
сукупність вузлів, мережева адреса яких містить один і той же номер мережі.</p>
<p>На мережевому рівні визначаються два вигляди протоколів. Перший вигляд <i>
мережеві протоколи (routedprotocols)</i> реалізовують просування пакетів через 
мережу. Саме ці протоколи звичайно мають на увазі, коли кажуть про протоколи 
мережевого рівня. Однак часто до мережевого рівня відносять і інший вигляд 
протоколів, званих протоколами обміну маршрутною інформацією або просто 
протоколами<i> маршрутизації (routingprotocols)</i>. За допомогою цих протоколів 
маршрутизатори збирають інформацію про топологію міжмережевих з'єднань. 
Протоколи мережевого рівня реалізовуються програмними модулями операційної 
системи, а також програмними і апаратними засобами маршрутизаторів.</p>
<p>На мережевому рівні працюють протоколи ще одного типу, які відповідають за 
відображення адреси вузла, що використовується на мережевому рівні, на локальну 
адресу мережі. Такі протоколи часто називають <i>протоколами дозволу адрес </i>
Address Resolution Protocol, ARP. Іноді їх відносять не до мережевого рівня, а 
до канальному, хоч тонкість класифікації не змінює їх суті.</p>
<p>Прикладами протоколів мережевого рівня є протокол міжмережевої взаємодії IP 
стека TCP/IP і протокол міжмережевого обміну пакетами IPX стека Novell.</p>
<h4><a name="p133_4"></a>Транспортний рівень</h4>
<p>На шляху від відправника до одержувача пакети можуть бути спотворені або 
загублені. Хоч деякі додатки мають власні засоби обробки помилок, існують і 
такі, які вважають за краще відразу мати справу з надійним з'єднанням. 
Транспортний рівень (Transport layer) забезпечує додаткам або верхнім рівням 
стека прикладному і сеансовому передачу даних з тією мірою надійності, яка їм 
потрібна. Модель OSI визначає п'ять класів сервісу, що надаються транспортним 
рівнем. Ці види сервісу відрізняються якістю послуг, що надаються: терміновістю, 
можливістю відновлення перерваного зв'язку, наявністю засобів мультиплексування 
декількох з'єднань між різними прикладними протоколами через загальний 
транспортний протокол, а головне здібністю до виявлення і виправлення помилок 
передачі, таких як спотворення, втрата і дублювання пакетів.</p>
<p>Вибір класу сервісу транспортного рівня визначається, з одного боку, тим, в 
якій мірі задача забезпечення надійності вирішується самими додатками і 
протоколами більше за високі, ніж транспортний, рівні, а з іншого боку, цей 
вибір залежить від того, наскільки надійною є система транспортування даних в 
мережі, що забезпечується рівнями, розташованими нижче транспортного мережевим, 
канальним і фізичним. Так, наприклад, якщо якість каналів передачі зв'язку є 
дуже високою і імовірність виникнення помилок, не виявлених протоколами більш 
низьких рівнів, невелика, то розумно скористатися одним з полегшених сервісів 
транспортного рівня, не обтяжених численними перевірками, квотуванням і іншими 
прийомами підвищення надійності. Якщо ж транспортні засоби нижніх рівнів 
спочатку дуже ненадійні, то доцільно звернутися до найбільш розвиненого сервісу 
транспортного рівня, який працює, використовуючи максимум засобів для виявлення 
і усунення помилок, за допомогою попереднього встановлення логічного з'єднання, 
контролю доставки повідомлень по контрольних сумах і циклічній нумерації 
пакетів, встановлення тайму-аутів доставки і т.п.</p>
<p>Як правило, всі протоколи, починаючи з транспортного рівня і вище, 
реалізовуються програмними засобами кінцевих вузлів мережі компонентами їх 
мережевих операційних систем. Як приклад транспортних протоколів можна привести 
протоколи TCP і UDP стека TCP/IP і протокол SPX стека Novell.</p>
<p>Протоколи нижніх чотирьох рівнів узагальнено називають мережевим транспортом 
або транспортною підсистемою, оскільки вони повністю вирішують задачу 
транспортування повідомлень із заданим рівнем якості в складових мережах з 
довільною топологією і різними технологіями. Інші три верхніх рівні вирішують 
задачі надання прикладних сервісів на основі транспортної підсистеми, що існує.
</p>
<h4><a name="p133_5"></a>Сеансовий рівень</h4>
<p>Сеансовий рівень (Session layer) забезпечує управління діалогом: фіксує, яка 
з сторін є активною в даний момент, надає засоби синхронізації. Останні 
дозволяють вставляти контрольні точки в довгі передачі, щоб у разі відмови можна 
було повернутися назад до останньої контрольної точки, а не починати все з 
початку. На практиці небагато які додатки використовують сеансовий рівень, і він 
рідко реалізовується у вигляді окремих протоколів, хоч функції цього рівня часто 
об'єднують з функціями прикладного рівня і реалізовують в одному протоколі.</p>
<h4><a name="p133_6"></a>Представницький рівень</h4>
<p>Представницький рівень (Presentation layer) має справу з формою подання 
інформації, що передається по мережі, не міняючи при цьому її змісту. За рахунок 
рівня уявлення інформація, що передається прикладним рівнем однієї системи, 
завжди зрозуміла прикладному рівню іншої системи. За допомогою засобів даного 
рівня протоколи прикладних рівнів можуть подолати синтаксичні відмінності в 
представленні даних або ж відмінності в кодах символів, наприклад кодів ASCII і 
EBCDIC. На цьому рівні може виконуватися шифрування і дешифрування даних, 
завдяки якому секретність обміну даними забезпечується відразу для всіх 
прикладних служб. Прикладом такого протоколу є протокол Secure Socket Layer (SSL), 
який забезпечує секретний обмін повідомленнями для протоколів прикладного рівня 
стека TCP/IP.</p>
<h4><a name="p133_7"></a>Прикладний рівень</h4>
<p>Прикладний рівень (Application layer) це насправді просто набір різноманітних 
протоколів, за допомогою яких користувачі мережі отримують доступ до ресурсів, 
що розділяються, таких як файли, принтери або гіпертекстові Web-сторінки, а 
також організують свою спільну роботу, наприклад, за допомогою протоколу 
електронної пошти. Одиниця даних, якою оперує прикладний рівень, звичайно 
називається <i>повідомленням </i>(<i>message</i>).</p>
<p>Існує дуже велика різноманітність служб прикладного рівня. Приведемо як 
приклад хоч би декілька найбільш поширених реалізацій файлових служб: NCP в 
операційній системі Novell NetWare, SMB в Microsoft Windows NT, NFS, FTP і TFTP, 
що входять в стек TCP/IP.</p>
<h4><a name="p133_8"></a>Мережезалежні і мереженезалежні рівні</h4>
<p>Функції всіх рівнів моделі OSI можуть бути віднесені до однієї з двох груп: 
або до функцій, що залежать від конкретної технічної реалізації мережі, або до 
функцій, орієнтованих на роботу з додатками.</p>
<p>Три нижніх рівні фізичний, канальний і мережевий є мережезалежними, тобто 
протоколи цих рівнів тісно пов'язані з технічною реалізацією мережі і 
комунікаційним обладнанням, що використовується. Наприклад, перехід на 
обладнання FDDI означає повну зміну протоколів фізичного і канального рівнів у 
всіх вузлах мережі.</p>
<p>Три верхніх рівні прикладний, представницький і сеансовий орієнтовані на 
додатки і мало залежать від технічних особливостей побудови мережі. На протоколи 
цих рівнів не впливають які б то не було зміни в топології мережі, заміна 
обладнання або перехід на іншу мережеву технологію. Так, перехід від Ethernet на 
високошвидкісну технологію l00VG-AnyLAN не зажадає ніяких змін в програмних 
засобах, що реалізовують функції прикладного, представницького і сеансового 
рівнів.</p>
<p>Транспортний рівень є проміжним, він приховує всі деталі функціонування 
нижніх рівнів від верхніх. Це дозволяє розробляти додатки, що не залежать від 
технічних засобів безпосереднього транспортування повідомлень.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE">
    <img border="0" src="images/RIS1_gif_29.gif" width="653" height="601"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.28. Сетезовисимые і сетенезависмые рівні моделі 
    OSI</td>
  </tr>
</table>
<p>На мал. 1.28 показані рівні моделі OSI, на яких працюють різні елементи 
мережі. Комп'ютер з встановленою на йому мережевою ОС взаємодіє з іншим 
комп'ютером за допомогою протоколів всіх семи рівнів. Цю взаємодію комп'ютери 
здійснюють опосредовано через різні комунікаційні пристрої: концентраторы, 
модеми, мости, комутатори, маршрутизатори, мультиплексори. У залежності від типу 
комунікаційний пристрій може працювати або тільки на фізичному рівні (повторювач), 
або на фізичному і канальному (міст), або на фізичному, канальному і мережевому, 
іноді захоплюючи і транспортний рівень (маршрутизатор). На мал. 1.29 показана 
відповідність функцій різних комунікаційних пристроїв рівням моделі OSI.</p>
<p>Модель OSI представляє хоч і дуже важливу, але тільки одну з багатьох моделей 
комунікацій. Ці моделі і пов'язані з ними стеки протоколів можуть відрізнятися 
кількістю рівнів, їх функціями, форматами повідомлень, службами, що 
підтримується на верхніх рівнях, і іншими параметрами.</p>
<table CELLSPACING="0" BORDER="0" WIDTH="100%" style="text-align: center">
  <tr>
    <td VALIGN="MIDDLE">
    <img border="0" src="images/RIS1_gif_30.gif" width="594" height="543"></td>
  </tr>
  <tr>
    <td VALIGN="MIDDLE">МАЛ. 1.29. Відповідність функцій різних пристроїв мережі 
    рівням моделі OSI</td>
  </tr>
</table>
<h3><a name="p134"></a>1.3.4. Поняття “відкрита система”</h3>
<p>Модель OSI, як це виходить з її назви (Open System Interconnection), описує 
взаємозв'язки відкритих систем. Що ж таке відкрита система?</p>
<p>У широкому значенні <i>відкритою системою </i>може бути названа будь-яка 
система&nbsp; (комп'ютер, обчислювальна мережа, ОС, програмний пакет, інші 
апаратні і&nbsp; програмні продукти), яка побудована відповідно до відкритих 
специфікацій.</p>
<p>Нагадаємо, що під терміном “специфікація” (в обчислювальній техніці) 
розуміють формалізований опис апаратних або програмних компонентів, способів їх 
функціонування, взаємодії з іншими компонентами, умов експлуатації, обмежень і 
особливих характеристик. Зрозуміло, що не всяка специфікація є стандартом. У 
свою чергу, під відкритими специфікаціями розуміються опубліковані, 
загальнодоступні специфікації, відповідні стандартам і прийняті в результаті 
досягнення згоди після всебічного обговорення всіма зацікавленими сторонами.</p>
<p>Використання при розробці систем відкритих специфікацій дозволяє третім 
сторонам розробляти для цих систем різні апаратні або програмні засоби 
розширення і модифікації, а також створювати програмно-апаратні комплекси з 
продуктів різних виробників.</p>
<p>Для реальних систем повна відвертість є недосяжним ідеалом. Як правило, 
навіть в системах, званих відкритими, цьому визначенню відповідають лише деякі 
частини, підтримуючі зовнішні інтерфейси. Наприклад, відвертість сімейства 
операційних систем Unix укладається, крім всього іншого, в наявності 
стандартизованого програмного інтерфейсу між ядром і додатками, що дозволяє 
легко перенести додатки з середи однієї версії Unix в середу іншої версії. Ще 
одним прикладом часткової відвертості є застосування в досить закритій 
операційній системі Novell NetWare відкритого інтерфейсу Open Driver Interface (ODI) 
для включення в систему драйверів мережевих адаптерів незалежних виробників. Чим 
більше відкритих специфікацій використано при розробці системи, тим більше 
відкритою вона є.</p>
<p>Модель OSI торкається тільки одного аспекту відкритості, а саме відкритість 
засобів взаємодії пристроїв, пов'язаних в обчислювальну мережу. Тут під 
відкритою системою розуміється мережевий пристрій, готовий взаємодіяти з іншими 
мережевими пристроями з використанням стандартних правил, що визначають формат, 
зміст і значення і повідомлень, що відправляються, що приймаються. </p>
<p>Якщо дві мережі побудовані з дотриманням принципів відкритості, то це дає 
наступні переваги:</p>
<ul>
  <li>можливість побудови мережі з апаратних і програмних засобів різних 
  виробників, що дотримуються одного і того ж стандарту; </li>
  <li>можливість безболісної заміни окремих компонентів мережі іншими, більш 
  довершеними, що дозволяє мережі розвиватися з мінімальними витратами; </li>
  <li>можливість легкого сполучення однієї мережі з іншою; </li>
  <li>простота освоєння і обслуговування мережі. </li>
</ul>
<p>Яскравим прикладом відкритої системи є міжнародна мережа Internet. Ця мережа 
розвивалася відповідно повному до вимог, що пред'являються до відкритих систем. 
У розробці її стандартів брали участь тисячі фахівців-користувачів цієї мережі з 
різних університетів, наукових організацій і фірм-виробників обчислювальної 
апаратури і програмного забезпечення, працюючих в різних країнах. Сама назва 
стандартів, що визначають роботу мережі Internet Revest For Comments (RFC), що 
можна перевести як “запит на коментарі”, показує голосний і відкритий характер 
стандартів, що приймаються. У результаті мережа Internet зуміла об'єднати в собі 
саме різноманітне обладнання і програмне забезпечення величезного числа мереж, 
розкиданих по всьому світу.</p>
<h3><a name="p135"></a>1.3.5. Модульність і стандартизація</h3>
<p>Модульність це одна з невід'ємних і природних властивостей обчислювальних 
мереж. Модульність виявляється не тільки в багаторівневому представленні 
комунікаційних протоколів в кінцевих вузлах мережі, хоч це, безумовно, важлива і 
принципова особливість мережевої архітектури. Мережа складається з величезного 
числа різних модулів комп'ютерів, мережевих адаптерів, мостів, маршрутизаторів, 
модемів, операційних систем і модулів додатків. Різноманітні вимоги, що 
пред'являються підприємствами до комп'ютерних мереж, привели до такої ж 
різноманітності тих, що випускаються для побудови мережі пристроїв і програм. Ці 
продукти відрізняються не тільки основними функціями (мається на увазі функції, 
наприклад, повторювачі, мости або програмними редиректорами), але і численними 
допоміжними функціями, що надають користувачам або адміністраторам додаткові 
зручності, такі як автоматичне конфігурування параметрів пристрою, автоматичне 
виявлення і усунення деяких несправностей, можливість програмної зміни зв'язків 
в мережі і т. п. Різноманітність збільшується також тому, що багато які пристрої 
і програми відрізняються поєднанням тих або інших основних і додаткових функцій&nbsp;&nbsp; 
існують, наприклад, пристрої, що поєднують основні можливості комутаторів і 
маршрутизаторів, до яких додається ще і набір деяких додаткових функцій, 
характерний тільки для даного продукту.</p>
<p>У результаті не існує компанії, яка змогла б забезпечити виробництво повного 
набору всіх типів і підтипів обладнання і, програмного забезпечення, необхідного 
для побудови мережі. Але, оскільки всі компоненти мережі повинні працювати 
узгоджено, абсолютно необхідним виявилося прийняття численних стандартів, які, 
якщо не у всіх, то хоч би в більшості випадків, гарантували б сумісність 
обладнання і програм різних фірм - виробників. Таким чином, поняття модульності 
і стандартизації в мережах нерозривно пов'язані, і модульний підхід тільки тоді 
дає переваги, коли він супроводиться проходженням стандартам.</p>
<p>У результаті відкритий характер стандартів і специфікацій важливий не тільки 
для комунікаційних протоколів, але і для всіх численних функцій різноманітних 
пристроїв і програм; що випускаються для побудови мережі. Треба зазначити, що 
більшість стандартів, що приймаються сьогодні, носять відкритий характер. Час 
закритих систем, точні специфікації на які були відомі тільки фірмі-виробнику, 
пішов. Всі усвідомили, що можливість легкої взаємодії з продуктами конкурентів 
не знижує, а навпаки, підвищує цінність виробу, оскільки його можна застосувати 
в більшій кількості працюючих мереж, побудованих на продуктах різних виробників. 
Тому навіть фірми, що раніше випускали вельми закриті системи такі як IBM, 
Novell або Microsoft, сьогодні активно беруть участь в розробці відкритих 
стандартів і застосовують їх в своїх продуктах.</p>
<p>Сьогодні в секторі мережевого обладнання і програм з сумісністю продуктів 
різних виробників склалася наступна ситуація. Практично всі продукти, як 
програмні, так і апаратні, сумісні по функціях і властивостях, які були 
впроваджені в практику вже досить давно і стандарти на які вже розроблені і 
прийняті принаймні 3-4 року тому. У той же час дуже часто принципово нові 
пристрої, протоколи і властивості виявляються несумісними навіть у ведучих 
виробників. Така ситуація спостерігається не тільки для тих пристроїв або 
функцій, стандарти на які ще не встигли прийняти (це природне), але і для 
пристроїв, стандарти на які існують вже декілька років. Сумісність досягається 
тільки після того, як всі виробники реалізовують цей стандарт в своїх виробах, 
причому однаковим чином.</p>
<h3><a name="p136"></a>1.3.6. Джерела стандартів</h3>
<p>Роботи по стандартизації обчислювальних мереж ведуться великою кількістю 
організацій. В залежності від статусу організацій розрізнюють наступні види 
стандартів:</p>
<ul>
  <li><i><b>стандарти окремих фірм</b></i> (наприклад, стек протоколів DECnet 
  фірми Digital Equipment або графічний інтерфейс OPEN LOOK для Unix-систем 
  фірми Sun); </li>
  <li><i><b>стандарти спеціальних комітетів і об'єднань</b></i>, що створюються 
  декількома фірмами, наприклад стандарти технології ATM, що розробляються 
  спеціально створеним об'єднанням ATM Forum, що нараховує біля 100 колективних 
  учасників, або стандарти союзу Fast Ethernet Alliance з розробки стандартів 
  100 Мбіт Ethernet; </li>
  <li><i><b>національні стандарти</b></i>, наприклад, стандарт FDDI, що 
  представляє один з численних стандартів, розроблених Американським 
  національним інститутом стандартів (ANSI), або стандарти безпеки для 
  операційних систем, розроблені Національним центром комп'ютерної безпеки (NCSC) 
  Міністерства оборони США; </li>
  <li><i><b>міжнародні стандарти</b></i>, наприклад, модель і стек 
  комунікаційних протоколів Міжнародної організації по стандартах (ISO), 
  численні стандарти Міжнародного союзу електрозв'язку (ITU), в тому числі 
  стандарти на мережі з комутацією пакетів Х.25, мережі Frame Relay, ISDN, 
  модеми і багато хто інші. </li>
</ul>
<p>Деякі стандарти, безперервно розвиваючись, можуть перейти з однієї категорії 
в іншу. Зокрема, фірмові стандарти на продукцію, що набула широкого поширення, 
звичайно стають міжнародними стандартами де-факто, оскільки змушують виробників 
з різних країн слідувати фірмовим стандартам, щоб забезпечити сумісність своїх 
виробів з цими популярними продуктами. Наприклад, через феноменальний успіх 
персонального комп'ютера компанії IBM фірмовий стандарт на архітектуру IBM PC 
став міжнародним стандартом де-факто.</p>
<p>Більш того в зв'язку з широким поширенням деякі фірмові стандарти стають 
основою для національних і міжнародних стандартів де-юре. Наприклад, стандарт 
Ethernet, спочатку розроблений компаніями Digital Equipment, Intel і Xerox, 
через деякий час і в декілька зміненому вигляді був прийнятий як національний 
стандарт IEEE 802.3, а потім організація ISO затвердила його як міжнародний 
стандарт ISO 8802.3.</p>
<p>Далі приводяться короткі відомості про організації стандартів, які найбільш 
активно і успішно, що займаються розробкою в області обчислювальних мереж.</p>
<ul>
  <li><i><b>Міжнародна організація по стандартизації</b> (International 
  Organization for Standardization, ISO</i>, часто звана також <i>International 
  Standards Organization</i>) являє собою асоціацію ведучих національних 
  організацій по стандартизації різних країн. Головним досягненням ISO поява 
  моделі взаємодії відкритих систем OSI, яка зараз є концептуальною основою 
  стандартизації в області обчислювальних мереж. Відповідно до моделі OSI цією 
  організацією був розроблений стандартний стек комунікаційних протоколів OSI.</li>
  <li>Міжнародний союз електрозв'язку (<i>InternatiorudTelecommunications Union, 
  FTU</i>) організація, що зараз є спеціалізованим органом Організації 
  Об'єднаних Націй. Найбільш значну роль в стандартизації обчислювальних мереж 
  грає постійно діючий в рамках цієї організації Міжнародний консультативний 
  комітет по телефонії і телеграфії (МККТТ) (Consultative Committee on 
  International Telegraphy and Telephony, CCITT). Внаслідок проведеної в 1993 
  році реорганізації ITU CCITT дещо змінив напрям своєї діяльності і змінив 
  назву тепер він називається сектором телекомунікаційний стандартизації ITU 
  (ITU Telecommunication Standardization Sector, ITU-T). Основу діяльності ITU-T 
  складає розробка міжнародних стандартів в області телефонії, телематичих служб 
  (електронної пошти, факсимільний зв'язку, телетексту, телекса і , передачі 
  даних, аудио- і відеосигналів. За роки своєї діяльності ITU-T випустив 
  величезне число рекомендацій-стандартів. Свою роботу ITU-T будує на вивченні 
  досвіду сторонніх організацій, а також на результатах власних досліджень. Раз 
  в чотири роки видаються труди ITU-T у вигляді так званої “Книги”, яка 
  насправді являє собою цілий набір звичайних книг, згрупованих у випуски, які, 
  в свою чергу, об'єднуються в томи. Кожний тому і випуск містять логічно 
  взаємопов'язані рекомендації. Наприклад, тому III Синьої Книги містить 
  рекомендації для цифрових мереж з інтеграцією послуг (ISDN), а весь том VIII 
  (за винятком випуску VIII.1, який містить рекомендації серії V для передачі 
  даних по телефонній мережі) присвячений рекомендаціям серії X: Х.25 для мереж 
  з комутацією пакетів, Х.400 для систем електронної пошти, Х.500 для глобальної 
  довідкової служби і багато чим іншим.</li>
  <li><b><i>Інститут інженерів з електротехніки і радіоелектроніці </i></b>(<i>Institute 
  of&nbsp; Electrical and Electronics Engineers, IEEE</i>) національна 
  організація США, що визначає мережеві стандарти. У 1981 році робоча група 802 
  цього інституту сформулювала основні вимоги, яким повинні задовольняти 
  локальні обчислювальні мережі. Група 802 визначила безліч стандартів, з них 
  самими відомими є стандарти 802.1, 802.2,802.3 і 802.5, які описують загальні 
  поняття, що використовуються в області локальних мереж, а також стандарти на 
  два нижніх рівні мереж Ethernet і Token Ring.</li>
  <li><b><i>Європейська асоціація виробників комп'ютерів </i></b>(<i>European 
  Computer Маnufacturers Association, ЕСМА</i>) некомерційна організація, що 
  активно співробітничає з ITU-T і ISO, займається розробкою стандартів і 
  технічних оглядів, що відносяться до комп'ютерної і комунікаційної технологій. 
  Відома своїм стандартом ЕСМА-101, що використовується при передачі 
  відформатованого тексту і графічних зображень із збереженням оригінального 
  формату.</li>
  <li><b><i>Асоціація виробників комп'ютерів і оргтехніки</i></b> (<i>Computer 
  and Business Equipment Manufacturers Association, CBEMA</i>) організація 
  американських фірм виробників апаратного забезпечення; аналогічна європейській 
  асоціації ЕКМА; бере участь в розробці стандартів на обробку інформації і 
  відповідне обладнання.</li>
  <li><b><i>Асоціація електронної промисловості</i></b> (<i>Е1еctronic 
  Industries Association, EIA</i>) промислово-торгова група виробників 
  електронного і мережевого обладнання; є національною комерційною асоціацією 
  США; виявляє значну активність в розробці стандартів для проводів, конекторів 
  і інших мережевих компонентів. Її найбільш відомий стандарт RS-232C. </li>
  <li><b><i>Міністерство оборони США </i></b>(<i>Department of Defense, DoD</i>) 
  має численні підрозділи, що займаються створенням стандартів для комп'ютерних 
  систем. Однією з самих відомих розробок DoD є стек транспортних протоколів 
  TCP/IP. </li>
  <li><i>Американський національний інститут стандартів</i> (<i>American 
  National Standards Institute, ANSI</i>) - ця організація представляє США в 
  Міжнародній організації по стандартизації ISO. Комітети ANSI ведуть роботу з 
  розробки стандартів в різних областях обчислювальної техніки. Так, комітет 
  ANSI ХЗТ9.5 спільно з фірмою IBM займається стандартизацією локальних мереж 
  великих ЕОМ (архітектура мереж SNA). Відомий стандарт FDDI також є результатом 
  діяльності цього комітету ANSI. У області мікрокомп'ютерів ANSI розробляє 
  стандарти на мови програмування, інтерфейс SCSI. ANSI розробив рекомендації по 
  переміщуванню для мов С, FORTRAN, COBOL. </li>
</ul>
<p>Особливу роль у виробленні міжнародних відкритих стандартів грають стандарти 
Internet. У зв'язку з великою і постійною зростаючою популярністю Internet, ці 
стандарти стають міжнародними стандартами “де-факто”, багато які з яких потім 
придбавають статус офіційних міжнародних стандартів за рахунок їх затвердження 
однієї з вище перелічених організацій, в тому числі ISO і ITU-Т. Існує декілька 
організаційних підрозділів, що відповідають за розвиток Internet і, зокрема, за 
стандартизацію засобів Internet.</p>
<p>Основним з них є Internet Society (ISOC) професійне співтовариство, яке 
займається загальними питаннями еволюції і зростання Internet як глобальної 
комунікаційної інфраструктури. Під управлінням ISOC працює Internet Architecture 
Board (IAB) організація, у веденні якої знаходиться технічний контроль і 
координація робіт для Internet. IAB координує напрям досліджень і нових розробок 
для стека TCP/IP і є кінцевою інстанцією при визначенні нових стандартів 
Internet.</p>
<p>У IAB входять дві основні групи: Internet Engineering Task Force (IETF) і 
Internet Research Task Force (IRTF). IETF це інженерна група, яка займається 
розв'язанням найближчих технічних проблем Internet. Саме IETF визначає 
специфікації, які потім стають стандартами Internet. У свою чергу, IRTF 
координує довгострокові дослідницькі проекти по протоколах TCP/IP.</p>
<p>У будь-якій організації, що займається стандартизацією, процес вироблення і 
прийняття стандарту складається з ряду обов'язкових етапів, які, власне, і 
складають процедуру стандартизації. Розглянемо цю процедуру на прикладі розробки 
стандартів Internet.</p>
<ul>
  <li>Спочатку в IETF представляється так званий <i>робочий проект</i> (<i>draft</i>) 
  у вигляді, доступному для коментарів. Він публікується в Internet, після чого 
  широке коло зацікавлених осіб включається в обговорення цього документа, в 
  нього вносяться виправлення, і нарешті наступає момент, коли можна зафіксувати 
  зміст документа. На цьому етапі проекту привласнюється номер RFC (можливий і 
  інший варіант розвитку подій після обговорення робочий проект відкидається і 
  віддаляється з Internet). </li>
  <li>Після привласнення номера проект придбаває статус <i>стандарту, що 
  пропонується</i>. Протягом 6 місяців цей стандарт, що пропонується проходить 
  перевірку практикою, в результаті в нього вносяться зміни.</li>
  <li>Якщо результати практичних досліджень показують ефективність 
  запропонованого стандарту, то йому, з всіма внесеними змінами, привласнюється 
  і статус <i>проекту стандарту</i>. Потім протягом не менш 4-х місяців 
  проходять його подальші випробування “на міцність”, в число яких входить 
  створення принаймні двох програмних реалізацій.</li>
  <li>Якщо під час перебування в ранзі проекту стандарту в документ не було 
  внесено ніяких виправлень, то йому може бути привласнений статус <i>офіційного 
  стандарту </i>Internet. Список затверджених офіційних стандартів Internet 
  публікується у вигляді документа RFC і доступний в Internet. </li>
</ul>
<p>Потрібно зазначити, що всі стандарти Internet носять назву RFC з відповідним 
порядковим номером, але далеко не все RFC є стандартами Internet часто ці 
документи являють собою коментарі до якого-небудь стандарту або просто описи 
деякої проблеми Internet.</p>
<h3><a name="p137"></a>1.3.7. Стандартні стеки комунікаційних протоколів</h3>
<p>Найважливішим напрямом стандартизації в області обчислювальних мереж є 
стандартизація комунікаційних протоколів. У наш час в мережах&nbsp; 
використовується велика кількість стеків комунікаційних протоколів. Найбільш 
популярними є стеки: TCP/IP, IPX/SPX, NetBIOS/SMB, DECnet, SNA і OSI. Всі ці 
стеки, крім SNA на нижніх рівнях фізичному і канальному, використовують одні і 
ті ж добре стандартизовані протоколи Ethernet, Token Ring, FDDI і деякі інші, 
які дозволяють використати у всіх мережах&nbsp; одну і ту ж апаратуру. Поте на 
верхніх рівнях всі стеки працюють по своїх власних протоколах. Ці протоколи 
часто не відповідають розбиттю, що рекомендується моделлю OSI на рівні. Зокрема, 
функції сеансового і представницького рівня, як правило, об'єднані з прикладним 
рівнем. Така невідповідність пов'язана з тим, що модель OSI з'явилася як 
результат узагальнення вже існуючих і стеків, що реально використовуються, а не 
навпаки.</p>
<h4><a name="p1370"></a>Стек OSI</h4>
<p>Потрібно чітко розрізнювати модель OSI і стек OSI. У той час як модель OSI є 
концептуальною схемою взаємодії відкритих систем, стек OSI являє собою набір 
цілком конкретних специфікацій протоколів. На відміну від інших стеків 
протоколів стек OSI повністю відповідає моделі OSI, він включає специфікації 
протоколів для всіх семи рівнів взаємодії, визначених в цій моделі. На нижніх 
рівнях стек OSI підтримує Ethernet, Token Ring, FDDI, протоколи глобальних 
мереж, Х.25 і ISDN, тобто використовує розроблені поза стеком протоколи нижніх 
рівнів, як і всі інші стеки. Протоколи мережевого, транспортного і сеансового 
рівнів стека OSI специфіковані і реалізовані різними виробниками, але поширені 
поки мало. Найбільш популярними протоколами стека OSI є прикладні протоколи. До 
них відносяться: протокол передачі файлів FTAM, протокол емуляції термінала VTP, 
протоколи довідкової служби Х.500, електронної пошти Х.400 і ряд інших.</p>
<p>Протоколи стека OSI відрізняє велика складність і неоднозначність 
специфікацій. Ці властивості були результатом загальної політики розробників 
стека, що прагнули врахувати в своїх протоколах всі випадки життя і всі існуючі 
і технології, що з'являються. До цього треба ще додати і спадок великої 
кількості політичних компромісів, неминучих при прийнятті міжнародних стандартів 
з такого злободенного питання, як побудова відкритих обчислювальних мереж.</p>
<p>Через свою складність протоколи OSI вимагають великих витрат обчислювальної 
потужності центрального процесора, що робить їх найбільш відповідними для 
могутніх машин, а не для мереж персональних комп'ютерів.</p>
<p>Стік OSI міжнародний, незалежний від виробників стандарт. Його підтримує уряд 
США в своїй програмі GOSIP, відповідно до якої всі комп'ютерні мережі, що 
встановлюються в урядових установах США після 1990 року, повинні або 
безпосередньо підтримувати стек OSI, або забезпечувати засоби для переходу на 
цей стек в майбутньому. Проте стек OSI більш популярний в Європі, ніж в США, 
оскільки в Європі залишилося менш старих мереж, працюючих по своїх власних 
протоколах. Більшість організацій поки тільки планують перехід до стека OSI, і 
дуже небагато хто приступив до створення пілотних проектів. З тих, хто працює в 
цьому напрямі, можна назвати Військово-морське відомство США і мережу NFSNET. 
Одним з найбільших виробників, підтримуючих OSI, є компанія AT&amp;Т, її мережа 
Stargroup повністю базується на цьому стеку.</p>
<h4><a name="p137_1"></a>Стек TCP/IP</h4>
<p>Стек TCP/IP був розроблений з ініціативи Міністерства оборони США більше за 
20 років&nbsp; для зв'язку експериментальної мережі ARPAnet з іншими мережами як 
набір загальних протоколів для різнорідної обчислювальної середи. Великий внесок 
в розвиток стека TCP/IP, який отримав свою назву по популярних протоколах IP і 
TCP, вніс університет Берклі, реалізовувавши протоколи стека в своєї версії ОС 
UNIX. Популярність цієї операційної системи привела до широкого поширення 
протоколів TCP, IP і інших протоколів стека. Сьогодні цей стек використовується 
для зв'язку комп'ютерів всесвітньої інформаційної мережі Internet, а також у 
величезному числі корпоративних мереж.</p>
<p>Стек TCP/IP на нижньому рівні підтримує всі популярні стандарти фізичного і 
канального рівнів: для локальних мереж це Ethernet, Token Ring, FDDI, для 
глобальних протоколи роботи на аналогових комутованих і виділених лініях SLIP, 
РРР, протоколи територіальних мереж Х.25 і ISDN.</p>
<p>Основними протоколами стека, що дали йому назву, є протоколи IP і TCP. Ці 
протоколи в термінології моделі OSI відносяться до мережевого і транспортного 
рівнів відповідно. IP забезпечує просування пакету по складовій мережі, а TCP 
гарантує надійність його доставки.</p>
<p>За довгі роки використання в мережах різних країн і організацій стек TCP/IP 
увібрав в себе велику кількість протоколів прикладного рівня. До них відносяться 
такі популярні протоколи, як протокол пересилки файлів FTP, протокол емуляції 
термінала telnet, поштовий протокол SMTP, що використовується в електронній 
пошті мережі Internet, гіпертекстові сервіси служби WWW і багато інших.</p>
<p>Сьогодні стек TCP/IP являє собою один з самих поширених стеків транспортних 
протоколів обчислювальних мереж. Дійсно, тільки в мережі Internet об'єднано 
більше 10 мільйонів комп'ютерів по всьому світу, які взаємодіють один з одним за 
допомогою стека протоколів TCP/IP.</p>
<p>Стрімке зростання популярності Internet привело і до змін в розставлянні сил 
в світі комунікаційних протоколів протоколи TCP/IP, на яких побудований 
Internet, стали швидко тіснити безперечного лідера минулих років стік IPX/SPX 
компанії Novell. Сьогодні в світі загальна кількість комп'ютерів, на яких 
встановлений стек TCP/IP, порівнялося із загальною кількістю комп'ютерів, на 
яких працює стек IPX/SPX, і це говорить про різкий перелом відносно 
адміністраторів локальних мереж до протоколів, що використовуються на настільних 
комп'ютерах, оскільки саме вони складають переважне число світового 
комп'ютерного парку і саме на них раніше майже скрізь працювали протоколи 
компанії Novell, необхідні для доступу до файлових серверів NetWare. Процес 
становлення стека TCP/IP як стек номер один в будь-яких типах мереж 
продовжується, і зараз люба промислова операційна система обов'язково включає 
програмну реалізацію цього стека в своєму комплекті постачання.</p>
<p>Хоч протоколи TCP/IP нерозривно пов'язані з Internet і кожний з 
багатомільйонної армади комп'ютерів Internet працює на основі цього стека, існує 
велика кількість локальних, корпоративних і територіальних мереж, що 
безпосередньо не є частинами Internet, в яких також використовують протоколи 
TCP/IP. Щоб відрізняти їх від Internet, ці мережі називають мережами TCP/IP або 
просто IP-мережами.</p>
<p>Оскільки стек TCP/IP спочатку створювався для глобальної мережі Internet, він 
має багато особливостей, що дають йому перевагу перед іншими протоколами, коли 
мова заходить про побудову мереж, що включають глобальні зв'язки. Зокрема, дуже 
корисною властивістю, що робить можливим застосування цього протоколу у великих 
мережах, є його здатність фрагментувати пакети. Дійсно, велика&nbsp; мережа 
часто складається з мереж, побудованих на абсолютно різних принципах. У кожній з 
цих мереж може бути встановлена власна величина максимальної довжини одиниці 
даних, що передаються (кадру). У такому випадку при переході з однієї мережі, що 
має велику максимальну довжину, в мережу з меншою максимальною довжиною може 
виникнути необхідність розподілу кадру, що передається на декілька частин. 
Протокол IP стека TCP/IP ефективно вирішує цю задачу.</p>
<p>Іншою особливістю технології TCP/IP є гнучка система адресації, що дозволяє 
більш просто в порівнянні з іншими протоколами аналогічного призначення включати 
в интромережу мережі інших технологій. Ця властивість також сприяє застосуванню 
стека TCP/IP для побудови великих гетерогенных мереж.</p>
<p>У стеку TCP/IP дуже економно використовуються можливості широкомовних 
розсилок. Ця властивість абсолютно необхідна при роботі на повільних каналах 
зв'язку, характерних для територіальних мереж.</p>
<p>Однак, як і завжди, за переваги, що отримуються треба платити, і платою тут 
виявляються високі вимоги до ресурсів і складність адміністрування IP-мереж. 
Могутні функціональні можливості протоколів стека TCP/IP вимагають для своєї 
реалізації високих обчислювальних витрат. Гнучка система адресації і відмова від 
широкомовних розсилок приводять до наявності в IP-мережі різних централізованих 
служб типу DNS, DHCP і т. п. Кожна з цих служб направлена на полегшення 
адміністрування мережі, в тому числі і на полегшення конфігурування обладнання, 
але в той же час сама вимагає пильної уваги з боку адміністраторів.</p>
<p>Можна приводити і інші доводи за і проти стека протоколів Internet, однак 
факт залишається фактом сьогодні це самий популярний стек протоколів, що широко 
використовується як в глобальних, так і локальних мережах.</p>
<h4><a name="p137_2"></a>Стек IPX/SPX</h4>
<p>Цей стек є оригінальним стеком протоколів фірми Novell, розробленим для 
мережевої операційної системи NetWare ще на початку 80-х років. Протоколи 
мережевого і сеансового рівнів Internetwork Packet Exchange (IPX) і Sequenced 
Packet Exchange (SPX), які дали назву стеку, є прямою адаптацією протоколів XNS 
фірми Xerox, поширених в набагато меншій мірі, ніж стік IPX/SPX. Популярність 
стека IPX/SPX безпосередньо пов'язана з операційною системою Novell NetWare, яка 
ще зберігає світове лідерство по числу встановлених систем, хоч останнім часом 
її популярність дещо знизилася і по темпах зростання вона відстає від Microsoft 
Windows NT.</p>
<p>Багато які особливості стека IPX/SPX зумовлені орієнтацією ранніх версій ОС 
NetWare (до версії 4.0) на роботу в локальних мережах невеликих розмірів, що 
складаються з персональних комп'ютерів зі скромними ресурсами. Зрозуміло, що для 
таких комп'ютерів компанії Novell потрібні були протоколи, на реалізацію яких 
була б потрібна мінімальна кількість оперативної пам'яті (обмеженої в 
IBM-сумісних комп'ютерах під управлінням MS-DOS об'ємом 640 Кбайт) і які б 
швидко працювали на процесорах невеликої обчислювальної потужності. У результаті 
протоколи стека IPX/SPX донедавна добре працювали в локальних мережах і не дуже 
у великих корпоративних мережах, оскільки вони дуже перевантажували повільні 
глобальні зв'язки широкомовними пакетами, які інтенсивно використовуються 
декількома протоколами цього стека (наприклад, для встановлення зв'язку між 
клієнтами і серверами). Ця обставина, а також той факт, що стек IPX/SPX є 
власністю фірми Novell і на його реалізацію треба отримувати ліцензію (тобто 
відкриті специфікації не підтримувалися), довгий час обмежували поширеність його 
тільки мережами NetWare. Однак з моменту випуску версії NetWare 4.0 Novell 
внесла і продовжує вносити в свої протоколи серйозні зміни, направлені на їх 
адаптацію для роботи в корпоративних мережах. Зараз стек IPX/ SPX реалізований 
не тільки в NetWare, але і в декількох інших популярних мережевих ОС, наприклад 
SCO UNIX, Sun Solaris, Microsoft Windows NT.</p>
<h4><a name="p137_3"></a>Стек NetBIOS/SMB</h4>
<p>Цей стек широко використовується в продуктах компаній IBM і Microsoft. На 
фізичному і канальному рівнях цього стека використовуються всі найбільш поширені 
протоколи Ethernet, Token Ring, FDDI і інші. На верхніх рівнях працюють 
протоколи NetBEUI і SMB.</p>
<p>Протокол NetBIOS (Network Basic Input/Output System) з'явився в 1984 році як 
мережеве розширення стандартних функцій базової системи введення/виведення 
(BIOS) IBM PC для мережевої програми PC Network фірми IBM. Надалі цей протокол 
був замінений так званим протоколом розширеного призначеного для користувача 
інтерфейсу NetBEUI NetBIOS Extended User Interface. Для забезпечення сумісності 
додатків як інтерфейс до протоколу NetBEUI був збережений інтерфейс NetBIOS. 
Протокол NetBEUI розроблявся як ефективний протокол, що споживає небагато 
ресурсів і призначений для мереж, що нараховують не більше за 200 робочих 
станцій. Цей протокол містить багато корисних мережевих функцій, які можна 
віднести до мережевого, транспортного і сеансовому рівнів моделі OSI, однак з 
його допомогою неможлива маршрутизація пакетів. Це обмежує застосування 
протоколу NetBEUI локальними мережами, не розділеними на підмережі, і 
унеможливлює його використання в складових мережах. Деякі обмеження NetBEUI 
знімаються реалізацією цього протоколу NBF (NetBEUI Frame), яка включена в 
операційну систему Microsoft Windows NT.</p>
<p>Протокол SMB (Server Message Block) виконує функції сеансового, 
представницького і прикладного рівнів. На основі SMB реалізовується файлова 
служба, а також служби друку і передачі сполучень між додатками.</p>
<p>Стеки протоколів SNA фірми IBM, DECnet корпорації Digital Equipment і 
AppleTalk/AFP фірми Apple застосовуються в основному в операційних системах і 
мережевому обладнанні цих фірм.</p>
<table border="0" cellspacing="1" width="100%" id="AutoNumber2">
  <tr>
    <td width="100%" align="center">
    <table border="2" cellspacing="1" bordercolor="#C0C0C0" width="82%" id="AutoNumber3" bordercolorlight="#C0C0C0" bordercolordark="#808080">
      <tr>
        <th width="11%" nowrap bgcolor="#99CCFF">Модель OSI</th>
        <th width="2%" nowrap bgcolor="#99CCFF">&nbsp;</th>
        <th width="14%" nowrap bgcolor="#99CCFF">IBM /Microsoft</th>
        <th width="3%" nowrap bgcolor="#99CCFF">&nbsp;</th>
        <th width="14%" nowrap bgcolor="#99CCFF">TCP/IP</th>
        <th width="2%" nowrap bgcolor="#99CCFF">&nbsp;</th>
        <th width="15%" nowrap bgcolor="#99CCFF">Novell</th>
        <th width="3%" nowrap bgcolor="#99CCFF">&nbsp;</th>
        <th width="36%" nowrap bgcolor="#99CCFF">Стек OSI</th>
      </tr>
      <tr>
        <th width="11%" bgcolor="#0099CC">Прикладний</th>
        <td width="2%">&nbsp;</td>
        <td width="14%" rowspan="2" align="center"><b>SMB</b></td>
        <td width="3%">&nbsp;</td>
        <td width="14%" align="center" rowspan="2"><b>Telnet,<br>
        FTP,<br>
        SNMP,<br>
        WWW</b></td>
        <td width="2%">&nbsp;</td>
        <td width="15%" rowspan="3" align="center"><b>NCP,<br>
        SAP</b></td>
        <td width="3%">&nbsp;</td>
        <td width="36%" align="center"><b>X.400,<br>
        X.500,<br>
        FTMA</b></td>
      </tr>
      <tr>
        <th width="11%" bgcolor="#0099CC">Представницький</th>
        <td width="2%">&nbsp;</td>
        <td width="3%">&nbsp;</td>
        <td width="2%">&nbsp;</td>
        <td width="3%">&nbsp;</td>
        <td width="36%">Представницький протокол OSI</td>
      </tr>
      <tr>
        <th width="11%" bgcolor="#0099CC">Сеансовий</th>
        <td width="2%">&nbsp;</td>
        <td width="14%" rowspan="2" align="center"><b>NetBios</b></td>
        <td width="3%">&nbsp;</td>
        <td width="14%" rowspan="2" align="center"><b>TCP</b></td>
        <td width="2%">&nbsp;</td>
        <td width="3%">&nbsp;</td>
        <td width="36%">Сеансовий протокол OSI</td>
      </tr>
      <tr>
        <th width="11%" bgcolor="#0099CC">Транспортний</th>
        <td width="2%">&nbsp;</td>
        <td width="3%">&nbsp;</td>
        <td width="2%">&nbsp;</td>
        <td width="15%" align="center"><b>SPX</b></td>
        <td width="3%">&nbsp;</td>
        <td width="36%">Транспортний протокол OSI</td>
      </tr>
      <tr>
        <th width="11%" bgcolor="#0099CC">Мережевий</th>
        <td width="19%" colspan="3">&nbsp;</td>
        <td width="14%" align="center"><b>IP,<br>
        RIP,<br>
        OSPF</b></td>
        <td width="2%">&nbsp;</td>
        <td width="15%" align="center"><b>IP,<br>
        RIP,<br>
        NLSP</b></td>
        <td width="3%">&nbsp;</td>
        <td width="36%" align="center"><b>ES-TS,<br>
        IS-IS</b></td>
      </tr>
      <tr>
        <th width="11%" bgcolor="#0099CC">Канальний</th>
        <td width="2%">&nbsp;</td>
        <td width="87%" colspan="7">802.3 (Ethernet), 802.5 (Token Ring), FDDI, 
        Fast Ethernet, SLIP, 100VG-AnyLAN, X.25, ATM, LAP-B, LAP-D, PPP</td>
      </tr>
      <tr>
        <th width="11%" bgcolor="#0099CC">Фізичний</th>
        <td width="2%">&nbsp;</td>
        <td width="87%" colspan="7">Коаксіальний, екранована і неекранована вита 
        пара, оптичневолокно, радіохвилі</td>
      </tr>
    </table>
    </td>
  </tr>
  <tr>
    <td width="100%" align="center">Рис. 1.30. Відповідність популярних стеків 
    протоколів моделі OSI</td>
  </tr>
</table>
<p ALIGN="CENTER">&nbsp;</p>
<p>На мал. 1.30 показана відповідність деяких, найбільш популярних протоколів 
рівням моделі OSI. Часто ця відповідність вельми умовна, оскільки модель OSI це 
тільки керівництво до дії, причому досить загальне, а конкретні протоколи 
розроблялися для рішення специфічних задач, причому багато хто з них з'явився до 
розробки моделі OSI. У більшості випадків розробники стеків віддавали перевагу 
швидкості роботи мережі в збиток модульності жоден стек, крім стека OSI, не 
розбитий на сім рівнів. Частіше за все в стеку явно виділяються 3-4 рівні: 
рівень мережевих адаптерів, в якому реалізовуються протоколи фізичного і 
канального рівнів, мережевий рівень, транспортний рівень і рівень служб, що 
вбирає в себе функції сеансового, представницького і прикладного рівнів.</p>
<h2><a name="viv"></a>Висновки</h2>
<ul>
  <li>У комп'ютерних мережах ідеологічною основою стандартизації є 
  багаторівневий підхід до розробки засобів мережевої взаємодії. </li>
  <li>Формалізовані правила, що визначають послідовність і формат повідомлень, 
  якими обмінюються мережеві компоненти, лежачі на одному рівні, але в різних 
  вузлах, називаються протоколом. </li>
  <li>Формалізовані правила, що визначають взаємодію мережевих компонентів 
  сусідніх рівнів одного вузла, називаються інтерфейсом. Інтерфейс визначає 
  набір сервісів, що надається даним рівнем сусідньому рівню. </li>
  <li>Ієрархічно організований набір протоколів, достатній для організації 
  взаємодії вузлів в мережі, називається стеком комунікаційних протоколів. </li>
  <li>Відкритою системою може бути названа будь-яка система, яка побудована 
  відповідно до загальнодоступних специфікацій, відповідних стандартам і 
  прийнятих внаслідок публічного обговорення всіма зацікавленими сторонами. </li>
  <li>Модель OSI стандартизує взаємодію відкритих систем. Вона визначає 7 рівнів 
  взаємодії: прикладний, представницький, сеансовый, транспортний, мережевий, 
  канальный і фізичний. </li>
</ul>

<table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="table1">
  <tr>
    <td width="100%" align="left" colspan="3"><hr color="#2D4C54" size="4"></td>
  </tr>
  <tr>
    <td width="33%" align="left"><a href="002.htm">Попередня</a></td>
    <td width="33%" align="center"><a href="001.htm">Перша</a></td>
    <td width="34%" align="right"><a href="004.htm">Наступна</a></td>
  </tr>
</table>

</body>

</html>
