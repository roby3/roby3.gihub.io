<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="uk">
<link rel=Edit-Time-Data href=13.files/editdata.mso>
<title>4.3.3. Комутатори локальних мереж</title>
</head>
<body lang=Ua>
<h3>4.3.3. Комутатори локальних мереж</h3>
<p>Технологія комутації сегментів
Ethernet була запропонована фірмою Kalpana в 1990 році у відповідь на зростаючі
потреби в підвищенні пропускної здатності зв'язків високопродуктивних серверів із сегментами
робочих станцій.</p>
<p>Структурна схема комутатора
EtherSwitch, запропонованого фірмою Kalpana,
представлена на мал. 4.23.</p>
<p>Кожний з 8 портів 10Base-T обслуговується одним
процесором пакетів Ethernet - ЕРР (Ethernet
Packet Processor). Крім того, комутатор має системний модуль, що координує
роботу всіх процесорів ЕРР. Системний модуль веде загальну
адресну таблицю комутатора й забезпечує керування
комутатором по протоколі SNMP. Для передачі
кадрів між портами використається комутаційна
матриця, подібна тим, які працюють у телефонних комутаторах або
мультипроцесорних комп'ютерах, з'єднуючи кілька процесорів з декількома
модулями пам'яті.</p>
<p>Комутаційна матриця працює за
принципом комутації каналів. Для 8 портів матриця може забезпечити 8 одночасних
внутрішніх каналів при напівдуплексному режимі роботи портів й 16 - при повнодуплексному, коли передавач і приймач кожного
порту працюють незалежно друг від друга.</p>
<p>При надходженні кадру в який-небудь
порт процесор ЕРР буферизує
декілька перших байт кадру, щоб прочитати адресу призначення. Після одержання адреси
призначення процесор відразу ж ухвалює рішення щодо передачі пакета, не чекаючи
приходу інших байт кадру. Для цього він
переглядає свій власний кеш адресної таблиці, а якщо не знаходить там потрібної адреси, звертається до
системного модуля, що працює в багатозадачному режимі, паралельно обслуговуючи запити всіх
процесорів ЕРР. Системний модуль робить перегляд загальної
адресної таблиці й повертає процесору
знайдений рядок, що той буферизує у своєму кеші
для наступного використання.</p>
<table border="0" width="100%" id="table1">
	<tr>
		<td align="center">
<img width=380 height=374
src=images/m23.jpg v:shapes=_x0000_i1025 alt="Мал. 4.23. Структурі комутатора EtherSwitch компанії Kalpano"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.23. Структурі комутатора EtherSwitch компанії
Kalpano</td>
	</tr>
</table>
<p>Після знаходження
адреси призначення процесор ЕРР знає, що
потрібно далі робити із приходящим кадром (під час перегляду адресної таблиці
процесор продовжує буферизацію приходящих у порт байтів кадру). Якщо кадр потрібно відфільтрувати, процесор просто припиняє записувати в
буфер байти кадру, очищає буфер і чекає надходження нового кадру.</p>
<p>Якщо ж кадр потрібно передати на
інший порт, то процесор звертається до комутаційної матриці й намагається встановити в ній шлях,
що зв'язує його порт із портом, через який іде маршрут до адреси призначення. Комутаційна
матриця може це зробити тільки в тому випадку, коли порт адреси призначення в
цей момент вільний, тобто не з'єднаний з іншим
портом.</p>
<p>Якщо ж порт зайнятий, те, як й у будь-якому пристрої з
комутацією каналів, матриця в з'єднанні
відмовляє. У цьому випадку кадр повністю буферизується процесором вхідного порту, після чого
процесор очікує звільнення вихідного порту й утворення комутаційною матрицею потрібного шляху.</p>
<p>Після того як потрібний шлях
установлений, в нього направляються буферизовані байти кадру, які приймаються процесором
вихідного порту. Як тільки процесор вихідного порту одержує
доступ до підключеного до нього сегменту Ethernet по алгоритму
CSMA/CD, байти кадру відразу ж починають передаватися в мережу. Процесор вхідного порту постійно зберігає трохи байт
прийнятого кадру у своєму буфері, що дозволяє йому незалежно й асинхронно
приймати й передавати байти кадру (мал. 4.24).</p>
<p>При вільному
в момент прийому кадру стані вихідного порту затримка між прийомом
першого байта кадру комутатором і появою цього ж байта на виході порту адреси
призначення становила в
комутаторі компанії Kalpana всього 40&nbsp;мкс, яка
була набагато менше затримки кадру при його передачі мостом.</p>
<table border="0" width="100%" id="table2">
	<tr>
		<td align="center">
<img width=468 height=486 src=images/m24.jpg alt="Мал. 4.24. Передача кадру через комутаційну матрицю"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.24. Передача кадру через комутаційну матрицю</td>
	</tr>
</table>
<p>Описаний спосіб передачі кадру
без його повної буферизації
одержав назву комутації &quot;на льоту&quot; (&quot;on-the-fly&quot;) або &quot;безперервно&quot;
(&quot;cut-through&quot;). Цей спосіб представляє,
по суті, конвеєрну обробку кадру, коли частково сполучаються в часі кілька
етапів його передачі (мал. 4.25).</p>
<ol start=1 type=1>
	<li>Прийом перших байт кадру процесором вхідного порту, включаючи прийом байт адреси призначення.</li>
	<li>Пошук адреси призначення в адресній таблиці комутатора (у кеші процесора або в загальній таблиці системного модуля).</li>
	<li>Комутація матриці.</li>
	<li>Прийом інших байт кадру процесором вхідного порту.</li>
	<li>Прийом байт кадру (включаючи перші) процесором вихідного порту через комутаційну матрицю.</li>
	<li>Одержання доступу до середовища процесором вихідного порту.</li>
	<li>Передача байт кадру процесором вихідного порту в мережу.</li>
</ol>
<p>Етапи 2 й 3 сполучити в часі не
можна, тому що без знання номера вихідного порту операція комутації матриці не
має сенсу.</p>
<p>У порівнянні з режимом повної буферизації
кадру, також наведено на мал. 4.25, економія
від конвеєризації виходить відчутної.</p>
<table border="0" width="100%" id="table3">
	<tr>
		<td align="center">
<img width=508 height=450 src=images/m25.jpg alt="Мал. 4.25. Економія часу при конвеєрній обробці кадру"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.25. Економія часу при конвеєрній обробці кадру: 
		<br>
		<b> <i>а</i></b>
- конвеєрна обробка;<br>
		<b> <i>б</i></b> - звичайна обробка з повною буферизацією</td>
	</tr>
</table>
<p>Однак головною причиною
підвищення продуктивності мережі при використанні
комутатора є <i>паралельна
</i>обробка декількох кадрів.</p>
<p>Цей ефект ілюструє мал. 4.26. На
малюнку зображена ідеальна відносно підвищення продуктивності ситуація, коли чотири порти з восьми
передають дані з максимальною
для протоколу Ethernet швидкістю 10&nbsp;Мб/с, причому вони передають ці дані
на інші чотири порти комутатора без конфліктів
- потоки даних між вузлами мережі
розподілилися так, що для кожного приймаючого
кадри порту є свій вихідний порт. Якщо комутатор встигає
обробляти вхідний трафік
навіть при максимальній інтенсивності надходження кадрів на вхідні порти, то загальна продуктивність комутатора в наведеному прикладі складе 4x10 = 40 Мбіт/с, а при узагальненні приклада
для N портів - (N/2)xl0&nbsp;Мбіт/с. Говорять, що комутатор надає
кожній станції або сегменту, підключеним до його портів, виділену
пропускну здатність протоколу.</p>
<p>Природно, що в мережі не завжди складається така ситуація, що
зображена на мал. 4.26. Якщо двом станціям, наприклад станціям, підключеним до портів 
<b>3</b><i></i>й <b>4</b><i>, </i>одночасно потрібно записувати
дані на той самий сервер, підключений до порту
<b>8</b><i>,</i> то комутатор не зможе виділити кожній станції потік даних по 10 Мбіт/с, тому що порт 
<b>5</b> не може передавати дані зі
швидкістю 20&nbsp;Мбіт/с. Кадри станцій будуть
очікувати у внутрішніх чергах вхідних портів <b>3</b><i></i>й <b>4</b><i>,
</i>коли звільниться порт <b>8</b><i></i>для передачі чергового
кадру. Очевидно, гарним рішенням для такого
розподілу потоків даних було б підключення сервера до більш
високошвидкісного порту, наприклад Fast Ethernet.</p>
<p>Так
як головна перевага комутатора, завдяки якій
він завоював дуже гарні позиції в локальних мережах,
це його висока продуктивність, то розробники комутаторів намагаються випускати
так звані що не <b><i>блокують</i></b><i></i>(<b><i>non-blocking</i></b>)<i> </i>моделі комутаторів.</p>
<table border="0" width="100%" id="table4">
	<tr>
		<td align="center">
<img width=434 height=428 src=images/m26.jpg alt="Мал. 4.26. Паралельна передача кадрів комутатором"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.26. Паралельна передача
кадрів комутатором</td>
	</tr>
</table>
<p>Комутатор, що не блокує, - це
такий комутатор, що може передавати кадри через свої порти з тією же
швидкістю, з якої
вони на них надходять. Природно, що навіть
комутатор, що не блокує, не може дозволити
протягом довгого проміжку часу ситуації,
подібній, що описана вище, коли блокування
кадрів відбувається через обмежену швидкість вихідного порту.</p>
<p>Звичайно мають на увазі стійкий режим, що не блокує, роботи комутатора, коли
комутатор передає кадри зі швидкістю їхнього
надходження протягом довільного проміжку часу.
Для забезпечення такого режиму потрібно, природно, такий розподіл потоків
кадрів по вихідних портах, щоб вони справлялися з
навантаженням і комутатор могло завжди в середньому
передати на виходи стільки кадрів, скільки їх
надійшло на входи. Якщо ж вхідний потік кадрів (просумований
по всіх портах) у середньому буде перевищувати
вихідний потік кадрів (також просумований по
всіх портах), то кадри будуть накопичуватися в буферній пам'яті комутатора, а
при перевищенні її обсягу - просто
відкидатися. Для забезпечення режиму, що не блокує, комутатор необхідне
виконання достатнє простої умови:</p>
<p><b>C<sub>k</sub> = (CуммаC<sub>pi</sub><sub>/</sub>)/2</b></p>
<p>де C<sub>k</sub> — продуктивність
комутатора, С<sub>р</sub><sub>i</sub>; — максимальна продуктивність протоколу, підтримуваного i-м портом комутатора. Сумарна
продуктивність портів враховує кожен минаючий
кадр двічі — як вхідний кадр й як вихідний, а тому що в стійкому режимі вхідний трафік дорівнює вихідному,
тому мінімально достатня продуктивність комутатора для підтримки режиму, що не
блокує, дорівнює половині сумарної продуктивності портів. Якщо порт працює в
напівдуплексному режимі, наприклад Ethernet 10&nbsp;Мбіт/с,
то продуктивність порту C<sub>pi</sub> дорівнює 10&nbsp;Мбіт/с, а якщо в повнодуплексному, то
його C<sub>pi</sub> буде становити 20&nbsp;Мбіт/с.</p>
<p>Іноді говорять,
що комутатор підтримує миттєвий режим, що не блокує. Це означає, що він може
приймати й обробляти кадри від всіх своїх портів на максимальній швидкості протоколів, незалежно
від того, чи забезпечуються умови стійкої рівноваги між вхідним і вихідним трафіком. Правда, обробка деяких кадрів при цьому може
бути неповною - при зайнятості вихідного порту
кадр міститься в буфер комутатора. Для
підтримки миттєвого режиму, що не блокує, комутатор повинен мати більшу власну
продуктивність, а саме, вона повинна дорівнювати сумарній продуктивності його
портів:</p>
<p><b>C<sub>k</sub>=CуммаC<sub>pi</sub>.</b></p>
<p>Перший комутатор для локальних мереж не випадково з'явився для технології Ethernet.
Крім очевидної причини, пов'язаної з
найбільшою популярністю мереж Ethernet,
існувала й інша, не менш важлива причина - ця
технологія більше інших страждає від підвищення часу очікування
доступу до середовища при підвищенні
завантаження сегмента. Тому сегменти Ethernet у великих мережах у першу чергу мали потребу в засобі розвантаження вузьких
місць мережі, і цим засобом
стали комутатори фірми Kalpana, а потім й інших компаній.</p>
<p>Деякі компанії стали розвивати
технологію комутації для підвищення продуктивності інших технологій локальних мереж, таких як
Token Ring й FDDI. Ці комутатори підтримували як алгоритм роботи прозорого моста, так й алгоритм моста
з маршрутизацією від джерела. Внутрішня
організація комутаторів різних виробників іноді дуже відрізнялася від структури
першого комутатора EtherSwitch, однак принцип паралельної
обробки кадрів по кожному порту залишався незмінним.</p>
<p>Широкому застосуванню
комутаторів, безумовно, сприяло та обставина, що впровадження технології
комутації не вимагало заміни встановленого в мережах обладнання
- мережевих адаптерів, концентраторів,
кабельної системи. Порти комутаторів працювали у звичайному напівдуплексному
режимі, тому до них прозоро можна було підключити як кінцевий вузол, так і
концентратор, що організує цілий логічний сегмент.</p>
<p>Тому що комутатори й мости
прозорі для протоколів мережного рівня, тому їх поява в мережі не
зробило ніякого впливу на маршрутизатори мережі,
якщо вони там були.</p>
<p>Зручність використання комутатора
складається ще й у тому,
що цей пристрій, що самонавчається, і, якщо
адміністратор не навантажує його додатковими функціями, конфігурувати його не
обов'язково - потрібно тільки правильно підключити роз'єми кабелів до портів
комутатора, а далі він буде працювати самостійно й ефективно виконувати поставлену перед ним завдання
підвищення продуктивності мережі.</p>
<table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="table1">
  <tr>
    <td width="100%" align="left" colspan="3"><hr color="#2D4C54" size="4"></td>
  </tr>
  <tr>
    <td width="33%" align="left"><a href="012.htm">Попередня</a></td>
    <td width="33%" align="center"><a href="001.htm">Перша</a></td>
    <td width="34%" align="right"><a href="014.htm">Наступна</a></td>
  </tr>
</table>
</body>

</body>
</html>
