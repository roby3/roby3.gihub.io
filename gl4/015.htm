<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="uk">
<link rel=Edit-Time-Data href=15.files/editdata.mso>
<title>4.3.5. Керування потоком кадрів при напівдуплексній роботі</title>
</head>
<body lang=Ua>
<h3>4.3.5. Керування потоком кадрів при напівдуплексній
роботі</h3>
<p>При роботі порту у напівдуплексному режимі комутатор не може змінювати
протокол і користуватися для керування потоком
новими командами, такими як &quot;Призупинити передачу&quot; й &quot;Відновити
передачу&quot;.</p>
<p>Зате в
комутатора з'являється можливість впливати на
кінцевий вузол за допомогою механізмів алгоритму доступу до середовища, що кінцевий вузол зобов'язаний
відпрацьовувати. Ці прийоми засновані на тому, що кінцеві вузли строго дотримуються всіх
параметрів алгоритму доступу до середовища, а
порти комутатора - ні. Звичайно застосовуються два основних способи керування потоком кадрів - зворотний тиск на
кінцевий вузол й агресивного захвата середовища.</p>
<p><b><i>Метод зворотного тиску</i></b><i> (<b>backpressure</b>)
</i>складається в створенні штучних колізій у сегменті,
що надто інтенсивно посилає кадри в комутатор. Для цього комутатор звичайно використовує
<i>jam-послідовність</i>,
яка відправляє на вихід порту, до якого підключений сегмент (або вузол), щоб
призупинити його активність. Крім того, метод зворотного тиску може
застосовуватися в тих випадках, коли процесор порту не розрахований на
підтримку максимально можливого для даного протоколу трафіка. Один
з перших прикладів застосування методу зворотного тиску саме пов'язаний з таким
випадком - метод був застосований компанією LANNET у модулях LSE-1 й LSE-2, розрахованих на комутацію трафіка Ethernet з максимальною інтенсивністю відповідно 1&nbsp;Мбіт/с й 2&nbsp;Мбіт/с.</p>
<p>Другий метод &quot;гальмування&quot;
кінцевого вузла в умовах перевантаження внутрішніх буферів комутатора
заснований на так званому <i>агресивному поводженні
порту комутатора </i>при захваті середовища або після закінчення передачі чергового
пакета, або після колізії. Ці два випадки ілюструються мал. 4.29, <i>а </i>й <i>б.</i></p>
<p>У першому випадку комутатор
закінчив передачу чергового кадру й замість технологічної паузи в 9,6&nbsp;мкс зробив паузу в 9,1&nbsp;мкс і почав передачу нового
кадру. Комп'ютер не зміг захопити середовище, тому що він витримав стандартну паузу в
9,6&nbsp;мкс і виявив після цього, що середовище
вже зайняте.</p>
<p>У другому випадку кадри
комутатора й комп'ютера зштовхнулися й була
зафіксована колізія. Тому що комп'ютер зробив паузу після колізії в 51,2&nbsp;мкс, як це покладено в стандарті
(інтервал відстрочки дорівнює 512 бітових інтервалів), а комутатор – 50&nbsp;мкс, тому в цьому випадку комп'ютеру не вдалося передати свій кадр.</p>
<p>Комутатор може користуватися цим
механізмом адаптивно,
збільшуючи ступінь своєї агресивності в міру необхідності.</p>
<table border=0 cellspacing=0 cellpadding=0 width="100%">
	<tr>
		<td width="100%" valign=top align="center">
<img width=478 height=290 src=images/m29a.jpg alt="Мал. 4.29а. Агресивне поводження комутатора при перевантаженнях буферів"></td>
	</tr>
	<tr>
		<td width="100%" valign=top align="center"><i>а)</i></td>
	</tr>
	<tr>
		<td width="100%" valign=top align="center">
<img width=502 height=212 src=images/m29b.jpg alt="Мал. 4.29 б). Агресивне поводження комутатора при перевантаженнях буферів"></td>
	</tr>
	<tr>
		<td width="100%" valign=top align="center"><i>б)</i></td>
	</tr>
	<tr>
		<td width="100%" valign=top align="center">Мал. 4.29. Агресивне поводження комутатора при перевантаженнях буферів</td>
	</tr>
</table>
<p>Багато виробників <i>реалізують
за </i>допомогою сполучення описаних двох методів досить тонкі механізми керування потоком кадрів при перевантаженнях. Ці
методи використовують алгоритми чергування
переданих і прийнятих кадрів (<i><b>frame interleave</b></i>). Алгоритм чергування повинен бути гнучким і дозволяти комп'ютеру
в критичних ситуаціях на кожен прийнятий кадр
передавати трохи своїх, розвантажуючи
внутрішній буфер кадрів, причому не обов'язково знижуючи при цьому інтенсивність
прийому кадрів до нуля, а просто зменшуючи її до необхідного рівня.</p>
<p>Практично у всіх моделях
комутаторів, крім найпростіших моделей для робочих груп, реалізують той або
інший алгоритм керування потоком кадрів при напівдуплексному режимі роботи портів. Цей алгоритм, як
правило, реалізує більш тонке керування потоком, чим
стандарт 802.3х, не припиняючи до нуля прийом кадрів від сусіднього вузла й тим самим не сприяючи переносу
перевантаження в сусідній комутатор, якщо до порту підключений не кінцевий
вузол, а інший комутатор.</p>
<table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="table1">
  <tr>
    <td width="100%" align="left" colspan="3"><hr color="#2D4C54" size="4"></td>
  </tr>
  <tr>
    <td width="33%" align="left"><a href="014.htm">Попередня</a></td>
    <td width="33%" align="center"><a href="001.htm">Перша</a></td>
    <td width="34%" align="right"><a href="016.htm">Наступна</a></td>
  </tr>
</table>
</body>

</body>
</html>
