<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="uk">
<link rel=Edit-Time-Data href=18.files/editdata.mso>
<title>4.4.1. Особливості технічної реалізації комутаторів</title>
</head>
<body lang=Ua>
<h3>4.4.1.
Особливості технічної реалізації комутаторів</h3>
<p>Після того як технологія
комутації привернула загальну увагу й отримала високі оцінки фахівців, багато компаній
зайнялися реалізацією цієї технології у своїх пристроях,
застосовуючи для цього різні технічні рішення. Багато комутаторів першого покоління були
схожі на маршрутизатори, тобто ґрунтувалися на центральному процесорі загального призначення, пов'язаному
з інтерфейсними
портами по внутрішній швидкісній шині (мал. 4.30). Однак це було скоріше пробні пристрої,
призначені для освоєння самою компанією технології комутації, а не для
завоювання ринку.</p>
<table border="0" width="100%" id="table1">
	<tr>
		<td align="center">
<img width=332 height=168 src=images/m30.jpg alt="Мал. 4.30. Комутатор на процесорі загального призначення"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.30. Комутатор на процесорі загального призначення</td>
	</tr>
</table>
<p>Основним недоліком
таких комутаторів була їхня низька швидкість. Універсальний процесор ніяк не
міг впоратися з
великим обсягом
спеціалізованих операцій по пересиланню кадрів
між інтерфейсними
модулями.</p>
<p>Для прискорення операцій
комутації потрібні були спеціалізовані процесори з
спеціалізованими засобами обміну даними, як у
першому комутаторі Kalpana, і вони незабаром з'явилися.
Сьогодні всі комутатори використовують замовлені спеціалізовані
ВІСА - ASIC, які оптимізовані
для виконання основних операцій комутації. Часто в одному комутаторі використовується декілька спеціалізованих
ВІСА, кожна з яких виконує функціонально закінчену частину операцій. Порівняно
низька вартість сучасних комутаторів у порівнянні з їхніми попередниками
3-5-літньої давнини порозумівається масовим
характером виробництва основних ВІС, на яких кожна
компанія будує свої комутатори.</p>
<p>Крім процесорних мікросхем для
успішної роботи, що не блокує, комутатору
потрібно також мати швидкодіючий вузол для передачі кадрів між процесорними
мікросхемами портів.</p>
<p>Сьогодні комутатори використовують в якості базової
одну із трьох схем, на якій будується такий
вузол обміну:</p>
<ul type=disc>
	<li>комутаційна матриця;</li>
	<li>поділювана багатовхідна пам'ять;</li>
	<li>загальна шина.</li>
</ul>
<p>Часто ці
три способи взаємодії комбінуються в одному
комутаторі.</p>
<h4><a name=38></a>Комутатори на основі комутаційної матриці</h4>
<p><b><i>Комутаційна матриця</i></b> забезпечує основний
і найшвидший спосіб взаємодії процесорів портів, саме він був реалізований у
першому промисловому комутаторі локальних мереж.
Однак реалізація матриці можлива тільки для певного
числа портів, причому складність схеми зростає пропорційно квадрату кількості портів комутатора (мал. 4.31).</p>
<table border="0" width="100%" id="table2">
	<tr>
		<td align="center">
<img width=302 height=252 src=images/m31.jpg alt="Мал. 4.31 Комутаційна матриця"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.31 Комутаційна матриця</td>
	</tr>
</table>
<p>Більш
детальне висвітлення одного
з можливих варіантів реалізації комутаційної матриці для 8 портів подано на
мал. 4.32. Вхідні блоки процесорів портів на підставі перегляду адресної
таблиці комутатора визначають за адресою
призначення номер вихідного порту. Цю інформацію вони додають до байтів
вихідного кадру у вигляді спеціального ярлика - <b><i>тега</i></b> (<b><i>tag</i></b>).
Для даного приклада тег
являє собою просте 3-розрядне двійкове число, що відповідає номеру вихідного порту.</p>
<table border="0" width="100%" id="table3">
	<tr>
		<td align="center">
<img width=478 height=438 src=images/m32.jpg alt="Мал. 4.32. Реалізація комутаційної матриці 8x8 за допомогою двійкових перемикачів"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.32. Реалізація комутаційної матриці 8x8 за допомогою
двійкових перемикачів</td>
	</tr>
</table>
<p>Матриця складається із трьох
рівнів двійкових перемикачів, які з'єднують свій вхід з
одним з двох виходів залежно від значення біта тега. Перемикачі першого рівня управляються першим бітом тега, другого - другим, а
третього - третім.</p>
<p>Матриця може бути реалізована й
по-іншому, на підставі комбінаційних схем іншого типу, але її особливістю
однаково залишається технологія комутації
фізичних каналів. Відомим недоліком цієї технології
є відсутність буферизації даних
усередині комутаційної матриці - якщо складений
канал неможливо побудувати через зайнятість вихідного порту або проміжного
комутаційного елемента, то тоді дані повинні накопичуватися в їхньому джерелі, у цьому випадку - у вхідному блоці
порту, що прийняв кадр. Основні переваги таких
матриць - висока швидкість комутації й регулярна структура, що зручно
реалізовувати в інтегральних мікросхемах. Але після peaлізації матриці N<sub>x</sub>
у складі ВІС з'являється ще один її недолік -
складність нарощування числа портів, що комутуються.</p>
<h4><a name=39></a>Комутатори із загальною
шиною</h4>
<p>У комутаторах із загальною шиною процесори портів зв'язують
високошвидкісною шиною, яка використовується в
режимі поділу часу.</p>
<p>Приклад такої архітектури наведений на мал. 4.33. Щоб шина не блокувала роботу
комутатора, її продуктивність повинна дорівнювати
принаймні сумі продуктивності всіх портів комутатора. Для модульних комутаторів
деякі сполучення модулів з низькошвидкісними портами можуть приводити до
роботи, що не блокує, а встановлення модулів з високошвидкісними портами може приводити до того, що елементом, що блокує, стане, наприклад, загальна шина.</p>
<p>Кадр повинен передаватися по шині
невеликими частинами, по декілька байт, щоб
передача кадрів між декількома портами відбувалася
в псевдопаралельному режимі, не вносячи затримок у передачу кадру в цілому.
Розмір такої комірки даних визначається виробником комутатора. Деякі виробники,
наприклад LANNET або Centillion, вибрали як порцію даних, припустимих
за одну операцію по шині, комірок ATM з її полем даних в 48 байт. Такий підхід полегшує
трансляцію протоколів локальних мереж до
протоколу ATM, якщо комутатор підтримує ці технології.</p>
<table border="0" width="100%" id="table4">
	<tr>
		<td align="center">
<img width=547 height=396 src=images/m33.jpg alt="Мал. 4.33. Архітектура комутатора з загальною шиною"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.33. Архітектура комутатора з загальною шиною</td>
	</tr>
</table>
<p>Вхідний блок процесора поміщає в комірку, прийнятний по шині, тег, у якому вказує номер порту призначення. Кожен вихідний блок процесора порту містить фільтр тегів,
що вибирає теги, призначені
даному порту.</p>
<p>Шина, так само як і комутаційна
матриця, не може здійснювати проміжну буферизацію, але тому що
дані кадру розбиваються на невеликі комірки,
то затримок з початковим очікуванням доступності
вихідного порту в такій схемі немає - тут працює принцип комутації пакетів, а
не каналів.</p>
<h4><a name=40></a>Комутатори
з поділюваною пам'яттю</h4>
<p>Третя базова архітектура
взаємодії портів – двовхідна
поділювана пам'ять. Приклад такої архітектури наведений
на мал. 4.34.</p>
<table border="0" width="100%" id="table5">
	<tr>
		<td align="center">
<img width=538 height=347 src=images/m34.jpg alt="Мал. 4.34. Архітектура поділюваної пам'яті"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.34. Архітектура поділюваної пам'яті</td>
	</tr>
</table>
<p>Вхідні блоки процесорів портів
з'єднуються з входом
перемикачем, що, поділяє пам'ять, а вихідні блоки цих же процесорів
з'єднуються перемикачем з виходом цієї
пам'яті. Перемиканням входу й виходу
поділюваної пам'яті управляє менеджер черг
вихідних портів. У поділюваній пам'яті менеджер організує кілька черг даних, по
одній для кожного вихідного порту. Вхідні
блоки процесорів передають менеджерові портів
запити на запис даних у чергу того порту, що відповідає адресі призначення
пакета. Менеджер по черзі підключає вхід пам'яті до одному із вхідних блоків
процесорів і той переписує частину даних кадру в чергу певного
вихідного порту. По мірі заповнення черг менеджер робить
також почергове підключення виходу поділюваної пам'яті до вихідних блоків
процесорів портів, і дані із черги листуються
у вихідний буфер процесора.</p>
<p>Пам'ять повинна бути досить швидкодіючою для підтримки швидкості перепису даних між N портами комутатора.
Застосування загальної буферної пам'яті знижує
вимоги до розміру буферної пам'яті процесора порту.</p>
<h4><a name=41></a>Комбіновані комутатори</h4>
<p>У кожної з описаної
архітектури є свої переваги й недоліки, тому часто в складних комутаторах ці архітектури застосовуються в комбінації одна з
одною. Приклад такого комбінування наведений
на мал. 4.35.</p>
<table border="0" width="100%" id="table6">
	<tr>
		<td align="center">
<img width=418 height=255 src=images/m35.jpg alt="Мал. 4.35. Комбінування архітектури комутаційної матриці й загальної шини"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.35. Комбінування архітектури комутаційної матриці й загальної шини</td>
	</tr>
</table>
<p>Комутатор складається з модулів з фіксованою кількістю портів (2-12), виконаних на основі спеціалізованій ВІС, що реалізує архітектуру комутаційної матриці.
Якщо порти, між якими потрібно передати кадр даних, належать одному модулю, то передача кадру здійснюється процесорами
модуля на основі наявної в модулі комутаційної матриці. Якщо ж порти належать
різним модулям, то процесори спілкуються по загальній
шині. При такій архітектурі передача кадрів всередині модуля буде відбуватися
швидше, ніж при міжмодульній
передачі, тому що комутаційна матриця - найбільш швидка, хоча й найменш
масштабований спосіб взаємодії портів. Швидкість внутрішньої шини комутаторів
може досягати декількох Гбіт/с, а в
найбільш потужних моделей - до 20-30 Гбіт/с.</p>
<p>Можна представити й інші способи
комбінування архітектури,
наприклад використання поділюваної пам'яті для взаємодії модулів.</p>
<h4><a name=42></a>Конструктивне виконання комутаторів</h4>
<p>У конструктивному
відношенні комутатори діляться на наступні
типи:</p>
<ul type=disc>
	<li>автономні комутатори з фіксованою кількістю портів;</li>
	<li>модульні комутатори на основі шасі;</li>
	<li>комутатори з фіксованою кількістю портів, що збирають у стек.</li>
</ul>
<p>Перший тип комутаторів звичайно
призначений для організації невеликих робочих груп.</p>
<p>Модульні комутатори на основі
шасі найчастіше призначені для застосування на магістралі мережі. Тому вони виконуються на основі якої-небудь
комбінованої схеми, у якій взаємодія модулів
організується по швидкодіючій шині або ж на основі швидкої поділюваної пам'яті
великого обсягу. Модулі такого комутатора
виконуються на основі технології &quot;hot swap&quot;, тобто допускають
заміну на ходу, без вимикання комутатора, тому що центральний комунікаційний пристрій мережі не
повинен мати перерв у роботі. Шасі звичайно забезпечується резервованими
джерелами живлення й резервованими вентиляторами
у тих же цілях.</p>
<p>З технічної точки зору певний інтерес представляють
стекові комутатори. Ці пристрої
являють собою комутатори, які можуть працювати
автономно, тому що виконані в окремому корпусі, але мають спеціальні
інтерфейси, які дозволяють їх поєднувати в загальну
систему, що працює як єдиний комутатор. Говорять,
що в цьому випадку окремі комутатори утворять стек.</p>
<p>Звичайно такий спеціальний
інтерфейс являє собою високошвидкісну шину, що дозволяє об'єднати окремі
корпуси подібно модулям у комутаторі на основі шасі. Тому що відстані між
корпусами більше, ніж між модулями на шасі, швидкість обміну по шині звичайно
нижче, ніж у модульних комутаторів: 200-400 Мбіт/с. Не дуже високі
швидкості обміну між комутаторами стека обумовлені також тим, що стекові комутатори звичайно займають
проміжне положення між комутаторами з фіксованою кількістю портів і комутаторами на
основі шасі. Стекові комутатори застосовуються
для створення мереж робочих груп і відділів,
тому надвисокі швидкості шин обміну їм не дуже
потрібні й не відповідають їхньому ціновому діапазону.</p>
<p>Структура стека комутаторів, що
з'єднують по швидкісних спеціальних портах, показана на мал. 4.36.</p>
<table border="0" width="100%" id="table7">
	<tr>
		<td align="center">
<img width=510 height=497 src=images/m36.jpg alt="Мал. 4.36. Стек комутаторів, поєднаних високошвидкісним каналом"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.36. Стек комутаторів, поєднаних
високошвидкісним каналом</td>
	</tr>
</table>
<p>Компанія Cisco
запропонувала інший підхід до організації стека. Її комутатор Catalyst 3000 також має спеціальний швидкісний інтерфейс
280 Мбіт/с для
організації стека, але з його допомогою
комутатори з'єднуються не один з одним, а з
окремим пристроєм, що містить
комутаційну матрицю 8x8, яка організує більше високопродуктивний
обмін між будь-якими парами комутаторів.</p>
<p>Існують комутатори, які
дозволяють об'єднати два комутатори повнодуплексним каналом
більш ніж по одній парі портів. Наприклад, комутатори моделі 28115 компанії Nortel Networks мають по два порти
Fast Ethernet, за допомогою
яких можна з'єднувати комутатори, утворюючи повнодуплексний канал із
продуктивністю 400 Мбіт/с
(мал. 4.37).</p>
<table border="0" width="100%" id="table8">
	<tr>
		<td align="center">
<img width=462 height=392 src=images/m37.jpg alt="Мал. 4.37. Транкове повнодуплексне з'єднання комутаторів 28115 компанії Nortel Networks"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.37. Транкове повнодуплексне з'єднання комутаторів 28115 компанії Nortel Networks</td>
	</tr>
</table>
<p>Такі з'єднання
називаються <b><i>транковими</i></b><i></i>і є приватною
розробкою кожної компанії, що випускає комунікаційне обладнання,
тому що порушують не тільки логіку доступу до
поділюваних середовищ, але й топологію з'єднання мостів, що забороняє петлевидні контури (а такий контур завжди
утвориться при з'єднанні комутаторів більш ніж
однією парою портів). При з'єднанні комутаторів різних виробників транк працювати не буде,
тому що кожен виробник додає до логіки
вивчення адрес мережі комутатором по транковому зв'язку щось своє, щоб домогтися від нього
правильної роботи.</p>
<table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="table1">
  <tr>
    <td width="100%" align="left" colspan="3"><hr color="#2D4C54" size="4"></td>
  </tr>
  <tr>
    <td width="33%" align="left"><a href="017.htm">Попередня</a></td>
    <td width="33%" align="center"><a href="001.htm">Перша</a></td>
    <td width="34%" align="right"><a href="019.htm">Наступна</a></td>
  </tr>
</table>
</body>
</body>
</html>
