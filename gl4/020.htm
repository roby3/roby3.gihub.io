<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="uk">
<title>4.4.3. Додаткові функції комутаторів</title>
</head>
<body lang=Ua>
<h3>4.4.3. Додаткові функції комутаторів</h3>
<p>Тому що комутатор являє собою складний обчислювальний пристрій, що має декілька процесорних модулів, то
природно навантажити його крім виконання
основної функції передачі кадрів з порту на
порт по алгоритму моста
й деяких додаткових функцій, корисними при побудові надійних і гнучких мереж. Нижче описуються найпоширеніші додаткові
функції комутаторів, які підтримуються більшістю виробників комунікаційного обладнання.</p>
<h4><a name=49></a>Підтримка алгоритму Spanning Tree</h4>
<p><b><i>Алгоритм покриваючого дерева</i></b> —<i><b>Spanning Tree Algorithm</b></i> (<b><i>STA</i></b>)<i> </i>дозволяє комутаторам автоматично визначати
деревоподібну конфігурацію зв'язків у мережі
при довільному з'єднанні
портів між собою. Як ми вже відзначали, для нормальної роботи комутатора
потрібна відсутність замкнутих маршрутів у мережі.
Ці маршрути можуть створюватися адміністратором спеціально для утворення резервних зв'язків
або ж виникати випадковим чином, що цілком
можливо, якщо мережа має численні зв'язки, а кабельна система погано структурована або
документована.</p>
<p>Підтримуючий алгоритм STA комутатори автоматично створюють
активну деревоподібну конфігурацію зв'язків (тобто зв'язану
конфігурацію без петель) на безлічі всіх зв'язків мережі.
Така конфігурація називається покриваючим деревом - <b>Spanning Tree</b> (іноді
її називають основним деревом), і її назва
дала ім'я всьому алгоритму. Алгоритм Spanning
Tree описаний у стандарті IEEE 802.1D.</p>
<p>Комутатори знаходять
покриваюче дерево адаптивно, за допомогою обміну
службовими пакетами. Реалізація в комутаторі алгоритму STA дуже важлива для
роботи в великих мережах
- якщо комутатор не підтримує цей алгоритм, то адміністратор повинен самостійно
визначити, які порти потрібно перевести в заблокований стан,
щоб виключити петлі. До того ж при відмові
якого-небудь кабелю, порту або комутатора адміністратор повинен, по-перше, виявити факт відмови,
а по-друге, ліквідувати наслідки відмови, перевівши
резервний зв'язок у робочий режим шляхом
активізації деяких портів. За підтримкою комутаторами мережі
протоколу Spanning Tree відмови виявляються
автоматично, за рахунок постійного тестування зв'язаності мережі службовими пакетами. Після
виявлення втрати зв'яку протокол будує нове покриваюче
дерево, якщо це можливо, і мережа автоматично
відновлює працездатність.</p>
<p>Алгоритм Spanning Tree визначає
активну конфігурацію мережі в три етапи.</p>
<ol start=1 type=1>
	<li>Спочатку в мережі визначається <b>кореневий комутатор</b> (<b>root switch</b>), від якого будується дерево. Кореневим комутатор може бути обраний автоматично або призначений адміністратором. При автоматичному виборі кореневим стає комутатор з меншим значенням Мас-адреси його блоку керування.</li>
	<li>Потім, на другому етапі, для кожного комутатора визначається <b>кореневий порт</b> (<b>root port</b>) - це порт, що має по мережі найкоротшу відстань до кореневого комутатора (точніше, до кожного з портів кореневого комутатора).</li>
	<li>І нарешті, на третьому етапі для кожного сегмента мережі вибирається так званий
	<b>призначений порт</b> (<b>designated port</b>) - це порт, що має найкоротшу відстань від даного сегмента до кореневого комутатора. Після визначення кореневих і призначених портів кожен комутатор блокує інші порти, які не потрапили в ці два класи портів. Можна математично довести, що при такому виборі активних портів у мережі виключаються петлі й зв'язки, що залишилися, утворять покриваюче дерево (якщо воно може бути побудовано при існуючих зв'язках у мережі).</li>
</ol>
<p>Поняття відстані відіграє важливу роль у побудові покриваючого
дерева. Саме за цим критерієм вибирається єдиний порт, що з'єднує кожен комутатор з
кореневим комутатором, і єдиний порт, що з'єднує кожен
сегмент мережі з
кореневим комутатором.</p>
<p>На мал. 4.38 показаний приклад побудови конфігурації
покриваючого дерева для мережі, що складається з 5 сегментів й 5 комутаторів. Кореневі
порти зафарбовані темними кольорами,
призначені порти не зафарбовані, а заблоковані порти перекреслені. В активній
конфігурації комутатори <b>2</b> й <b>4</b> не мають портів, що передають кадри
даних, тому вони зафарбовані як резервні. Відстань до кореня визначається як сумарний умовний час на передачу одного біта
даних від порту даного комутатора до порту кореневого комутатора. При цьому вважається, що час внутрішніх передач даних (з порту на
порт) комутатором не враховується, а
враховується тільки час на передачу даних по сегментах мережі,
що з'єднує комутатори. Умовний час сегмента розраховується як час, затрачений на передачу одного біта інформації в 10 наносекундих одиницях між безпосередньо зв'язаними по сегменту
мережі портами. Так, для сегмента Ethernet цей
час дорівнює 10 умовним одиницям, а для
сегмента Token Ring 16&nbsp;Мбіт/с - 6,25.
(Алгоритм STA не пов'язаний з яким-небудь певним
стандартом канального рівня, він може застосовуватися до комутаторів, що
з'єднують мережі різних технологій.)</p>
<p>У наведеному прикладі передбачається, що всі сегменти працюють на одній
швидкості, тому вони мають однакові умовні відстані, які тому не показані на
малюнку.</p>
<p>Для автоматичного визначення початкової активної конфігурації
дерева всі комутатори мережі після їхньої
ініціалізації починають періодично обмінюватися спеціальними пакетами, які називаються
<i>протокольними блоками даних моста — BPDU
(Bridge Protocol Data Unit), </i>що відбиває
факт первісної розробки алгоритму STA для
мостів.</p>
<table border="0" width="100%" id="table1">
	<tr>
		<td align="center">
		<img width=478 height=530 src=images/m38.jpg alt="Мал. 4.38. Побудова покриваючого дерева мережі за алгоритмом STA"></td>
	</tr>
	<tr>
		<td align="center">Мал. 4.38. Побудова покриваючого дерева мережі за алгоритмом STA</td>
	</tr>
</table>
<p>Пакети BPDU містяться в полі даних кадрів канального рівня, наприклад кадрів
Ethernet або FDDI. Бажано, щоб всі комутатори підтримували загальну групову адресу, за допомогою якого кадри, що містять пакети BPDU, могли б одночасно передаватися
всім комутаторам мережі. Інакше пакети BPDU
розсилаються широкомовно.</p>
<p>Поля пакета BPDU перераховані нижче.</p>
<ul type=disc>
	<li>Ідентифікатор версії протоколу STA - 2 байти. Комутатори повинні підтримувати ту саму версію протоколу STA, інакше може встановитися активна конфігурація з петлями.</li>
	<li>Тип BPDU - 1 байт. Існують два типи BPDU - конфігураційний BPDU, тобто заявка на можливість стати кореневим комутатором, на підставі якої відбувається визначення активної конфігурації, і BPDU повідомлення про реконфігурування, що посилає комутатором, що виявив подію, яка вимагає проведення реконфігурації - відмова лінії зв'язку, відмова порту, зміна пріоритетів комутатора або портів.</li>
	<li>Прапори - 1 байт. Один біт містить прапор зміни конфігурації, другий - прапор підтвердження зміни конфігурації.</li>
	<li>Ідентифікатор кореневого комутатора - 8 байт.</li>
	<li>Відстань до кореня - 2 байти.</li>
	<li>Ідентифікатор комутатора - 8 байт.</li>
	<li>Ідентифікатор порту - 2 байти.</li>
	<li>Час життя повідомлення - 2 байти. Виміряється в одиницях по 0,5 с, служить для виявлення застарілих повідомлень. Коли пакет BPDU проходить через комутатор, той додає вчасно життя пакета час його затримки даним комутатором.</li>
	<li>Максимальний час життя повідомлення - 2 байти. Якщо пакет BPDU має час життя, що перевищує максимальне, то він ігнорується комутаторами.</li>
	<li>Інтервал hello, через який посилають пакети BPDU.</li>
	<li>Затримка зміни станів - 2 байти. Затримка визначає мінімальний час переходу портів комутатора в активний стан. Така затримка необхідна, щоб виключити можливість тимчасового виникнення петель при неодночасній зміні станів портів під час реконфігурації. У пакета BPDU повідомлення про реконфігурацію відсутні всі поля, крім двох перших.</li>
</ul>
<p>Ідентифікатори комутаторів складаються з 8 байт, причому молодші 6 є Мас-адреса блоку
управління комутатора. Старші 2 байти у
вихідному стані заповнені нулями, але адміністратор може змінити значення цих
байтів, тим самим призначивши певний комутатор кореневим.</p>
<p>Після ініціалізації кожен
комутатор спочатку вважає себе кореневим. Тому він починає через інтервал hello
генерувати через всі свої порти повідомлення BPDU конфігураційного типу. У них
він указує свій ідентифікатор як ідентифікатор
кореневого комутатора (і як ідентифікатор даного комутатора також), відстань до
кореня встановлюється в 0, а як ідентифікатор порту вказується ідентифікатор
того порту, через який передається BPDU. Як
тільки комутатор одержує BPDU, у якому є
ідентифікатор кореневого комутатора, зі
значенням, меншим його власного, він перестає генерувати свої власні кадри BPDU, а
починає ретранслювати тільки кадри нового претендента на звання кореневого
комутатора. На мал. 4.38 у комутатора <b>1</b>
ідентифікатор має найменше значення, раз він
став у результаті обміну кадрами кореневим.</p>
<p>При ретрансляції кадрів кожен
комутатор нарощує відстань до кореня, зазначена
в що пришли BPDU, на умовний час сегмента, по якому прийнятий даний кадр. Тим самим у кадрі BPDU, по мірі проходження через
комутатори, накопичується відстань до кореневого комутатора. Якщо вважати, що всі сегменти розглянутого приклада є
сегментами Ethernet, то комутатор <b>2</b>, прийнявши від комутатора BPDU по сегменті 1 з
відстанню, яка дорівнює 0, нарощує його на 10
одиниць.</p>
<p>Ретранслюючи кадри, кожен
комутатор для кожного свого порту запам'ятовує мінімальну
відстань до кореня, що зустрілося у всіх прийнятих цим портом кадрах BPDU. При завершенні
процедури встановлення конфігурації покриваючого дерева (за часом) кожен комутатор знаходить
свій кореневий порт - це порт, для якого мінімальна
відстань до кореня виявилося менше, ніж в інших портів. Так, комутатор <b>3</b> вибирає порт
<b>А</b> в якості кореневого, оскільки по порту <b>А</b> мінімальна
відстань до кореня дорівнює 10 (BPDU з такою відстанню прийнятий від кореневого комутатора
через сегмент 1). Порт <b>В</b> комутатора <b>3</b> виявив
у прийнятих кадрах мінімальна відстань в 20
одиниць - це відповідало випадку проходження
кадру від порту В кореневого моста через
сегмент 2, потім через міст <b>4</b> і сегмент <b>3</b>.</p>
<p>Крім кореневого порту комутатори розподіленим образом вибирають для кожного сегмента мережі призначений порт. Для цього вони виключають
із розгляду свій кореневий порт (для сегмента, до якого він підключений, завжди
існує інший комутатор, що ближче розташований
до кореня), а для всіх своїх портів, що залишилися,
порівнюють прийняті по них мінімальні відстані
до кореня з відстанню до кореня свого
кореневого порту. Якщо в якого-небудь свого
порту прийняті їм відстані до кореня більше,
ніж відстань маршруту, що пролягає через свій кореневий порт, то це значить, що
для сегмента, до якого підключений даний порт, найкоротша відстань до
кореневого комутатора веде саме через даний
порт. Комутатор робить всі свої порти, у яких
така умова виконується, призначеними.</p>
<p>Якщо в процесі вибору кореневого порту або призначеного порту
кілька портів виявляються рівними за критерієм
найкоротшої відстані до кореневого комутатора, то вибирається порт із найменшим
ідентифікатором.</p>
<p>Як приклад розглянемо вибір
кореневого порту для комутатора <b>2</b> і призначені порти для <b>сегмента 2</b>.
<b>Міст 2</b> при виборі кореневого порту зштовхнувся
із ситуацією, коли <b>порт А</b> и <b>порт В</b> мають рівну
відстань до кореня - <b>по 10 одиниць</b> (<b>порт А</b> приймає кадри від <b>порту
В</b> кореневого комутатора через один
проміжний сегмент - <b>сегмент 1</b>, а <b>порт В</b> приймає кадри від <b>порту
А</b> кореневого комутатора також через один
проміжний сегмент - через <b>сегмент 2</b>). Ідентифікатор А має менше числове
значення, чим В (у силу
впорядкованості кодів символів), тому <b>порт А став кореневим портом
комутатора 2</b>.</p>
<p>При перевірці порту В на випадок, чи не є він призначеним
для сегмента 2, комутатор 2 виявив, що через
цей порт він приймав кадри із зазначеними у
них мінімальною відстанню 0 (це були кадри від порту В кореневого комутатора
1). Тому що власний кореневий порт у
комутатора 2 має відстань до кореня 10, то порт В не є
призначеним для сегмента 2.</p>
<p>Потім всі порти, крім кореневого й призначених,
переводяться кожним комутатором у заблокований
стан. На цьому
побудова покриваючого дерева закінчується.</p>
<p>У процесі нормальної роботи кореневий комутатор продовжує
генерувати службові кадри BPDU, а інші комутатори продовжують їх приймати своїми кореневими портами й
ретранслювати призначеними. Якщо в комутатора
немає призначених портів, як у комутаторів 2 й
4, то вони однаково продовжують брати участь у роботі протоколу Spanning Tree,
приймаючи службові кадри кореневим портом. Якщо після закінчення тайм-ауту
кореневий порт будь-якого комутатора мережі не
одержує службовий кадр BPDU, то він ініціює нову процедуру побудови покриваючого дерева,
сповіщаючи при цьому інші комутатори BPDU
повідомлення про реконфигурацію. Одержавши такий кадр, всі комутатори починають знову
генерувати BDPU конфігураційного типу, у результаті чого встановлюється нова
активна конфігурація.</p>
<h4><a name=50></a>Трансляція протоколів канального рівня</h4>
<p>Комутатори можуть виконувати трансляцію одного протоколу
канального рівня в іншій, наприклад Ethernet в FDDI, Fast Ethernet в Token Ring
і т.п. При цьому вони працюють по тим ж алгоритмам, що й мости, що транслюють,
тобто у відповідності зі специфікаціями IEEE
802.1H й RFC 1042, що визначають правила
перетворення полів кадрів різних протоколів.</p>
<p>Трансляцію протоколів локальних мереж
полегшує той факт, що найбільш складну роботу, що при об'єднанні гетерогенних мереж часто виконують маршрутизатори й шлюзи, а саме
роботу із трансляції адресної інформації, у цьому випадку виконувати не
потрібно. Всі кінцеві вузли локальних мереж
мають унікальні адреси того самого формату незалежно від підтримуваного
протоколу. Тому адреса мережного адаптера Ethernet зрозуміла мережному
адаптеру FDDI, і вони можуть використовувати ці адреси в полях своїх кадрів не замислюючись про те, що вузол, з яким вони взаємодіють, належить мережі, що працює за іншою технологією.</p>
<p>Тому при узгодженні протоколів локальних мереж комутатори не будують
таблиць відповідності адрес вузлів, а переносять адреси призначення й джерела з
кадру одного протоколу в кадр іншого.</p>
<p>Крім зміни порядку біт при передачі байт адреси трансляція
протоколу Ethernet (і Fast Ethernet, що використовує
формат кадрів Ethernet) у протоколи FDDI й Token Ring включає виконання
перерахованих нижче (можливо, не всіх)
операцій.</p>
<ul type=disc>
	<li>Обчислення довжини поля даних кадру й приміщення цього значення в поле Length при передачі кадру з мережі FDDI або Token Ring у мережу Ethernet 802.3 (у кадрах FDDI й Token Ring поле довжини відсутнє).</li>
	<li>Заповнення полів статусу кадру при передачі кадрів з мережі FDDI або Token Ring у мережу Ethernet. Кадри FDDI й Token Ring мають два біти, установлювані станцією, який призначався кадр, - біт розпізнавання адреси А и біт копіювання кадру С. При одержанні кадру станція повинна встановити ці два біти, щоб кадр, що повернувся по кільцю до сгенерувавший його станції, приніс дані зворотного зв'язку. При передачі комутатором кадру в іншу мережу немає стандартних правил для встановлення біт А и С у кадр, що повертається по кільцю до станції-джерела. Тому виробники комутаторів вирішують цю проблему за своїм розсудом.</li>
	<li>Відкидання кадрів, переданих з мереж FDDI або Token Ring у мережу Ethernet з розміром поля даних більшим, ніж 1500 байт, тому що це максимально можливе значення поля даних для мереж Ethernet. Надалі, не дочекавшись відповіді від станції призначення з мережі Ethernet, протокол верхнього рівня станції з мережі FDDI, можливо, зменшить розмір переданих в одному кадрі даних, і тоді комутатор зможе передавати кадри між цими станціями. Іншим варіантом рішення проблеми є підтримка комутатором IP-фрагментації, але це вимагає, по-перше, реалізації в комутаторі протоколу мережного рівня, а по-друге, підтримки протоколу IP взаємодіючими вузлами трансльованих мереж.</li>
	<li>Заповнення поля Туре (тип протоколу в полі даних) кадру Ethernet II при приході кадрів з мереж, що підтримують кадри FDDI або Token Ring, у яких це поле відсутнє, зате є поля DSAP й SSAP, що виконують те ж призначення, але з іншими кодами для позначення протоколів. Для спрощення трансляції специфікація RFC&nbsp;1042 пропонує завжди використовувати в мережах FDDI й Token Ring кадри із заголовками LLC/SNAP, які мають те ж поле Туре й з тими ж значеннями, що й кадри Ethernet II. При перетворенні кадрів значення з поля Туре заголовка LLC/SNAP переноситься в поле Туре кадру Ethernet II, і навпаки. Якщо в мережі Ethernet є формати кадрів, відмінні від Ethernet II, то вони також повинні мати заголовок LLC/SNAP.</li>
	<li>Перерахування контрольної суми кадру у відповідності з сформованими значеннями службових полів кадру.</li>
</ul>
<h4><a name=51></a>Можливості комутаторів по фільтрації трафіка</h4>
<p>Багато комутаторів дозволяють адміністраторам задавати
додаткові умови фільтрації кадрів поряд зі
стандартними умовами їхньої фільтрації відповідно до інформації адресної
таблиці. Користувацькі фільтри призначені для створення додаткових бар'єрів на шляху кадрів, які обмежують доступ певних груп користувачів до певних
служб мережі.</p>
<p>Найбільш простими є
користувальницькі фільтри на основі Мас-адрес
станцій. Тому що Мас-адреса - це та інформація, з якою працює
комутатор, то він дозволяє задавати такі фільтри в зручній для адміністратора
формі, можливо, проставляючи деякі умови в додатковому
полі адресної таблиці, подібно тим, які були зазначені
в адресній таблиці моста
System 3000 на мал. 4.20 - наприклад, відкидати кадри з
певною адресою. При цьому користувачеві, що працює на комп'ютері з даною Мас-адресою, повністю забороняється доступ до ресурсів іншого
сегмента мережі.</p>
<p>Часто адміністраторові
потрібно задати більше тонкі умови фільтрації,
наприклад заборонити деякому користувачеві (чужого
сегмента) друкувати свої документи на певному
сервері друку NetWare, а інші ресурси цього
сегмента зробити доступними. Для реалізації такого фільтра потрібно заборонити
передачу кадрів з певних
Мас-адрес, у яких вкладені пакети IPX, у поле &quot;номер сонета&quot;
яких буде зазначене значення, що відповідає
службі друку NetWare. Комутатори не аналізують
протоколи верхніх рівнів, такі як IPX, тому адміністраторові
доводиться для завдання умов такої фільтрації
вручну визначати поле, за значенням якого
потрібно здійснювати фільтрацію, у вигляді пари &quot;зсув – розмір&quot;
відносно початку поля даних
кадру канального рівня, а потім ще вказати в шестнадцятковому
форматі значення цього поля для служби друку.</p>
<p>Звичайно умови фільтрації записуються у вигляді булевих виразів, зформованих за допомогою логічних операторів AND й
OR.</p>
<p>Накладення додаткових умов фільтрації може знизити
продуктивність комутатора, тому що обчислення булевих
виразів вимагає проведення
додаткових обчислень процесорами портів.</p>
<h4><a name=52></a>Пріоритетна обробка кадрів</h4>
<p>Побудова мереж на основі комутаторів дозволяє використати пріоритезацію
трафіка, причому робити це незалежно від
технології мережі. Ця нова можливість (у
порівнянні з мережами, побудованими цілком на
концентраторах) є наслідком
того, що комутатори буферизують кадри перед їх
відправленням на інший порт. Комутатор звичайно веде
для кожного вхідного й вихідного порту не одну, а кілька черг, причому кожна
черга має свій пріоритет обробки. При цьому комутатор може бути зконфігурованим, наприклад, так, щоб передавати один низькопріоритетний
пакет на кожні 10 високопріоритетних пакетів.</p>
<p>Підтримка пріоритетної обробки може особливо придатися для додатків,
що пред'являють різні вимоги до припустимих затримок кадрів і до пропускної здатності мережі
для потоку кадрів.</p>
<p>Пріоритезація трафіка комутаторами сьогодні є
одним з основних механізмів забезпечення якості транспортного обслуговування в
локальних мережах. Це, природно, не гарантує якість обслуговування, а тільки механізм
best effort – &quot;з максимальними зусиллями&quot;.
До яких рівнів затримок приводить приписування
того або іншого рівня пріоритету кадру, яку
пропускну здатність забезпечує пріоритет потоку кадрів - схема пріоритезації
не говорить. З'ясувати наслідки її застосування можна тільки шляхом проведення натурних експериментів або ж за допомогою
імітаційного моделювання. Ясно тільки одне - більше
пріоритетні кадри будуть оброблятися раніше менш пріоритетних,
тому всі показники якості обслуговування в них будуть вище, ніж у менш
пріоритетних. Залишається питання - наскільки?
Гарантії якості обслуговування дають інші схеми, які засновані на попередньому резервуванні якості обслуговування.
Наприклад, такі схеми використовуються в
технологіях глобальних мереж frame relay й ATM
або в протоколі RSVP для мереж TCP/IP. Однак
для комутаторів такого роду протоколів ні, так що гарантій якості
обслуговування вони поки дати не можуть.</p>
<p>Основним питанням при пріоритетній обробці кадрів комутаторами
є питання призначення кадру
пріоритету. Тому що не всі протоколи канального рівня підтримують поле
пріоритету кадру, наприклад у кадрів Ethernet
воно відсутнє, то
комутатор повинен використати який-небудь
додатковий механізм для зв'язування кадру з
його пріоритетом. Найпоширеніший спосіб - приписування пріоритету портам
комутатора. При цьому способі комутатор поміщає кадр у чергу кадрів
відповідного пріоритету залежно від того, через який порт надійшов кадр у
комутатор. Спосіб нескладний, але недостатньо гнучкий - якщо до порту комутатора підключений не
окремий вузол, а сегмент, то всі вузли сегмента одержують
однаковий пріоритет.</p>
<p>Багато компаній, що випускають комутатори, реалізували в них
ту або іншу схему пріоритетної обробки кадрів. Прикладом фірмового підходу до
призначення пріоритетів на основі портів є
технологія РАСІ компанії 3Com.</p>
<p>Більше гнучким є
призначення пріоритетів кадрам відповідно до досить нового стандарту IEEE
802.1р. Цей стандарт розроблявся спільно зі стандартом
802.1Q, що розглядається в наступному розділі,
присвяченому віртуальним локальним мережам. В обох стандартах передбачений загальний додатковий заголовок для кадрів Ethernet,
що складається з двох байт. У цьому
додатковому заголовку, що вставляється перед полем даних кадру, 3 біти використовуються для вказівки
пріоритету кадру. Існує протокол, по якому
кінцевий вузол може запросити в комутатора один з восьми
рівнів пріоритету кадру. Якщо мережний адаптер
не підтримує стандарт 802.1р, то комутатор може
призначати пріоритети кадрам на основі порту надходження кадру. Такі позначені
кадри будуть обслуговуватися відповідно до їх пріоритету всіма комутаторами мережі, а не тільки тим комутатором, що
безпосередньо прийняв кадр від кінцевого вузла. При передачі кадру мережному адаптеру,
що не підтримує стандарт 802.1р, додатковий
заголовок повинен бути вилучений.</p><table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="table1">
  <tr>
    <td width="100%" align="left" colspan="3"><hr color="#2D4C54" size="4"></td>
  </tr>
  <tr>
    <td width="33%" align="left"><a href="019.htm">Попередня</a></td>
    <td width="33%" align="center"><a href="001.htm">Перша</a></td>
    <td width="34%" align="right"><a href="021.htm">Наступна</a></td>
  </tr>
</table>
</body>

</body>
</html>
