<html >

<head>
<meta http-equiv="Content-Language" content="uk">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<title>2.3.5. Компресія даних</title>

<!--[if gte mso 9]><xml>
<mso:CustomDocumentProperties>
<mso:Categories msdt:dt="string">Навчальний метеріал</mso:Categories>
</mso:CustomDocumentProperties>
</xml><![endif]-->
</head>

<body>

<h3>2.3.5. Компресія даних</h3>
<p>Компресія (стиск) даних застосовується для скорочення часу передачі даних. 
Тому що на компресію даних передавальна сторона витрачає додатковий час, до 
якого потрібно ще додати аналогічні витрати часу на декомпресію цих даних 
приймаючою стороною, то вигоди від скорочення часу на передачу стиснутих даних 
звичайно бувають помітні тільки для низько швидкісних каналів. Цей поріг 
швидкості для сучасної апаратури складає близько 64&nbsp;Кбит/с. Багато програмних і 
апаратних засобів мережі здатні виконувати <i>динамічну компресію</i> даних на 
відміну від статичної, коли дані попередньо стискаються (наприклад, за допомогою 
популярних архіваторів типу WinZip), а вже потім відсилаються в мережу.</p>
<p>На практиці може використовуватися ряд алгоритмів компресії, кожний з який 
застосується до визначеного типу даних. Деякі модеми (що називають 
інтелектуальними) пропонують <i>адаптивну компресію</i>, при якій у залежності 
від даних, які передаються, вибирається визначений алгоритм компресії. 
Розглянемо деякі з загальних алгоритмів компресії даних:</p>
<p><i>Десяткове упакування</i>. Коли дані складаються тільки з чисел, значну 
економію можна одержати шляхом зменшення кількості використовуваних на цифру біт 
з 7 до 4, використовуючи просте двійкове кодування десяткових цифр замість коду 
ASCII. Перегляд таблиці ASCII показує, що старші три біти всіх кодів десяткових 
цифр містять комбінацію 011. Якщо всі дані в кадрі інформації складаються з 
десяткових цифр, то, помістивши в заголовок кадру відповідний керуючий символ, 
можна істотно скоротити довжину кадру.</p>
<p><i>Відносне кодування</i>. Альтернативою десятковому упакуванню при передачі 
числових даних з невеликими відхиленнями між послідовними цифрами є передача 
тільки цих відхилень разом з відомим опорним значенням. Такий метод 
використовується, зокрема, у розглянутому вище методі цифрового кодування голосу 
ADPCM, що передає в кожному такті тільки різницю між сусідніми вимірами голосу.</p>
<p><i>Символьне придушення</i>. Часто передані дані містять велика кількість 
повторюваних байт. Наприклад, при передачі чорно-білого зображення чорні 
поверхні будуть породжувати велику кількість нульових значень, а максимально 
освітлені ділянки зображення — велику кількість байт, що складаються з всіх 
одиниць. Передавач сканує послідовність переданих байт і, якщо виявляє 
послідовність із трьох чи більш однакових байт, заміняє її спеціальною 
трьохбайтовою послідовністю, у якій вказує значення байта, кількість його 
повторень, а також відзначає початок цієї послідовності спеціальним керуючим 
символом.</p>
<p><i>Коди перемінної довжини</i>. У цьому методі кодування використовується той 
факт, що не всі символи в переданому кадрі зустрічаються з однаковою частотою. 
Тому в багатьох схемах кодування коди часто зустрічаються символів заміняють 
кодами меншої довжини, а рідко зустрічаються — кодами більшої довжини. Таке 
кодування називається також статистичним кодуванням. Через те, що символи мають 
різну довжину, для передачі кадру можлива тільки біта-орієнтована передача.</p>
<p>При <i>статистичному кодуванні</i> коди вибираються таким чином, щоб при 
аналізі послідовності біт можна було б однозначно визначити відповідність 
визначеної порції біт тому чи іншому символу забороненої комбінації біт. Якщо 
дана послідовність біт являє собою заборонену комбінацію, то необхідно до неї 
додати ще один біт і повторити аналіз. Наприклад, якщо при нерівномірному 
кодуванні для найбільше що часто зустрічається символу “Р” обраний код 1, що 
складається з одного біта, то значення 0 однобітного коду буде забороненим. 
Інакше ми зможемо закодувати тільки два символи. Для іншого символу, що часто 
зустрічається &quot;О&quot; можна використовувати код 01, а код 00 залишити як 
заборонений. Тоді для символу &quot;А&quot; можна вибрати код 001, для символу &quot;П&quot; — код 
0001 і т.п.</p>
<p>Взагалі, нерівномірне кодування найбільш ефективне, коли нерівномірність 
розподілу частот переданих символів достатньо велика, як при передачі довгих 
текстових рядків. Навпроти, при передачі двійкових даних. наприклад кодів 
програм, воно малоефективне, тому що 8-бітові коди при цьому розподілені майже 
рівномірно.</p>
<p>Одним з найбільш розповсюджених алгоритмів, на основі яких будуються 
нерівномірні коди, є алгоритм Хафмана, що дозволяє будувати коди автоматично, на 
підставі відомих частот символів.&nbsp;Існують адаптивні модифікації методу Хафмана, 
які дозволяють будувати дерево кодів &quot;на ходу&quot;, у міру надходження даних від 
джерела.</p>
<p>Багато моделей комунікаційного устаткування, такі як модеми, мости, 
комутатори і маршрутизатори, підтримують протоколи динамічної компресії, що 
дозволяє скоротити обсяг інформації, що передається,&nbsp; в 4, а іноді й у 8 
разів. У таких випадках говорять, що протокол забезпечує коефіцієнт стиску 1:4 
чи 1:8. Існують стандартні протоколи компресії, наприклад V.42bis, a також 
велика кількість нестандартних, фірмових протоколів. Реальний коефіцієнт 
компресії залежить від типу переданих даних, так, графічні і текстові дані 
звичайно стискуються добре, а коди програм — гірше.</p>
<h2>Висновки</h2>
<ul>
  <li>Основною задачею протоколів канального рівня є доставка кадру вузлу 
  призначення в мережі визначеної технології і досить простої топології.</li>
  <li>Асинхронні протоколи розроблялися для обміну даними між низько швидкісними 
  стартостопними пристроями: телетайпами, алфавітно-цифровими терміналами і т.п. 
  У цих протоколах для керування обміном даними використовуються не кадри, а 
  окремі символи з нижньої частини кодових таблиць ASCII чи EBCDIC. Данні 
  користувачів можуть оформлятися в кадри, але байти в таких кадрах завжди 
  відокремлюються друг від друга стартовими і стоповими сигналами.</li>
  <li>Синхронні протоколи посилають кадри як для відправлення даних 
  користувачів, так і для керування обміном. У залежності від способу виділення 
  початку і кінця кадру синхронні протоколи поділяються на 
  символьно-ориентировані і на біт-орієнтовані. У перших для цієї мети 
  використовуються символи кодів ASCII чи EBCDIC, а в останніх — спеціальний 
  набір біт, що називається прапором. Біт-орієнтовані протоколи більш 
  раціонально витрачають поле даних кадру, тому що для виключення з нього 
  значення, що збігає з прапором, додають до нього тільки один додатковий біт, а 
  символьно-ориентировані протоколи додають цілий символ.</li>
  <li>У дейтаграмних протоколах відсутня процедура попереднього встановлення 
  з'єднання, і за рахунок цього термінові дані відправляються в мережу без 
  затримок.</li>
  <li>Протоколи з установленням з'єднання можуть володіти багатьма додатковими 
  властивостями, відсутніми в дейтаграмних протоколах. Найбільше часто в них 
  реалізується така властивість, як здатність відновлювати перекручені і 
  загублені кадри.</li>
  <li>Для виявлення перекручувань найбільш популярні методи, засновані на 
  циклічних надлишкових кодах (CRC), що виявляють багаторазові помилки.</li>
  <li>Для відновлення кадрів використовується метод повторної передачі на основі 
  квитанцій. Цей метод працює по алгоритму з простоями джерела, а також по 
  алгоритму ковзаючого вікна.</li>
  <li>Для підвищення корисної швидкості передачі даних у мережах застосовується 
  динамічна компресія даних на основі різних алгоритмів. Коефіцієнт стиску 
  залежить від типу даних і застосовуваного алгоритму і може коливатися в межах 
  від 1:2 до 1:8.</li>
</ul>
<table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="AutoNumber4">
  <tr>
    <td width="100%" align="left" colspan="3"><hr color="#2D4C54" size="4"></td>
  </tr>
<tr>
    <td width="33%" align="left"><a href="016.htm">Попередня</a></td>
    <td width="33%" align="center"><a href="001.htm">Перша</a></td>
    <td width="34%" align="right"><a href="018.htm">Наступна</a></td>
  </tr>
</table>

</body>

</html>
