<html>

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Language" content="uk">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<title>2.3.1. Асинхронні протоколи</title>

<!--[if gte mso 9]><xml>
<mso:CustomDocumentProperties>
<mso:Categories msdt:dt="string">Навчальний метеріал</mso:Categories>
</mso:CustomDocumentProperties>
</xml><![endif]-->
</head>

<body>

<h3>2.3.1. Асинхронні протоколи</h3>
<p>Асинхронні протоколи являють собою найбільш старий спосіб зв'язку. Ці 
протоколи оперують не з кадрами, а з окремими символами, що представлені байтами 
зі старт-стоповими символами. Асинхронні протоколи ведуть своє походження від 
тих часів, коли два чоловіки зв'язувалися за допомогою телетайпів по каналу 
&quot;точка-точка&quot;. З розвитком техніки асинхронні протоколи стали застосовуватися 
для зв'язку телетайпів, різного роду клавіатур і дисплеїв з обчислювальними 
машинами.</p>
<p>Одиницею переданих даних був не кадр даних, а окремий символ. Деякі символи 
мали керуючий характер, наприклад символ <b>&lt;CR&gt;</b> наказував телетайпу чи 
дисплею виконати повернення каретки на початок рядка. У цих протоколах існують 
керуючі послідовності, що звичайно починаються із символу <b>&lt;ESC&gt;</b>.</p>
<p>Ці послідовності викликали на керованому пристрої досить складні дії — 
наприклад, завантаження нового шрифту на принтер. В асинхронних протоколах 
застосовуються стандартні набори символів, найчастіше ASCII чи EBCDIC. Тому що 
перші 32 чи 27 кодів у цих наборах є спеціальними кодами, що не відображаються 
на дисплеї чи принтері, тому вони використовувалися асинхронними протоколами для 
керування режимом обміну даними. У самих користувальницьких даних, що являли 
собою букви, цифри, а також такі знаки, як @, %, $ і т.п., спеціальні символи 
ніколи не зустрічалися, так що проблеми їхнього відділення від 
користувальницьких даних не існувало. Поступово асинхронні протоколи 
ускладнювалися і стали поряд з окремими символами використовувати цілі блоки 
даних, тобто кадри. Наприклад, популярний протокол XMODEM передає файли між 
двома комп'ютерами використовуючи асинхронні модеми. Початок прийому чергового 
блоку файлу ініціюється символьною командою — приймаюча сторона постійно передає 
символ ASCII NAK. Передавальна сторона, прийнявши NAK, відправляє черговий блок 
файлу, що складає з 128 байт даних, заголовку і кінцівки. Заголовок складається 
зі спеціального символу SOH (Start Of Header) і номера блоку. Кінцівка містить 
контрольну суму блоку даних.</p>
<p>Сторона, що приймає, одержавши новий блок, перевіряла його номер і контрольну 
суму. У випадку збігу цих параметрів з очікуваними приймач відправляв символ АСК, 
а в противному випадку — символ NAK, після чого передавач повинний був повторити 
передачу даного блоку. Наприкінці передачі файлу передавався символ ЕОХ. Як 
видно з опису протоколу XMODEM, частина керуючих операцій виконувалася в 
асинхронних протоколах посилкою в асинхронному режимі окремих символів, у той же 
час частина даних пересилалася блоками, що більш характерно для синхронних 
протоколів.</p>
<table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="AutoNumber4">
  <tr>
    <td width="100%" align="left" colspan="3"><hr color="#2D4C54" size="4"></td>
  </tr>
<tr>
    <td width="33%" align="left"><a href="012.htm">Попередня</a></td>
    <td width="33%" align="center"><a href="001.htm">Перша</a></td>
    <td width="34%" align="right"><a href="014.htm">Наступна</a></td>
  </tr>
</table>

</body>

</html>
