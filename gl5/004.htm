<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="uk">
<link rel=Edit-Time-Data href=../tmp/514_т.files/editdata.mso>
<title>5.1.4. Протоколи маршрутизації</title>
</head>
<body lang=Ua>
<h3>5.1.4. Протоколи маршрутизації</h3>
<p>Завдання маршрутизації зважується на основі
аналізу таблиць маршрутизації, розміщених у
всіх маршрутизаторах і кінцевих вузлах мережі.
Яким же образом відбувається формування цих
таблиць? Якими засобами забезпечується адекватність
інформації, що втримується в них, що постійно
змінюється структурі мережі? Основна робота зі
створення таблиць маршрутизації виконується автоматично, але й можливість
вручну скорегувати або доповнити таблицю теж, як правило, передбачається.</p>
<p>Для автоматичної побудови таблиць
маршрутизації маршрутизатори обмінюються інформацією про топологію складеної мережі у
відповідності зі спеціальним службовим
протоколом. Протоколи цього типу називаються протоколами маршрутизації (або маршрутизируючими
протоколами). Протоколи маршрутизації (наприклад, RIP, OSPF, NLSP) варто
відрізняти від власне мережевих
протоколів (наприклад, IP, IPX). І ті й інші виконують функції мережного
рівня моделі OSI - беруть участь у доставці пакетів адресатові
через різнорідну складену мережу. Але в той час як перші
збирають і передають по мережі чисто службову
інформацію, другі призначені для передачі користувальницьких даних, як це
роблять протоколи канального рівня. Протоколи маршрутизації використовують мережеві
протоколи як транспортний засіб. При обміні маршрутною інформацією пакети
протоколу маршрутизації містяться в полі даних пакетів мережевого
рівня або навіть транспортного рівня, тому з погляду вкладеності пакетів
протоколи маршрутизації формально варто було б віднести до більш високого рівня, чим
мережевий.</p>
<p>У тому,
що маршрутизатори для ухвалення рішення про просування пакета звертаються до
адресних таблиць, можна побачити їх деяку подібність із мостами й комутаторами. Однак
природа використовуваних ними адресних таблиць сильно різниться.
Замість Мас-адрес у таблицях маршрутизації
вказуються номери мереж, які з'єднуються в
інтермережу. Іншою відмінністю таблиць
маршрутизації від адресних таблиць мостів є
спосіб їхнього створення. У той час як міст будує
таблицю, пасивно спостерігаючи за минаючими через нього інформаційними кадрами,
що посилаються кінцевими вузлами мережі один
одному, маршрутизатори зі своєї ініціативи обмінюються спеціальними службовими
пакетами, повідомляючи сусідам про відомі їм мережі в
інтермережі, маршрутизаторах і про зв'язки цих
мереж з
маршрутизаторами. Звичайно враховується не тільки топологія зв'язків, але і їх пропускна здатність і стан. Це дозволяє
маршрутизаторам швидше адаптуватися до змін конфігурації мережі, а також правильно передавати пакети в мережах з довільною
топологією, що допускає наявність замкнутих
контурів.</p>
<p>За допомогою протоколів
маршрутизації маршрутизатори складають карту зв'язків мережі того або іншого ступеня деталізації. На підставі цієї інформації для
кожного номера мережі приймається рішення про те, якому наступному маршрутизатору слід передавати пакети, що направляються у цю мережу,
щоб маршрут виявився раціональним. Результати
цих рішень заносяться в таблицю маршрутизації.
При зміні конфігурації мережі деякі записи в таблиці стають недійсними. У таких випадках пакети, відправлені по помилкових маршрутах, можуть зациклюватися й губитися.
Від того, наскільки швидко протокол маршрутизації приводить у відповідність вміст таблиці реальному стану
мережі, залежить якість роботи всієї мережі.</p>
<p>Протоколи маршрутизації можуть
бути побудовані на основі різних алгоритмів, що відрізняються способами
побудови таблиць маршрутизації, способами вибору найкращого маршруту й інших
особливостей своєї роботи.</p>
<p>У всіх описані
вище прикладах при виборі раціонального маршруту визначався
тільки наступний (найближчий) маршрутизатор, а
не вся послідовність маршрутизаторів від початкового до кінцевого вузла.
Відповідно до цього підходу маршрутизація виконується за розподіленою схемою — кожен маршрутизатор відповідальний за вибір тільки
одного кроку маршруту, а остаточний маршрут складається в результаті роботи
всіх маршрутизаторів, через які проходить даний пакет. Такі алгоритми
маршрутизації називаються <i>однокроковими</i><i>.</i></p>
<p>Существует і прямо протилежний, багатокроковий
підхід — <i>маршрутизація від джерела (Source Routing). </i>Відповідно до його
вузол-джерело задає в пакеті, що відправляє в мережу, повний
маршрут його проходження через всі проміжні маршрутизатори. При використанні
багатокрокової маршрутизації немає необхідності будувати
й аналізувати таблиці маршрутизації. Це прискорює проходження пакета по мережі, розвантажує маршрутизатори, але при цьому більше навантаження лягає на кінцеві вузли. Ця схема
в обчислювальних мережах застосовується
сьогодні набагато рідше, ніж схема розподіленої однокрокової
маршрутизації. Однак у новій версії протоколу IP поряд із класичною однокроковою маршрутизацією буде дозволена й маршрутизація
від джерела.</p>
<p>Однокрокові алгоритми залежно від способу формування
таблиць маршрутизації діляться на три класи:</p>
<ol type="I">
	<li>алгоритми фіксованої (або статичної) маршрутизації;</li>
	<li>алгоритми простої маршрутизації;</li>
	<li>алгоритми адаптивної (або динамічної) маршрутизації.</li>
</ol>
<p>В алгоритмах <i>фіксованої
маршрутизації </i>всі записи в таблиці
маршрутизації є статичними. Адміністратор мережі сам вирішує,
на які маршрутизатори треба передавати пакети з
тими або іншими адресами, і вручну (наприклад, за допомогою утиліти route ОС Unix
або Windows NT) заносить відповідні записи в таблицю
маршрутизації. Таблиця, як правило, створюється в процесі завантаження, надалі
вона використається без змін доти, поки її
вміст не буде відредаговано вручну. Такі
виправлення можуть знадобитися, наприклад, якщо в мережі
відмовляє який-небудь маршрутизатор і його функції покладають на інший
маршрутизатор. Розрізняють одномаршрутні таблиці, у
яких для кожного адресата заданий один шлях, і багатомаршрутні
таблиці, що визначають кілька альтернативних шляхів для кожного адресата. У 
багатомаршрутних таблицях повинне бути задане
правило вибору одного з маршрутів. Найчастіше один шлях є основним, а інші - резервними. Зрозуміло, що алгоритм фіксованої
маршрутизації з його ручним способом
формування таблиць маршрутизації прийнятний тільки в невеликих мережах із простою топологією. Однак цей алгоритм
може бути ефективно використаний і для роботи на магістралях великих мереж, тому що сама магістраль може мати просту
структуру з очевидними найкращими шляхами проходження пакетів у підмережі, приєднані
до магістралі.</p>
<p>В алгоритмах <i>простої маршрутизації
</i>таблиця маршрутизації або зовсім не використається,
або будується без участі протоколів
маршрутизації. Виділяють три типи простої
маршрутизації:</p>
<ul type=disc>
	<li><i>випадкова маршрутизація, </i>коли прибулий пакет посилає в першому випадковому напрямку, що потрапив, крім вихідного;</li>
	<li><i>лавинна маршрутизація, </i>коли пакет широкомовно посилає по всіх можливих напрямках, крім вихідного (аналогічно обробці мостами кадрів з невідомою адресою);</li>
	<li><i>маршрутизація по попередньому досвіді, </i>коли вибір маршруту здійснюється по таблиці, але таблиця будується за принципом моста шляхом аналізу адресних полів пакетів, що з'являються на вхідних портах.</li>
</ul>
<p>Найпоширенішими є алгоритми <i>адаптивної </i>(або <i>динамічної) маршрутизації. 
</i>Ці алгоритми
забезпечують автоматичне відновлення таблиць
маршрутизації після зміни конфігурації мережі.
Протоколи, побудовані на основі адаптивних
алгоритмів, дозволяють всім маршрутизаторам збирати інформацію про топологію зв'язків у мережі,
оперативно відпрацьовуючи всі зміни конфігурації зв'язків.
У таблицях маршрутизації при адаптивній маршрутизації звичайно є інформація про
інтервал часу, протягом якого даний маршрут буде залишатися
дійсним. Цей час називають <i>часом життя
маршруту</i> (<i>Time To Live, TTL</i>).</p>
<p>Адаптивні алгоритми звичайно
мають розподілений характер, що виражається в тому,
що в мережі відсутні які-небудь виділені
маршрутизатори, які збирали б й узагальнювали топологічну інформацію: ця робота
розподілена між всіма маршрутизаторами.</p>
<table border="0" cellpadding="0" cellspacing="1" width="100%" id="table1">
	<tr>
		<td>
<img width=36 height=35
src=images/znak.gif v:shapes=_x0000_s1026 hspace="10"></td>
		<td><i>Останнім часом намітилася тенденція використати так звані сервери маршрутів. Сервер маршрутів
збирає маршрутну інформацію, а потім роздає її
по запитах маршрутизаторам, які звільняються в цьому випадку від функції
створення таблиць маршрутизації, або створюють тільки частини
цих таблиць. З'явилися спеціальні протоколи взаємодії маршрутизаторів із
серверами маршрутів, наприклад Next Hop Resolution Protocol (NHRP)</i></td>
	</tr>
</table>
<p>Адаптивні
алгоритми маршрутизації повинні відповідати декільком
важливим вимогам. По-перше, вони повинні забезпечувати, якщо не оптимальність,
те хоча б раціональність маршруту. По-друге, алгоритми повинні бути досить
простими, щоб при їхній реалізації не витрачалося занадто багато мережевих ресурсів, зокрема вони не повинні вимагати
занадто великого обсягу обчислень або
породжувати інтенсивний службовий трафік. І нарешті, алгоритми
маршрутизації повинні мати властивість збіжності, тобто завжди приводити до
однозначного результату за прийнятний час.</p>
<p>Адаптивні протоколи обміну
маршрутною інформацією, які застосовуються сьогодні
в обчислювальних мережах, у свою чергу
діляться на дві групи, кожна з яких пов'язана
з одним з наступних типів алгоритмів:</p>
<ul type=disc>
	<li>дистанційно-векторні алгоритми (Distance Vector Algorithms, DVA);</li>
	<li>алгоритми стану зв'язків (Link State Algorithms, LSA).</li>
</ul>
<p>В алгоритмах <i>дистанційно-векторного
типу </i>кожен маршрутизатор періодично й
широкомовно розсилає по мережі вектор,
компонентами якого є відстані від даного
маршрутизатора до всіх відомих йому мереж. Під відстанню звичайно розуміється число хопів. Можлива й інша
метрика, що враховує не тільки число проміжних маршрутизаторів, але й час
проходження пакетів по мережі між сусідніми
маршрутизаторами. При одержанні вектора від сусіда маршрутизатор нарощує
відстані до зазначених у векторі мереж на відстань до даного сусіда. Одержавши вектор від сусіднього маршрутизатора, кожний маршрутизатор додає до нього
інформацію про відомі йому маршрутизатори інших мереж,
про які він довідався безпосередньо (якщо вони
підключені до його портів) або з аналогічних оголошень інших маршрутизаторів, а
потім знову розсилає нове значення вектора по мережі.
Зрештою, кожен маршрутизатор отримає інформацію про всіх
наявних в інтермережі мережах і про відстань
до них через сусідні маршрутизатори.</p>
<p>Дистанційно-векторні алгоритми
добре працюють тільки в невеликих мережах. У великих мережах
вони засмічують лінії зв'язку інтенсивним широкомовним
трафіком, до того ж
зміни конфігурації можуть спрацьовувати по цьому алгоритмі
не завжди коректно, тому що маршрутизатори не мають точного подання про топологію зв'язків
у мережі, а мають у своєму розпорядженні
тільки узагальнену інформацію - вектором дистанцій, до того ж отриману через посередників. Робота маршрутизатора
відповідно до дистанційно-векторного протоколу нагадує роботу моста, тому що точної топологічної картини мережі такий маршрутизатор не має.</p>
<p>Найпоширенішим протоколом, заснованим на дистанційно-векторному алгоритмі, є протокол RIP, що розповсюджений
у двох версіях - RIP IP, що працює із протоколом IP, і RIP IPX, що працює із
протоколом IPX.</p>
<p><b><i>Алгоритми стану зв'язків</i></b> забезпечують кожен
маршрутизатор інформацією, достатньою для
побудови точного графа зв'язків мережі. Всі маршрутизатори працюють на підставі
однакових графів, що робить процес маршрутизації більше
стійким до змін конфігурації. «Широкомовне»
розсилання (тобто передача пакета всім безпосереднім сусідам маршрутизатора) використається тут тільки при змінах стану зв'язків, що
відбувається в надійних мережах не так часто.
Вершинами графа є як маршрутизатори, так і
поєднувані ними мережі. Розповсюджувана по мережі інформація складається з опису зв'язків різних типів: маршрутизатор-маршрутизатор,
маршрутизатор-мережа.</p>
<p>Щоб зрозуміти, у якому стані перебувають
лінії зв'язку, підключені до його портів,
маршрутизатор періодично обмінюється короткими пакетами HELLO зі своїми найближчими сусідами. Цей службовий трафік також засмічує мережу,
але не в такому ступені як, наприклад, RIP-пакети, тому що пакети HELLO мають
набагато менший обсяг.</p>
<p>Протоколами, заснованими на
алгоритмі стану зв'язків,
є протоколи IS-IS (Intermediate
System to Intermediate System) стека OSI, OSPF
(Open Shortest Path First) стека TCP/IP і
недавно реалізований протокол NLSP стека Novell</p>
<table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="table1">
  <tr>
    <td width="100%" align="left" colspan="3"><hr color="#2D4C54" size="4"></td>
  </tr>
  <tr>
    <td width="33%" align="left"><a href="003.htm">Попередня</a></td>
    <td width="33%" align="center"><a href="001.htm">Перша</a></td>
    <td width="34%" align="right"><a href="005.htm">Наступна</a></td>
  </tr>
</table></body>
</html>
