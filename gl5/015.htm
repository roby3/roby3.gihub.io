<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="uk">
<link rel=Edit-Time-Data href=../tmp/vol5_2_8_u.files/editdata.mso>
<title>5.2.8. Відображення доменних імен на IP-адреси</title>
</head>
<body lang=Ua>
<h3>5.2.8. Відображення доменних
імен на IP-адреси</h3>
<h4>Організація доменів і доменних імен</h4>
<p>Для ідентифікації комп'ютерів
апаратне й програмне забезпечення в мережах
TCP/IP покладається на IP-адреси, тому для доступу до мережевого
ресурсу в параметрах програми цілком достатньо вказати IP-адресу,
щоб програма правильно зрозуміла, до якого хосту їй потрібно звернутися. Наприклад,
команда ftp://192.45.66.17 буде встановлювати сеанс зв'язку
з потрібним ftp-сервером, а команда http://203.23.106.33
відкриє початкову сторінку на корпоративному
Web-сервері. Однак користувачі звичайно воліють працювати із символьними
іменами комп'ютерів, і операційні системи локальних мереж
привчили їх до цього зручного способу. Отже, у
мережах TCP/IP повинні існувати символьні
імена хостів і
механізм для встановлення відповідності між символьними іменами й IP-адресами.</p>
<p>В операційних системах, які
спочатку розроблялися для роботи в локальних мережах,
таких як Novell NetWare, Microsoft Windows або IBM OS/2, користувачі завжди працювали із символьними
іменами комп'ютерів. Тому що локальні мережі
складалися з невеликого числа комп'ютерів, то використовувалися
так звані плоскі імена, що складаються з послідовності символів, не розділених на частини.
Прикладами таких імен є: NW1_1, mail2, Kiev_SALES_2. Для встановлення відповідності між
символьними іменами й Мас-адресами в цих
операційних системах застосовувався механізм широкомовних запитів, подібний до
механізму запитів протоколу ARP. Так, широкомовний спосіб дозволу імен реалізований у протоколі NetBIOS, на якому були побудовані багато локальних ОС. Так
звані NetBIOS-імена стали на довгі роки одним з основних типів плоских імен у локальних мережах.</p>
<p>Для стека TCP/IP, розрахованого в загальному
випадку на роботу в великих територіально
розподілених мережах, подібний підхід виявляється неефективним
з кількох причин.</p>
<p>Плоскі імена не дають можливості розробити
єдиний алгоритм забезпечення унікальності імен у межах великої мережі. У невеликих мережах
унікальність імен комп'ютерів забезпечує адміністратор мережі,
записуючи кілька десятків імен у журналі або файл.
При рості мережі
задачу вирішують уже декілька адміністраторів,
погоджуючи імена між собою неформальним
способом. Однак якщо мережа розташована в різних містах або країнах, то
адміністраторам кожної частини мережі потрібно вигадати
спосіб іменування, що дозволив би їм давати
імена новим комп'ютерам незалежно від інших адміністраторів, забезпечуючи в той
же час унікальність імен для всієї мережі.
Самий надійний спосіб розв'язання цієї задачі - відмова
від плоских імен у принципі.</p>
<p>Широкомовний спосіб встановлення
відповідності між символьними іменами й локальними адресами добре працює тільки
в невеликій локальній мережі, не розділеній на підмережі. У великих мережах,
де загальна широкомовність
не підтримується, потрібен інший спосіб дозволу
символьних імен. Звичайно гарною альтернативою широкомовність
є застосування централізованої служби, що
підтримує відповідність між різними типами адрес всіх комп'ютерів мережі. Компанія Microsoft
для своєї корпоративної операційної системи Windows
NT розробила централізовану службу WINS, що підтримує базу даних NetBIOS-імен і
відповідних їм
IP-адрес.</p>
<p>Для ефективної організації
іменування комп'ютерів у великих мережах природним є застосування ієрархічних складених
імен.</p>
<p>У стеці TCP/IP застосовується
доменна система імен, що має ієрархічну деревовидну
структуру, що допускає використання в імені
довільної кількості складових частин (мал. 5.11).</p>
<table border="0" width="100%" id="table1">
	<tr>
		<td align="center">
<img width=456 height=328
src=images/im011.jpg v:shapes=_x0000_i1025></td>
	</tr>
	<tr>
		<td align="center">Рис. 5.11. Простір доменних імен</td>
	</tr>
</table>
<p>Ієрархія доменних імен аналогічна
ієрархії імен файлів, прийнятої в багатьох
популярних файлових системах. Дерево імен починається з
кореня, позначеного тут точкою (.). Потім слідує старша символьна частина імені, друга по старшинству
символьна частина імені й т.д. Молодша частина
імені відповідає кінцевому вузлу мережі. На
відміну від імен файлів, при записі яких спочатку вказується сама старша складова,
потім складова більш низького рівня й т.д.,
запис доменного імені починається із самої
молодшої складової, а закінчується самою старшою.
Складові частини доменного імені
відокремлюється друг від друга точкою.
Наприклад, в імені partnering.microsoft.com складова partnering
є ім'ям одного з комп'ютерів у домені
microsoft.com.</p>
<p>Поділ імені на
частині <i>дозволяє розділити адміністративну
відповідальність </i>за призначення унікальних імен між різними людьми або
організаціями в межах свого рівня ієрархії. Так, для приклада,
наведеного на мал. 5.11, одна людина може
відповідати за те, щоб всі імена, які мають
закінчення «uа», мали унікальну
наступну вниз по ієрархії частину. Якщо ця
людина справляється зі своїми обов'язками, то всі імена типу www.uа, mailmmt.uf або m2.zil.mmt.ua будуть відрізнятися другою по старшинству
частиною.</p>
<p>Розподіл адміністративної відповідальності
дозволяє вирішити проблему утворення
унікальних імен без взаємних консультацій між організаціями, відповідальними за
імена одного рівня ієрархії. Очевидно, що повинна існувати одна організація,
відповідальна за призначення імен верхнього рівня ієрархії.</p>
<p>Сукупність імен, у яких кілька старших складових частин збігаються,
утворюють <b><i>домен </i><i>імен</i></b> (<b><i>domain</i></b>).
Наприклад, імена wwwl.zil.mmt.uа, ftp.zil.mmt.uа, meta.ua й sl.iir.uf входять у домен 
<b>ua</b>, тому що всі ці імена мають одну загальну старшу частину - ім'я uа. Іншим прикладом є домен mgu.ru. Із представлених на мал. 5.11 імен у нього входять
імена sl.mgu.ru, s2.mgu.ru й rn.mgu.ru.
Цей домен утворять імена, у яких дві старші
частини завжди рівні mgu.ru. Ім'я www.mmt.ru
у домен mgu.ru не входить, тому що має складову, що
відрізняється, mmt.</p>
<table border=0 cellspacing=3 cellpadding=0 width="100%">
	<tr>
		<td valign=top>
		<img border="0" src="images/znak.gif" width="36" height="35" vspace="4"></td>
		<td valign=top>
		Термін<i> «домен» дуже багатозначний, тому його потрібно трактувати в рамках певного контексту. Крім доменів імен стека TCP/IP у комп'ютерній літературі також часто згадуються домени Windows NT, домени колізій і деякі інші. Загальним у всіх цих термінів є те, що вони описують деяку множину комп'ютерів, що володіє якою-небудь певною властивістю.</i></td>
	</tr>
</table>
<p>Якщо один
домен входить в інший домен як його складова
частина, то такий домен можуть називати <b><i>піддоменом</i></b> (<b><i>subdomain</i></b>),<i></i>хоча назва домен за ним також залишається.
Звичайно піддомен
називають по імені тієї його старшої
складової, що відрізняє його від інших піддоменів.
Наприклад, піддомен mmt.ru звичайно називають піддоменом (або доменом)
mmt. Ім'я піддомену
призначає адміністратор вищестоящого домена. Гарною аналогією домена є каталог файлової системи.</p>
<p>Якщо в кожному
домені й піддомені забезпечується унікальність імен
наступного рівня ієрархії, то й вся система імен буде складатися з унікальних
імен.</p>
<p>За аналогією з файловою системою, у доменній системі імен
розрізняють короткі імена, відносні імена й повні доменні імена. Коротке ім'я —
це ім'я кінцевого вузла мережі: хоста або порту маршрутизатора.
Коротке ім'я — це лист дерева імен. Відносне
ім'я — це складене ім'я, що починається з деякого рівня ієрархії, але не самого верхнього.
Наприклад, wwwl.zil — це відносне ім'я. <b><i>Повне доменне ім'я</i></b> (<b><i>fully</i></b><b><i> qualified domain name, FQDN</i></b>) включає складові всіх рівнів
ієрархії, починаючи від короткого імені й
кінчаючи кореневою точкою: wwwl.zu.mmt.ru.</p>
<p>Необхідно підкреслити, що комп'ютери що входять у домен у відповідності зі своїми складеними
іменами, при цьому вони можуть мати зовсім
різні IP-адреси, що належать до різних мереж і
підмереж. Наприклад, у
домен mgu.ru можуть входити хости з
адресами 132.13.34.15, 201.22.100.33,14.0.0.6. Доменна система імен реалізована
в мережі Internet,
але вона може працювати і як автономна система імен у великій корпоративній мережі, що використовує
стек TCP/IP, але не пов'язаної з Internet.</p>
<p>В Internet
кореневий домен управляється центром InterNIC. Домени верхнього
рівня призначаються для кожної країни, а також на організаційній основі. Імена цих доменів повинні
додержуватися міжнародного стандарту ISO&nbsp;3166. Для позначення країн використовуються трибуквені й двобуквені абревіатури, а для різних типів організацій
- наступні позначення:</p>
<ul type=disc>
	<li>com - комерційні організації (наприклад, microsoft.com);</li>
	<li>edu - освітні (наприклад, mit.edu);</li>
	<li>gov - урядові організації (наприклад, nsf.gov);</li>
	<li>org - некомерційні організації (наприклад, fidonet.org);</li>
	<li>net - організації, що підтримують мережі (наприклад, nsf.net).</li>
</ul>
<p>Кожен домен адмініструєтся окремою організацією, що
звичайно розбиває свій домен на піддомени й передає функції
адміністрування цих піддоменів іншим організаціям. Щоб отримати доменне ім'я, необхідно зареєструватися в
якій-небудь організації, який InterNIC делегували
свої повноваження по розподілу імен доменів.</p>
<h4>Система доменних імен DNS</h4>
<p>Відповідність між доменними
іменами й IP-адресами може встановлюватися як засобами
локального хоста, так і засобами
централізованої служби. На ранньому етапі розвитку Internet
на кожному хосту вручну створювався текстовий файл із
відомим іменем <i>hosts</i>. Цей файл складався з
деякої кількості рядків, кожен з яких містив
одну пару «IP-адреса - доменне ім'я»,
наприклад 102.54.94.97 - rhino.acme.com.</p>
<p>По мірі зростання
Internet файли hosts також зростали, і створення масштабованого рішення для дозволу
імен стало необхідністю.</p>
<p>Таким рішенням
стала спеціальна служба — <b><i>система
доменних імен</i></b> (<b><i>Domain</i></b><b><i> Name System, DNS</i></b>).<i></i>DNS - це централізована
служба, заснована на розподіленій базі відображень «доменне ім'я - IP-адреса». Служба DNS використовує
у своїй роботі протокол типу «клієнт-сервер». У ньому
визначені DNS-сервери й DNS-клієнти. DNS-сервери підтримують розподілену базу
відображень, а DNS-клієнти звертаються до серверів із запитами про дозвіл доменного імені
в IP-адресу.</p>
<p>Служба DNS використовує текстові файли майже такого формату, як
і файл hosts, і ці файли адміністратор також
підготовляє вручну. Однак служба DNS спирається
на ієрархію доменів, і кожен
сервер служби DNS зберігає тільки частину імен
мережі, а не всі
імена, як це відбувається при використанні файлів hosts.
При збільшенні кількості вузлів у мережі проблема масштабування вирішується створенням нових
доменів і піддоменів імен і додаванням у службу DNS нових
серверів.</p>
<p>Для кожного
домена імен
створюється свій DNS-сервер. Цей сервер може зберігати відображення «доменне
ім'я - IP-адреса» для всього
домена, включаючи всі його піддомени.
Однак при цьому рішення виявляється погано масштабованим, тому що при додаванні нових піддоменів
навантаження на цей сервер може перевищити його можливості. Частіше сервер домена зберігає тільки
імена, які закінчуються на наступному нижче рівні ієрархії в порівнянні з ім'ям домена.
(Аналогічно каталогу файлової системи, що містить записи про
файли й підкаталоги, безпосередньо в нього «вхідні».)
Саме при такій організації служби DNS навантаження з дозволу імен
розподіляється більш-менш рівномірно між всіма DNS-серверами мережі. Наприклад, у першому випадку DNS-сервер домена mmt.ru
буде зберігати відображення для всіх імен, що закінчуються на mmt.ru: wwwl.zil.mmt.ru, ftp.zil.mmt.ru, mau.mmt.ru і т.д.
У другому випадку цей сервер зберігає відображення тільки імен типу mail.mmt.ru, www.mmt.ru, а всі
інші відображення повинні зберігатися на DNS-сервері піддомена zil.</p>
<p>Кожен DNS-сервер крім таблиці відображень імен містить посилання
на DNS-сервери своїх піддоменів. Ці посилання
зв'язують окремі DNS-сервери в єдину службу DNS. Посилання
являють собою IP-адреси відповідних серверів. Для обслуговування кореневого домена виділено
декілька дублюючих один одного DNS-серверів,
IP-адреси яких є широко відомими (їх можна довідатися, наприклад, в InterNIC).</p>
<p>Процедура дозволу DNS-імені багато в чому
аналогічна процедурі пошуку файловою системою
адреси файлу по його символьному імені.
Дійсно, в обох випадках складене ім'я відображає ієрархічну структуру організації
відповідних довідників - каталогів файлів або таблиць DNS. Тут домен і доменний
DNS-сервер є аналогом каталогу файлової
системи. Для доменних імен, так само як і для символьних імен файлів,
характерна незалежність іменування від фізичного місця розташування.</p>
<p>Процедура пошуку адреси файлу по символьному
імені полягає в послідовному перегляді
каталогів, починаючи з кореневого. При цьому попередньо перевіряється кеш і поточний каталог. Для
визначення IP-адреси по доменному імені також
необхідно переглянути всі DNS-сервери, що обслуговують ланцюжок піддоменів, що входять в
ім'я хоста, починаючи з кореневого домена. Істотною же відмінністю є те,
що файлова система розташована на одному
комп'ютері, а служба DNS по своїй природі є
розподіленою.</p>
<p>Існують дві основні схеми дозволу DNS-імен. У першому варіанті роботу з пошуку IP-адреси координує DNS-клієнт:</p>
<ul type=disc>
	<li>DNS-клієнт звертається до кореневого DNS-сервера із зазначенням повного доменного імені;</li>
	<li>DNS-сервер відповідає, указуючи адресу наступного DNS-сервера, що обслуговує домен верхнього рівня, заданий в старшій частині запитаного імені;</li>
	<li>DNS-клієнт робить запит наступного DNS-сервера, що відсилає його до DNS-сервера потрібного піддомена, і т.д., поки не буде знайдений DNS-сервер, у якому зберігається відповідність запитаного імені IP-адресі. Цей сервер дає остаточну відповідь клієнту.</li>
</ul>
<p>Така схема взаємодії називається нерекурсивною або ітеративною,
коли клієнт сам ітеративно виконує послідовність запитів до
різних серверів імен. Тому що ця схема завантажує клієнта досить складною
роботою, то вона застосовується рідко.</p>
<p>У другому варіанті реалізується
рекурсивна процедура:</p>
<ul type=disc>
	<li>DNS-клієнт запитує локальний DNS-сервер, тобто той сервер, що обслуговує піддомен, до якого належить ім'я клієнта;</li>
	<li>якщо локальний DNS-сервер знає відповідь, то він відразу ж повертає його клієнту; це може відповідати випадку, коли запитане ім'я входить у той же піддомен, що й ім'я клієнта, а також може відповідати випадку, коли сервер уже дізнавався дану відповідність для іншого клієнта й зберіг його у своєму кеші;</li>
	<li>якщо ж локальний сервер не знає відповідь, то він виконує ітеративні запити до кореневого сервера й т.д. точно так само, як це робив клієнт у першому варіанті; одержавши відповідь, він передає його клієнту, що весь цей час просто чекав її від свого локального DNS-сервера.</li>
</ul>
<p>У цій схемі клієнт передоручає
роботу своєму серверу, тому схема називається непрямою або рекурсивною.
Практично всі DNS-клієнти використовують
рекурсивну процедуру.</p>
<p>Для прискорення пошуку IP-адрес DNS-сервери широко застосовують
процедуру кешування минаючих через них відповідей. Щоб служба DNS могла
оперативно відпрацьовувати зміни, що відбуваються в мережі,
відповіді кешуються на
певний час - звичайно від декількох годин до декількох днів.</p>
<table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="table1">
  <tr>
    <td width="100%" align="left" colspan="3"><hr color="#2D4C54" size="4"></td>
  </tr>
  <tr>
    <td width="33%" align="left"><a href="014.htm">Попередня</a></td>
    <td width="33%" align="center"><a href="001.htm">Перша</a></td>
    <td width="34%" align="right"><a href="016.htm">Наступна</a></td>
  </tr>
</table></body>
</html>
